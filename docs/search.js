window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = [{"fullname": "protkit", "modulename": "protkit", "kind": "module", "doc": "<h1 id=\"protkit\">Protkit</h1>\n\n<p>Protkit is an open source Python library that can be used for a variety of tasks in computational biology\nand bioinformatics, focusing on structural bioinformatics, protein engineering and machine learning.</p>\n\n<p>It is designed to support the broad community of computational biologists,\nbioinformaticians and machine learning researchers in academia, industry\nand government labs.</p>\n\n<p>Protkit can be used for a variety of computational biology tasks across the computational biology pipeline, such as:</p>\n\n<ul>\n<li><strong>Reading and writing data</strong> from popular structure file formats, such as\nPDB, PQR, MMTF, mmCIF; and sequence file formats, such as FASTA.</li>\n<li><strong>Downloading</strong> data from popular databases of protein structures, such as the PDB RCSB, UniProt and SAbDab.</li>\n<li><strong>Data structures</strong> for representing proteins, protein complexes, chains,\nresidues, atoms and sequences. These data structures provide capabilities to extract data\nin both hierarchical and linear formats. It is extensible and easy to add\nnew properties to the data structure. It has a rich set of methods for extracting\nand filtering data from the data structure.</li>\n<li><strong>Detecting and fixing anomalies</strong> in protein structures, such as missing atoms,\nmissing residues, detecting sequence gaps, detecting atomic clashes, removing\nhetero residues or water molecules, and removing alternate conformations.</li>\n<li><strong>Calculating properties</strong> of proteins, such as hydrophobicity, charge, surface areas,\nsecondary structures, dihedral angles, interface residues and more.</li>\n<li><strong>Geometric operations</strong> on proteins, such as aligning and superimposing\nstructures.</li>\n<li><strong>Metrics</strong> for comparing proteins, such as RMSD and Sequence Similarity.</li>\n<li><strong>Featurization</strong> of proteins and their properties enabling preparation of datasets\nfor <strong>machine learning</strong> applications.</li>\n<li>Performing and enabling a large variety of <strong>computational tasks</strong> on proteins,\nsuch as protein folding, protein docking, protein-protein binding affinity prediction,\nhumanisation of antibodies, prediction of developability characteristics etc. Care is taken\nthat the various tools are interoperable and can be used together in a seamless manner.</li>\n</ul>\n\n<p>Protkit is an open source library that is free to use and modify.  We welcome\ncontributions from the community.</p>\n\n<hr />\n\n<h2 id=\"installation\">Installation</h2>\n\n<h3 id=\"installation-from-pypi\">Installation from PyPI</h3>\n\n<p><code>protkit</code> requires Python 3.6 or higher.  It can be installed using <code>pip</code>:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>pip<span class=\"w\"> </span>install<span class=\"w\"> </span>protkit\n</code></pre>\n</div>\n\n<p>A number of dependencies will be installed automatically, such as <code>numpy</code>, <code>joblib</code>, <code>requests</code> and others.</p>\n\n<p>See <a href=\"https://pypi.org/project/protkit/\">Protkit</a> on PyPI for more details.</p>\n\n<h3 id=\"cloning-the-repository\">Cloning the Repository</h3>\n\n<p>You can also clone the repository and install it from source:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>git<span class=\"w\"> </span>clone<span class=\"w\"> </span>https://github.com/silicogenesis/protkit.git\n</code></pre>\n</div>\n\n<p>You can install the project requirements using <code>pip</code>:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>pip<span class=\"w\"> </span>install<span class=\"w\"> </span>-r<span class=\"w\"> </span>requirements.txt\n</code></pre>\n</div>\n\n<hr />\n\n<h2 id=\"quick-start-example\">Quick Start Example</h2>\n\n<p>Protkit is designed to be intuitive and easy to use.  An extensive set of examples can be found in the <a href=\"QUICK_START_GUIDE.md\">Quick Start Guide</a>.</p>\n\n<p>Here is a simple example to get you started.  It illustrates how powerful computation can be done with Protkit in just a few lines of code.</p>\n\n<p>In the example, we download a PDB file from the RCSB, extract the A and B chains and do some cleanup like removing hetero atoms and fixing disordered atoms.  We then compute dihedral angles and surface areas for the protein and save it to a file.  We then load the protein from the file and print the surface area and a note that we added to the protein.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">protkit.download</span> <span class=\"kn\">import</span> <span class=\"n\">Download</span>\n<span class=\"kn\">from</span> <span class=\"nn\">protkit.file_io</span> <span class=\"kn\">import</span> <span class=\"n\">PDBIO</span><span class=\"p\">,</span> <span class=\"n\">ProtIO</span>\n<span class=\"kn\">from</span> <span class=\"nn\">protkit.properties</span> <span class=\"kn\">import</span> <span class=\"n\">DihedralAngles</span><span class=\"p\">,</span> <span class=\"n\">SurfaceArea</span>\n\n<span class=\"c1\"># Download a PDB file from the RCSB PDB database and save it to a file.</span>\n<span class=\"n\">Download</span><span class=\"o\">.</span><span class=\"n\">download_pdb_file_from_rcsb</span><span class=\"p\">(</span><span class=\"s2\">&quot;1ahw&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;1ahw.pdb&quot;</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Load a PDB file into a Protein object.</span>\n<span class=\"n\">protein</span> <span class=\"o\">=</span> <span class=\"n\">PDBIO</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s2\">&quot;1ahw.pdb&quot;</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># Print the number of chains in the protein.</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">num_chains</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Keep only the A and B chains</span>\n<span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">keep_chains</span><span class=\"p\">([</span><span class=\"s2\">&quot;A&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;B&quot;</span><span class=\"p\">])</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">get_chain</span><span class=\"p\">(</span><span class=\"s1\">&#39;A&#39;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">sequence</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Do a bit of cleanup, by removing any hetero atoms and fixing disordered atoms.</span>\n<span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">remove_hetero_residues</span><span class=\"p\">()</span>\n<span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">fix_disordered_atoms</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Compute dihedral angles for the protein, and assign them as extended attributes to residues.</span>\n<span class=\"n\">DihedralAngles</span><span class=\"o\">.</span><span class=\"n\">dihedral_angles_of_protein</span><span class=\"p\">(</span><span class=\"n\">protein</span><span class=\"p\">,</span> <span class=\"n\">assign_attribute</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">get_chain</span><span class=\"p\">(</span><span class=\"s1\">&#39;A&#39;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get_residue</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get_attribute</span><span class=\"p\">(</span><span class=\"s1\">&#39;dihedral_angles&#39;</span><span class=\"p\">)[</span><span class=\"s1\">&#39;PHI&#39;</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># Compute surface areas for the protein. Surface areas are automatically computed and assigned</span>\n<span class=\"c1\"># at the residue, chain and protein level.</span>\n<span class=\"n\">SurfaceArea</span><span class=\"o\">.</span><span class=\"n\">surface_area_of_protein</span><span class=\"p\">(</span><span class=\"n\">protein</span><span class=\"p\">,</span> <span class=\"n\">assign_attribute</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">get_attribute</span><span class=\"p\">(</span><span class=\"s1\">&#39;surface_area&#39;</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># Save the protein to a protkit (.prot) file.  All attributes, such as the</span>\n<span class=\"c1\"># computed dihedral angles and surface areas, will be saved as well and</span>\n<span class=\"c1\"># is available for later retrieval!</span>\n<span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">set_attribute</span><span class=\"p\">(</span><span class=\"s2\">&quot;note&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Experimenting with Protkit&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">ProtIO</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">protein</span><span class=\"p\">,</span> <span class=\"s2\">&quot;1ahw.prot&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">protein2</span> <span class=\"o\">=</span> <span class=\"n\">ProtIO</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s2\">&quot;1ahw.prot&quot;</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">protein2</span><span class=\"o\">.</span><span class=\"n\">get_attribute</span><span class=\"p\">(</span><span class=\"s1\">&#39;surface_area&#39;</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">protein2</span><span class=\"o\">.</span><span class=\"n\">get_attribute</span><span class=\"p\">(</span><span class=\"s1\">&#39;note&#39;</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n\n<p>Please consult the <a href=\"QUICK_START_GUIDE.md\">Quick Start Guide</a> for more examples.</p>\n\n<hr />\n"}, {"fullname": "protkit.core", "modulename": "protkit.core", "kind": "module", "doc": "<p>This module contains the core classes and functions for the protkit package.</p>\n"}, {"fullname": "protkit.core.extend_attributes", "modulename": "protkit.core.extend_attributes", "kind": "module", "doc": "<p>Class <code>ExtendedAttributes</code> defines a set of methods that is used\nto manage the properties for an object. These methods are available\nto the object by inheritance.</p>\n\n<p>Methods include:</p>\n\n<ul>\n<li>has_attribute(key): Checks if the object has the specified attribute.</li>\n<li>get_attribute(key): Returns the value of the specified attribute.</li>\n<li>set_attribute(key, value): Sets the value of the specified attribute.</li>\n<li>delete_attribute(key): Deletes the specified attribute.</li>\n</ul>\n\n<p>Classes such as Protein, Chain, Residue, Atom, Sequence, etc.\ninherit these methods to provide a consistent interface for\nmanaging object properties.</p>\n"}, {"fullname": "protkit.core.extend_attributes.ExtendedAttributes", "modulename": "protkit.core.extend_attributes", "qualname": "ExtendedAttributes", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "protkit.core.extend_attributes.ExtendedAttributes.__init__", "modulename": "protkit.core.extend_attributes", "qualname": "ExtendedAttributes.__init__", "kind": "function", "doc": "<p>Constructor.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, {"fullname": "protkit.core.extend_attributes.ExtendedAttributes.has_attribute", "modulename": "protkit.core.extend_attributes", "qualname": "ExtendedAttributes.has_attribute", "kind": "function", "doc": "<p>Checks if the object has the specified attribute.</p>\n\n<p>Args:\n    key (str): The name of the attribute.</p>\n\n<p>Returns:\n    bool: True if the object has the specified attribute.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.core.extend_attributes.ExtendedAttributes.get_attribute", "modulename": "protkit.core.extend_attributes", "qualname": "ExtendedAttributes.get_attribute", "kind": "function", "doc": "<p>Returns the value of the specified attribute.</p>\n\n<p>Args:\n    key (str): The name of the attribute.</p>\n\n<p>Returns:\n    Any: The value of the specified attribute.</p>\n\n<p>Raises:\n    AttributeError: If the attribute does not exist.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.core.extend_attributes.ExtendedAttributes.set_attribute", "modulename": "protkit.core.extend_attributes", "qualname": "ExtendedAttributes.set_attribute", "kind": "function", "doc": "<p>Sets the value of the specified attribute.</p>\n\n<p>Args:\n    key (str): The name of the attribute.\n    value (Any): The value of the attribute.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.core.extend_attributes.ExtendedAttributes.delete_attribute", "modulename": "protkit.core.extend_attributes", "qualname": "ExtendedAttributes.delete_attribute", "kind": "function", "doc": "<p>Deletes the specified attribute.</p>\n\n<p>Args:\n    key (str): The name of the attribute.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.core.extend_attributes.ExtendedAttributes.list_attributes", "modulename": "protkit.core.extend_attributes", "qualname": "ExtendedAttributes.list_attributes", "kind": "function", "doc": "<p>Lists the attributes that have been defined for the object.</p>\n\n<p>Returns:\n    List[str]: A list of attribute names.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.download", "modulename": "protkit.download", "kind": "module", "doc": "<p>Package <code>download</code> contains classes to download\nbiological data from the internet.</p>\n\n<ul>\n<li>Class <code>Download</code> in module <code>download</code> is used to download\nfiles such as PDB and Fasta file from the internet. It\ncan be used to download a single file or multiple files\nin parallel. It downloads files from sources such as\nRCSB PDB, UniProt, and SAbDab.</li>\n</ul>\n"}, {"fullname": "protkit.download.download", "modulename": "protkit.download.download", "kind": "module", "doc": "<p>Implements the <code>Download</code> class to download biological data from the internet.</p>\n\n<p>Currently, downloading of the following data is supported:</p>\n\n<ul>\n<li>PDB files from the RCSB and Sabdab</li>\n<li>CIF files from the RCSB</li>\n<li>Binary CIF files from the RCSB</li>\n<li>FASTA files from the RCSB and Uniprot</li>\n</ul>\n\n<p>For more information about the various data sources, see the following URLs:</p>\n\n<ul>\n<li>RCSB: <a href=\"https://www.rcsb.org/\">https://www.rcsb.org/</a></li>\n<li>Uniprot: <a href=\"https://www.uniprot.org/\">https://www.uniprot.org/</a></li>\n<li>Sabdab: <a href=\"https://opig.stats.ox.ac.uk/webapps/sabdab-sabpred/sabdab/\">https://opig.stats.ox.ac.uk/webapps/sabdab-sabpred/sabdab/</a></li>\n</ul>\n\n<p>A list of download services provided by RCSB is available at:</p>\n\n<ul>\n<li><a href=\"https://www.rcsb.org/docs/programmatic-access/file-download-services\">https://www.rcsb.org/docs/programmatic-access/file-download-services</a></li>\n</ul>\n"}, {"fullname": "protkit.download.download.Download", "modulename": "protkit.download.download", "qualname": "Download", "kind": "class", "doc": "<p>Class <code>Download</code> is a base class for downloading\nbiological data from the internet.</p>\n"}, {"fullname": "protkit.download.download.Download.download_file", "modulename": "protkit.download.download", "qualname": "Download.download_file", "kind": "function", "doc": "<p>Downloads a single file from the internet.</p>\n\n<p>Uses the <code>requests</code> library to download the file.</p>\n\n<p>Args:\n    url (str): The URL of the file.\n    file_path (str): The path to the file.</p>\n\n<p>Returns:\n    None</p>\n\n<p>Raises:\n    Exception: If the file could not be downloaded or saved.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.download.download.Download.parallel_download", "modulename": "protkit.download.download", "qualname": "Download.parallel_download", "kind": "function", "doc": "<p>Downloads multiple files from the internet in parallel.</p>\n\n<p>Args:\n    urls (List[str]): The URLs of the files.\n    file_paths (List[str]): The paths to the files.\n    n_jobs (int): The number of jobs to run in parallel.\n        If -1, the number of jobs is set to the number of CPU cores.</p>\n\n<p>Returns:\n    None</p>\n\n<p>Raises:\n    Exception: If the files could not be downloaded or saved.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">urls</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">file_paths</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">n_jobs</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.download.download.Download.download_fasta_file_from_rcsb", "modulename": "protkit.download.download", "qualname": "Download.download_fasta_file_from_rcsb", "kind": "function", "doc": "<p>Downloads a single FASTA file from the RCSB.</p>\n\n<p>Args:\n    pdb_id (str): The ID of the PDB file.\n    file_path_or_directory (str): The path where the FASTA file should be saved.\n        If the path is a directory, the file is saved in the directory</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pdb_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">file_path_or_directory</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.download.download.Download.download_fasta_files_from_rcsb", "modulename": "protkit.download.download", "qualname": "Download.download_fasta_files_from_rcsb", "kind": "function", "doc": "<p>Downloads multiple FASTA files from the RCSB.</p>\n\n<p>Args:\n    pdb_ids (List[str]): The IDs of the PDB files.\n    directory (str): The directory where the FASTA files should be saved.\n    n_jobs (int): The number of jobs to run in parallel.\n        If -1, the number of jobs is set to the number of CPU cores.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pdb_ids</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">directory</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">n_jobs</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.download.download.Download.download_fasta_file_from_uniprot", "modulename": "protkit.download.download", "qualname": "Download.download_fasta_file_from_uniprot", "kind": "function", "doc": "<p>Downloads a single FASTA file from Uniprot.</p>\n\n<p>Args:\n    uniprot_id (str): The ID of the UniProt file.\n    file_path_or_directory (str): The path where the FASTA file should be saved.\n        If the path is a directory, the file is saved in the directory</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">uniprot_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">file_path_or_directory</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.download.download.Download.download_fasta_files_from_uniprot", "modulename": "protkit.download.download", "qualname": "Download.download_fasta_files_from_uniprot", "kind": "function", "doc": "<p>Downloads multiple FASTA files from Uniprot.</p>\n\n<p>Args:\n    uniprot_ids (List[str]): The IDs of the UniProt files.\n    directory (str): The directory where the FASTA files should be saved.\n    n_jobs (int): The number of jobs to run in parallel.\n        If -1, the number of jobs is set to the number of CPU cores.\nReturns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">uniprot_ids</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">directory</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">n_jobs</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.download.download.Download.download_pdb_file_from_rcsb", "modulename": "protkit.download.download", "qualname": "Download.download_pdb_file_from_rcsb", "kind": "function", "doc": "<p>Downloads a single PDB file from the RCSB.</p>\n\n<p>Args:\n    pdb_id (str): The ID of the PDB file.\n    file_path_or_directory (str): The path where the PDB file should be saved.\n        If the path is a directory, the file is saved in the directory\n        with the name <pdb_id>.pdb.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pdb_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">file_path_or_directory</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.download.download.Download.download_pdb_files_from_rcsb", "modulename": "protkit.download.download", "qualname": "Download.download_pdb_files_from_rcsb", "kind": "function", "doc": "<p>Downloads multiple PDB files from the RCSB.</p>\n\n<p>Args:\n    pdb_ids (List[str]): The IDs of the PDB files.\n    directory (str): The directory where the PDB files should be saved.\n    n_jobs (int): The number of jobs to run in parallel.\n        If -1, the number of jobs is set to the number of CPU cores.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pdb_ids</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">directory</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">n_jobs</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.download.download.Download.download_pdb_file_from_sabdab", "modulename": "protkit.download.download", "qualname": "Download.download_pdb_file_from_sabdab", "kind": "function", "doc": "<p>Downloads a single PDB file from Sabdab.</p>\n\n<p>Args:\n    pdb_id (str): The ID of the PDB file.\n    file_path_or_directory (str): The path where the PDB file should be saved.\n        If the path is a directory, the file is saved in the directory\n        with the name <pdb_id>.pdb.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pdb_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">file_path_or_directory</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.download.download.Download.download_pdb_files_from_sabdab", "modulename": "protkit.download.download", "qualname": "Download.download_pdb_files_from_sabdab", "kind": "function", "doc": "<p>Downloads multiple PDB files from Sabdab.</p>\n\n<p>Args:\n    pdb_ids (List[str]): The IDs of the PDB files.\n    directory (str): The directory where the PDB files should be saved.\n    n_jobs (int): The number of jobs to run in parallel.\n        If -1, the number of jobs is set to the number of CPU cores.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pdb_ids</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">directory</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">n_jobs</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.download.download.Download.download_cif_file_from_rcsb", "modulename": "protkit.download.download", "qualname": "Download.download_cif_file_from_rcsb", "kind": "function", "doc": "<p>Downloads a single CIF file from the RCSB.</p>\n\n<p>Args:\n    pdb_id (str): The ID of the CIF file.\n    file_path_or_directory (str): The path where the CIF file should be saved.\n        If the path is a directory, the file is saved in the directory\n        with the name <pdb_id>.cif.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pdb_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">file_path_or_directory</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.download.download.Download.download_cif_files_from_rcsb", "modulename": "protkit.download.download", "qualname": "Download.download_cif_files_from_rcsb", "kind": "function", "doc": "<p>Downloads multiple CIF files from the RCSB.</p>\n\n<p>Args:\n    pdb_ids (List[str]): The IDs of the CIF files.\n    directory (str): The directory where the CIF files should be saved.\n    n_jobs (int): The number of jobs to run in parallel.\n        If -1, the number of jobs is set to the number of CPU cores.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pdb_ids</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">directory</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">n_jobs</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.download.download.Download.download_binary_cif_file_from_rcsb", "modulename": "protkit.download.download", "qualname": "Download.download_binary_cif_file_from_rcsb", "kind": "function", "doc": "<p>Downloads a single Binary CIF file from the RCSB.</p>\n\n<p>Args:\n    pdb_id (str): The ID of the Binary CIF file.\n    file_path_or_directory (str): The path where the Binary CIF file should be saved.\n        If the path is a directory, the file is saved in the directory\n        with the name <pdb_id>.bcif.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pdb_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">file_path_or_directory</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.download.download.Download.download_binary_cif_files_from_rcsb", "modulename": "protkit.download.download", "qualname": "Download.download_binary_cif_files_from_rcsb", "kind": "function", "doc": "<p>Downloads multiple Bianry CIF files from the RCSB.</p>\n\n<p>Args:\n    pdb_ids (List[str]): The IDs of the Binary CIF files.\n    directory (str): The directory where the CIF files should be saved.\n    n_jobs (int): The number of jobs to run in parallel.\n        If -1, the number of jobs is set to the number of CPU cores.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pdb_ids</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">directory</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">n_jobs</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.file_io", "modulename": "protkit.file_io", "kind": "module", "doc": "<p>Package <code>file_io</code> contains classes to read and write data from and to files\ncontaining biological data.</p>\n\n<p>Structural Data:</p>\n\n<ul>\n<li><code>PDBIO</code> class in <code>pdb_io</code>: Reads and writes data from and to a PDB file.</li>\n<li><code>PQRIO</code> class in <code>pqr_io</code>: Reads and writes data from and to a PQR file.</li>\n<li><code>MMCIFIO</code> class in <code>mmcif_io</code>: Reads and writes data from and to a MMCIF file.</li>\n<li><code>MMTFIO</code> class in <code>mmtf_io</code>: Reads and writes data from and to a MMTF file.</li>\n<li><code>ProtIO</code> class in <code>prot_io</code>: Reads and writes data from and to a Prot file.</li>\n</ul>\n\n<p>Sequence Data:</p>\n\n<ul>\n<li><code>FastaIO</code> class in <code>fasta_io</code>: Reads and writes data from and to a FASTA file.</li>\n</ul>\n"}, {"fullname": "protkit.file_io.fasta_io", "modulename": "protkit.file_io.fasta_io", "kind": "module", "doc": "<p>Implements class <code>FastaIO</code> to read and write\nFASTA files. FASTA files contain one or more sequences\n(protein or nucleotide) of biological data with their\nassociated metadata.</p>\n\n<p>See <a href=\"https://en.wikipedia.org/wiki/FASTA_format\">https://en.wikipedia.org/wiki/FASTA_format</a> for more information.\nSee <a href=\"https://www.rcsb.org/\">https://www.rcsb.org/</a> for examples of FASTA files.</p>\n\n<p>Methods are static and can be called without instantiating the class.\nThe main functions exposed by the class are:</p>\n\n<ul>\n<li><code>load()</code> to load a protein from a Fasta file.</li>\n<li><code>save()</code> to save a protein to a Fasta file.</li>\n</ul>\n"}, {"fullname": "protkit.file_io.fasta_io.FastaIO", "modulename": "protkit.file_io.fasta_io", "qualname": "FastaIO", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "protkit.file_io.fasta_io.FastaIO.load", "modulename": "protkit.file_io.fasta_io", "qualname": "FastaIO.load", "kind": "function", "doc": "<p>Loads a FASTA file and returns a list of sequences.</p>\n\n<p>Args:\n    file_path (str): The path to the FASTA file.</p>\n\n<p>Returns:\n    List[Sequence]: A list of sequences.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">seq</span><span class=\"o\">.</span><span class=\"n\">sequence</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.file_io.fasta_io.FastaIO.save", "modulename": "protkit.file_io.fasta_io", "qualname": "FastaIO.save", "kind": "function", "doc": "<p>Saves a FASTA file.</p>\n\n<p>Args:\n    sequence (Union[Sequence, List[Sequence]]): The sequence(s) to save.\n    file_path (str): The path to the FASTA file.\n    line_length (int): The length of the lines in the FASTA file.\n        If None, the sequence will be saved on one line.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\tsequence: [&lt;class &#x27;protkit.seq.sequence.Sequence&#x27;&gt;, typing.List[protkit.seq.sequence.Sequence]],</span><span class=\"param\">\t<span class=\"n\">file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\tline_length: [&lt;class &#x27;int&#x27;&gt;, None] = 80</span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.file_io.mmcif_io", "modulename": "protkit.file_io.mmcif_io", "kind": "module", "doc": "<p>Implements class <code>MMCIFIO</code> to read and write protein structures in the mmCIF format.</p>\n\n<p>The mmCIF format is a text-based format that is used to store data from macromolecular\ncrystallography experiments. It is the successor to the PDB format and is the preferred\nformat for the PDB archive.</p>\n\n<p>See\n<a href=\"https://pdb101.rcsb.org/learn/guide-to-understanding-pdb-data/beginner%E2%80%99s-guide-to-pdb-structures-and-the-pdbx-mmcif-format\">https://pdb101.rcsb.org/learn/guide-to-understanding-pdb-data/beginner%E2%80%99s-guide-to-pdb-structures-and-the-pdbx-mmcif-format</a>\nfor more information.</p>\n\n<p><font color=\"red\">Note that the current implementation relies on converting the mmCIF\nfile to PDB format using BioPython. Metadata that are not supported by the PDB format\nwill be lost in the process. Future implementations of this class will correctly\nhandle additional metadata.</font></p>\n"}, {"fullname": "protkit.file_io.mmcif_io.MMCIFIO", "modulename": "protkit.file_io.mmcif_io", "qualname": "MMCIFIO", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "protkit.file_io.mmcif_io.MMCIFIO.convert_to_pdb", "modulename": "protkit.file_io.mmcif_io", "qualname": "MMCIFIO.convert_to_pdb", "kind": "function", "doc": "<p>Converts a mmCIF file to a PDB file.</p>\n\n<p>Args:\n    mmcif_file_path (str): The path to the mmCIF file.\n    pdb_file_path (str): The path to the PDB file.</p>\n\n<p>Returns:\n    None</p>\n\n<p>Raises:\n    FileNotFoundError: If the mmCIF file could not be found.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mmcif_file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">pdb_file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.file_io.mmcif_io.MMCIFIO.convert_to_prot", "modulename": "protkit.file_io.mmcif_io", "qualname": "MMCIFIO.convert_to_prot", "kind": "function", "doc": "<p>Converts a mmCIF file to a Prot file.</p>\n\n<p>Args:\n    mmcif_file_path (str): The path to the mmCIF file.\n    prot_file_path (str): The path to the Prot file.</p>\n\n<p>Returns:\n    None</p>\n\n<p>Raises:\n    FileNotFoundError: If the mmCIF file could not be found.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mmcif_file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">prot_file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.file_io.mmcif_io.MMCIFIO.load", "modulename": "protkit.file_io.mmcif_io", "qualname": "MMCIFIO.load", "kind": "function", "doc": "<p>Loads a protein from a mmCIF file.</p>\n\n<p>Args:\n    mmcif_file_path (str): The path to the mmCIF file.</p>\n\n<p>Returns:\n    List[Protein]: The protein(s) in the mmCIF file.</p>\n\n<p>Raises:\n    FileNotFoundError: If the mmCIF file could not be found.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mmcif_file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.file_io.mmtf_io", "modulename": "protkit.file_io.mmtf_io", "kind": "module", "doc": "<p>Implements class <code>MMTFIO</code> to read and write protein structures in the MMTF format.</p>\n\n<p>The MMTF format is a binary format that is used to store data from macromolecular\ncrystallography experiments. It is the successor to the PDB format and is the preferred\nformat for the PDB archive.</p>\n\n<p>See <a href=\"https://mmtf.rcsb.org/\">https://mmtf.rcsb.org/</a> for more information.</p>\n\n<p><font color=\"red\">Note that the current implementation relies on converting the MMTF\nfile to PDB format using BioPython (which in turn uses mmtf-python).\nMetadata that are not supported by the PDB format\nwill be lost in the process. Future implementations of this class will correctly\nhandle additional metadata.</font></p>\n"}, {"fullname": "protkit.file_io.mmtf_io.MMTFIO", "modulename": "protkit.file_io.mmtf_io", "qualname": "MMTFIO", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "protkit.file_io.mmtf_io.MMTFIO.convert_to_pdb", "modulename": "protkit.file_io.mmtf_io", "qualname": "MMTFIO.convert_to_pdb", "kind": "function", "doc": "<p>Converts a MMTF file to a PDB file.</p>\n\n<p>Args:\n    mmtf_file_path (str): The path to the MMTF file.\n    pdb_file_path (str): The path to the PDB file.</p>\n\n<p>Returns:\n    None</p>\n\n<p>Raises:\n    FileNotFoundError: If the MMTF file could not be found.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mmtf_file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">pdb_file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.file_io.mmtf_io.MMTFIO.convert_to_prot", "modulename": "protkit.file_io.mmtf_io", "qualname": "MMTFIO.convert_to_prot", "kind": "function", "doc": "<p>Converts a MMTF file to a Prot file.</p>\n\n<p>Args:\n    mmtf_file_path (str): The path to the MMTF file.\n    prot_file_path (str): The path to the Prot file.</p>\n\n<p>Returns:\n    None</p>\n\n<p>Raises:\n    FileNotFoundError: If the MMTF file could not be found.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mmtf_file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">prot_file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.file_io.mmtf_io.MMTFIO.load", "modulename": "protkit.file_io.mmtf_io", "qualname": "MMTFIO.load", "kind": "function", "doc": "<p>Loads a MMTF file and returns a protein.</p>\n\n<p>Args:\n    mmtf_file_path (str): The path to the MMTF file.</p>\n\n<p>Returns:\n    List[Protein]: A list of protein(s) in the MMTF file.</p>\n\n<p>Raises:\n    FileNotFoundError: If the MMTF file could not be found.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mmtf_file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.file_io.pdb_io", "modulename": "protkit.file_io.pdb_io", "kind": "module", "doc": "<p>Implements class <code>PDBIO</code> to read and write data\nfrom and to PDB files.  PDB files contain protein structural\ninformation.</p>\n\n<p>The PDB File Format Specification is available at:\n<a href=\"https://www.wwpdb.org/documentation/file-format-content/format33/v3.3.html\">https://www.wwpdb.org/documentation/file-format-content/format33/v3.3.html</a></p>\n\n<p>Currently, PDB records related to structural and sequence data is parsed\nand saved.  Other fields are ignored. The following fields are processed:</p>\n\n<ul>\n<li>MODEL (model start)</li>\n<li>ENDMDL (model end)</li>\n<li>ATOM (structural data)</li>\n<li>HETATOM (structural data)</li>\n<li>SEQRES (sequence data)</li>\n<li>TER (chain termination)</li>\n<li>MASTER (record keeping)</li>\n</ul>\n\n<p>Methods are static and can be called without instantiating the class.\nThe main functions exposed by the class are:</p>\n\n<ul>\n<li><code>load()</code> to load a protein from a PDB file.</li>\n<li><code>save()</code> to save a protein to a PDB file.</li>\n</ul>\n\n<p><font color=\"red\">Saving a file in PQR format is not supported yet.</font></p>\n"}, {"fullname": "protkit.file_io.pdb_io.PDBIO", "modulename": "protkit.file_io.pdb_io", "qualname": "PDBIO", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "protkit.file_io.pdb_io.PDBIO.parse_pdb_model_line", "modulename": "protkit.file_io.pdb_io", "qualname": "PDBIO.parse_pdb_model_line", "kind": "function", "doc": "<p>Parse a MODEL (start model) line from a PDB file.</p>\n\n<h2 id=\"columns-data-type-field-definition\">COLUMNS        DATA  TYPE    FIELD          DEFINITION</h2>\n\n<p>1 -  6        Record name   \"MODEL \"\n11 - 14        Integer       serial         Model serial number.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">line</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "protkit.file_io.pdb_io.PDBIO.create_pdb_model_line", "modulename": "protkit.file_io.pdb_io", "qualname": "PDBIO.create_pdb_model_line", "kind": "function", "doc": "<p>Creates a MODEL (start model) line for a PDB file.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">serial</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "protkit.file_io.pdb_io.PDBIO.parse_pdb_end_model_line", "modulename": "protkit.file_io.pdb_io", "qualname": "PDBIO.parse_pdb_end_model_line", "kind": "function", "doc": "<p>Parse a ENDMDL (end model) line from a PDB file.</p>\n\n<h2 id=\"columns-data-type-field-definition\">COLUMNS       DATA  TYPE     FIELD        DEFINITION</h2>\n\n<p>1 - 6         Record name   \"ENDMDL\"</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">line</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "protkit.file_io.pdb_io.PDBIO.create_pdb_end_model_line", "modulename": "protkit.file_io.pdb_io", "qualname": "PDBIO.create_pdb_end_model_line", "kind": "function", "doc": "<p>Creates a ENDMDL (end model) line for a PDB file.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "protkit.file_io.pdb_io.PDBIO.create_pdb_master_line", "modulename": "protkit.file_io.pdb_io", "qualname": "PDBIO.create_pdb_master_line", "kind": "function", "doc": "<p>Creates a MASTER (recordkeeping) line for a PDB file.</p>\n\n<h2 id=\"columns-data-type-field-definition\">COLUMNS         DATA TYPE     FIELD          DEFINITION</h2>\n\n<p>1 -  6         Record name   \"MASTER\"\n11 - 15         Integer       numRemark      Number of REMARK records\n16 - 20         Integer       \"0\"\n21 - 25         Integer       numHet         Number of HET records\n26 - 30         Integer       numHelix       Number of HELIX records\n31 - 35         Integer       numSheet       Number of SHEET records\n36 - 40         Integer       numTurn        deprecated\n41 - 45         Integer       numSite        Number of SITE records\n46 - 50         Integer       numXform       Number of coordinate transformation\n                                             records  (ORIGX+SCALE+MTRIX)\n51 - 55         Integer       numCoord       Number of atomic coordinate records\n                                             records (ATOM+HETATM)\n56 - 60         Integer       numTer         Number of TER records\n61 - 65         Integer       numConect      Number of CONECT records\n66 - 70         Integer       numSeq         Number of SEQRES records</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">num_atoms</span>,</span><span class=\"param\">\t<span class=\"n\">num_hetatoms</span>,</span><span class=\"param\">\t<span class=\"n\">num_ter</span>,</span><span class=\"param\">\t<span class=\"n\">num_remark</span><span class=\"o\">=</span><span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">num_het</span><span class=\"o\">=</span><span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">num_helix</span><span class=\"o\">=</span><span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">num_sheet</span><span class=\"o\">=</span><span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">num_site</span><span class=\"o\">=</span><span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">num_trans</span><span class=\"o\">=</span><span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">num_conect</span><span class=\"o\">=</span><span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">num_seqres</span><span class=\"o\">=</span><span class=\"mi\">0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "protkit.file_io.pdb_io.PDBIO.parse_pdb_seqres_line", "modulename": "protkit.file_io.pdb_io", "qualname": "PDBIO.parse_pdb_seqres_line", "kind": "function", "doc": "<p>Parse a SEQRES (sequence) line from a PDB file.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">line</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "protkit.file_io.pdb_io.PDBIO.create_seqres_line", "modulename": "protkit.file_io.pdb_io", "qualname": "PDBIO.create_seqres_line", "kind": "function", "doc": "<p>Creates a SEQRES (sequence) line for a PDB file.</p>\n\n<p>1 -  6        Record name    \"SEQRES\"\n 8 - 10        Integer        serNum       Serial number of the SEQRES record for  the\n                                           current  chain. Starts at 1 and increments\n                                           by one  each line. Reset to 1 for each chain.\n12             Character      chainID      Chain identifier. This may be any single\n                                           legal  character, including a blank which\n                                           is used if there is only one chain.\n14 - 17        Integer        numRes       Number of residues in the chain.\n                                           This  value is repeated on every record.\n20 - 22        Residue name   resName      Residue name.\n24 - 26        Residue name   resName      Residue name.\n28 - 30        Residue name   resName      Residue name.\n32 - 34        Residue name   resName      Residue name.\n36 - 38        Residue name   resName      Residue name.\n40 - 42        Residue name   resName      Residue name.\n44 - 46        Residue name   resName      Residue name.\n48 - 50        Residue name   resName      Residue name.\n52 - 54        Residue name   resName      Residue name.\n56 - 58        Residue name   resName      Residue name.\n60 - 62        Residue name   resName      Residue name.\n64 - 66        Residue name   resName      Residue name.\n68 - 70        Residue name   resName      Residue name.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">line_no</span>, </span><span class=\"param\"><span class=\"n\">chain_id</span>, </span><span class=\"param\"><span class=\"n\">num_residues</span>, </span><span class=\"param\"><span class=\"n\">residues</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "protkit.file_io.pdb_io.PDBIO.parse_pdb_ter_line", "modulename": "protkit.file_io.pdb_io", "qualname": "PDBIO.parse_pdb_ter_line", "kind": "function", "doc": "<p>Parse a TER (chain termination) line from a PDB file.</p>\n\n<h2 id=\"columns-data-type-field-definition\">COLUMNS        DATA  TYPE    FIELD           DEFINITION</h2>\n\n<p>1 -  6        Record name   \"TER   \"\n 7 - 11        Integer       serial          Serial number.\n18 - 20        Residue name  resName         Residue name.\n22             Character     chainID         Chain identifier.\n23 - 26        Integer       resSeq          Residue sequence number.\n27             AChar         iCode           Insertion code.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">line</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "protkit.file_io.pdb_io.PDBIO.create_pdb_ter_line", "modulename": "protkit.file_io.pdb_io", "qualname": "PDBIO.create_pdb_ter_line", "kind": "function", "doc": "<p>Creates a TER (chain termination) line for a PDB file.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">serial</span>, </span><span class=\"param\"><span class=\"n\">res_name</span>, </span><span class=\"param\"><span class=\"n\">chain_id</span>, </span><span class=\"param\"><span class=\"n\">res_seq</span>, </span><span class=\"param\"><span class=\"n\">icode</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "protkit.file_io.pdb_io.PDBIO.parse_pdb_atom_line", "modulename": "protkit.file_io.pdb_io", "qualname": "PDBIO.parse_pdb_atom_line", "kind": "function", "doc": "<p>Parse a ATOM (individual atom) or HETATM (hetero atom) line from a PDB file.</p>\n\n<h2 id=\"columns-data-type-field-definition\">COLUMNS        DATA  TYPE    FIELD        DEFINITION</h2>\n\n<p>1 -  6        Record name   \"ATOM  \"\n 7 - 11        Integer       serial       Atom  serial number.\n13 - 16        Atom          name         Atom name.\n17             Character     altLoc       Alternate location indicator.\n18 - 20        Residue name  resName      Residue name.\n22             Character     chainID      Chain identifier.\n23 - 26        Integer       resSeq       Residue sequence number.\n27             AChar         iCode        Code for insertion of residues.\n31 - 38        Real(8.3)     x            Orthogonal coordinates for X in Angstroms.\n39 - 46        Real(8.3)     y            Orthogonal coordinates for Y in Angstroms.\n47 - 54        Real(8.3)     z            Orthogonal coordinates for Z in Angstroms.\n55 - 60        Real(6.2)     occupancy    Occupancy.\n61 - 66        Real(6.2)     tempFactor   Temperature  factor.\n77 - 78        LString(2)    element      Element symbol, right-justified.\n79 - 80        LString(2)    charge       Charge  on the atom.`</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">line</span>, </span><span class=\"param\"><span class=\"n\">is_pqr_format</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "protkit.file_io.pdb_io.PDBIO.create_pdb_atom_line", "modulename": "protkit.file_io.pdb_io", "qualname": "PDBIO.create_pdb_atom_line", "kind": "function", "doc": "<p>Creates a ATOM or HETATM line for a PDB file.</p>\n\n<p>Args:\n    atom (Dict): The atom information.\n    serial (int): The serial number of the atom.\n    record_name (str): The record name, should be ATOM or HETATM.</p>\n\n<p>Returns:\n    str: The ATOM or HETATM line.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">atom</span><span class=\"p\">:</span> <span class=\"n\">Dict</span>, </span><span class=\"param\"><span class=\"n\">serial</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">record_name</span><span class=\"o\">=</span><span class=\"s1\">&#39;ATOM&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.file_io.pdb_io.PDBIO.create_pqr_atom_line", "modulename": "protkit.file_io.pdb_io", "qualname": "PDBIO.create_pqr_atom_line", "kind": "function", "doc": "<p>Creates a ATOM or HETATM line for a PQR file.</p>\n\n<p>The PQR line is similar to the PDB ATOM line, but with additional fields\nfor atomic charge and radius. The occupancy, temperature factor,\ncharge and element fields from the PDB file are not used in the PQR file.</p>\n\n<p>See: <a href=\"https://pdb2pqr.readthedocs.io/en/latest/formats/pqr.html\">https://pdb2pqr.readthedocs.io/en/latest/formats/pqr.html</a>\nThe order of fields in a PQR file is as follows:\nField_name Atom_number Atom_name Residue_name Chain_ID Residue_number\nX Y Z Charge Radius</p>\n\n<p>Args:\n    atom (Dict): The atom information.\n    serial (int): The serial number of the atom.\n    record_name (str): The record name, should be ATOM or HETATM.</p>\n\n<p>Returns:\n    str: The PQR ATOM or HETATM line.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">atom</span><span class=\"p\">:</span> <span class=\"n\">Dict</span>, </span><span class=\"param\"><span class=\"n\">serial</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">record_name</span><span class=\"o\">=</span><span class=\"s1\">&#39;ATOM&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.file_io.pdb_io.PDBIO.parse_pdb_entries_from_string", "modulename": "protkit.file_io.pdb_io", "qualname": "PDBIO.parse_pdb_entries_from_string", "kind": "function", "doc": "<p>Parse a PDB file in string format into a list of entries.</p>\n\n<p>Args:\n    pdb_string (str): The PDB file as a string.\n    is_pqr_format (bool): If the file is in PQR format.</p>\n\n<p>Returns:\n    List[Dict]: A list of parsed entries.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pdb_string</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">is_pqr_format</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "protkit.file_io.pdb_io.PDBIO.parse_pdb_entries", "modulename": "protkit.file_io.pdb_io", "qualname": "PDBIO.parse_pdb_entries", "kind": "function", "doc": "<p>Parse PDB file according to the spec provided at:\n<a href=\"https://www.wwpdb.org/documentation/file-format-content/format33/sect9.html#ATOM\">https://www.wwpdb.org/documentation/file-format-content/format33/sect9.html#ATOM</a></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">is_pqr_format</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "protkit.file_io.pdb_io.PDBIO.load_from_string", "modulename": "protkit.file_io.pdb_io", "qualname": "PDBIO.load_from_string", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">pdb_string</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">is_pqr_format</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">pdb_id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.file_io.pdb_io.PDBIO.load", "modulename": "protkit.file_io.pdb_io", "qualname": "PDBIO.load", "kind": "function", "doc": "<p>Load a protein from a PDB file.</p>\n\n<p>Args:\n    file_path (str): The path to the PDB file.\n    is_pqr_format (bool): If the file is in PQR format.\n    pdb_id (str): The PDB ID of the protein.</p>\n\n<p>Returns:\n    List[Protein]: A list of proteins.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">is_pqr_format</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">pdb_id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.file_io.pdb_io.PDBIO.save_to_string", "modulename": "protkit.file_io.pdb_io", "qualname": "PDBIO.save_to_string", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">protein</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span>, </span><span class=\"param\"><span class=\"n\">is_pqr_format</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.file_io.pdb_io.PDBIO.save", "modulename": "protkit.file_io.pdb_io", "qualname": "PDBIO.save", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">protein</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span>,</span><span class=\"param\">\t<span class=\"n\">file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">is_pqr_format</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.file_io.pqr_io", "modulename": "protkit.file_io.pqr_io", "kind": "module", "doc": "<p>Implements class <code>PQRIO</code> to read and write protein structures in the PQR format.</p>\n"}, {"fullname": "protkit.file_io.pqr_io.PQRIO", "modulename": "protkit.file_io.pqr_io", "qualname": "PQRIO", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "protkit.file_io.pqr_io.PQRIO.load", "modulename": "protkit.file_io.pqr_io", "qualname": "PQRIO.load", "kind": "function", "doc": "<p>Loads a protein from a PQR file.</p>\n\n<p>Args:\n    file_path (str): The path to the PQR file.\n    pdb_id (str): The PDB ID of the protein.</p>\n\n<p>Returns:\n    Protein: The protein.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">pdb_id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.file_io.pqr_io.PQRIO.save", "modulename": "protkit.file_io.pqr_io", "qualname": "PQRIO.save", "kind": "function", "doc": "<p>Saves a protein to a PQR file.</p>\n\n<p>Args:\n    protein (Protein): The protein.\n    file_path (str): The path to the PQR file.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">protein</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span>, </span><span class=\"param\"><span class=\"n\">file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.file_io.prot_io", "modulename": "protkit.file_io.prot_io", "kind": "module", "doc": "<p>Implements class <code>ProtIO</code> to read and write protein structures in the Prot format.\nThe Prot format enables storage of attributes of the protein structure that are not\npart of the PDB format. It closely resembles the internal data structure of the\nProtein class.</p>\n\n<p>The Prot format is a JSON format that is compressed using zlib to\nreduce the file size. The JSON format is used because it is human-readable and\ncan be easily parsed by other programs.</p>\n\n<p>Methods are static and can be called without instantiating the class. The main methods\nare:</p>\n\n<ul>\n<li><code>convert()</code> to convert a PDB file to a Prot file.</li>\n<li><code>load()</code> to load a Prot file.</li>\n<li><code>save()</code> to save a Prot file.</li>\n</ul>\n"}, {"fullname": "protkit.file_io.prot_io.ProtIO", "modulename": "protkit.file_io.prot_io", "qualname": "ProtIO", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "protkit.file_io.prot_io.ProtIO.convert", "modulename": "protkit.file_io.prot_io", "qualname": "ProtIO.convert", "kind": "function", "doc": "<p>Converts a PDB file to a Prot file.</p>\n\n<p>Args:\n    pdb_file_path (str): The path to the PDB file.\n    prot_file_path (str): The path to the Prot file.\n    is_pqr_format (bool): Whether the PDB file is in PQR format.\n    pdb_id (str): The ID of the protein.\n    compress (bool): Whether to compress the Prot file.\n    indent (int): The indentation level of the Prot file.</p>\n\n<p>Returns:\n    Protein: The protein.</p>\n\n<p>Raises:\n    FileNotFoundError: If the PDB file could not be found.</p>\n\n<p>Examples:</p>\n\n<blockquote>\n  <blockquote>\n    <p>ProtIO.convert(\"1a00.pdb\", \"1a00.prot\")\n    ProtIO.convert(\"1a00.pdb\", \"1a00.prot\", is_pqr_format=True)\n    ProtIO.convert(\"1a00.pdb\", \"1a00.prot\", pdb_id=\"1A00\")</p>\n  </blockquote>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">pdb_file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">prot_file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">is_pqr_format</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">pdb_id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">compress</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">indent</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">2</span></span><span class=\"return-annotation\">) -> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.file_io.prot_io.ProtIO.load", "modulename": "protkit.file_io.prot_io", "qualname": "ProtIO.load", "kind": "function", "doc": "<p>Loads a protein from a Prot file.</p>\n\n<p>Args:\n    file_path (str): The path to the Prot file.\n    decompress (bool): Whether to decompress the Prot file.</p>\n\n<p>Returns:\n    List[Protein]: The protein(s) in the Prot file.</p>\n\n<p>Raises:\n    FileNotFoundError: If the Prot file could not be found.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">decompress</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.file_io.prot_io.ProtIO.save", "modulename": "protkit.file_io.prot_io", "qualname": "ProtIO.save", "kind": "function", "doc": "<p>Saves a protein to a Prot file.</p>\n\n<p>Args:\n    protein (Union[Protein, List[Protein]]): The protein(s) to save.\n    file_path (str): The path to the Prot file.\n    compress (bool): Whether to compress the Prot file.\n    indent (int): The indentation level of the Prot file.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">protein</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">compress</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">indent</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">2</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.file_io.prot_io.ProtIO.atom_to_dict", "modulename": "protkit.file_io.prot_io", "qualname": "ProtIO.atom_to_dict", "kind": "function", "doc": "<p>Converts an Atom object to a dictionary.</p>\n\n<p>Args:\n    atom (Atom): The Atom object.</p>\n\n<p>Returns:\n    Dict: The dictionary representation of the Atom object.</p>\n\n<p>Raises:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">atom</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">atom</span><span class=\"o\">.</span><span class=\"n\">Atom</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.file_io.prot_io.ProtIO.atom_from_dict", "modulename": "protkit.file_io.prot_io", "qualname": "ProtIO.atom_from_dict", "kind": "function", "doc": "<p>Converts a dictionary to an Atom object.</p>\n\n<p>Args:\n    props (dict): The dictionary representation of the Atom object.</p>\n\n<p>Returns:\n    Atom: The Atom object created from the dictionary.</p>\n\n<p>Raises:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">props</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">) -> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">atom</span><span class=\"o\">.</span><span class=\"n\">Atom</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.file_io.prot_io.ProtIO.residue_to_dict", "modulename": "protkit.file_io.prot_io", "qualname": "ProtIO.residue_to_dict", "kind": "function", "doc": "<p>Converts a Residue object to a dictionary.</p>\n\n<p>Args:\n    residue (Residue): The Residue object.</p>\n\n<p>Returns:\n    Dict: The dictionary representation of the Residue object.</p>\n\n<p>Raises:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">residue</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">residue</span><span class=\"o\">.</span><span class=\"n\">Residue</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.file_io.prot_io.ProtIO.residue_from_dict", "modulename": "protkit.file_io.prot_io", "qualname": "ProtIO.residue_from_dict", "kind": "function", "doc": "<p>Converts a dictionary to a Residue object.</p>\n\n<p>Args:\n    props (dict): The dictionary representation of the Residue object.</p>\n\n<p>Returns:\n    Residue: The Residue object created from the dictionary.</p>\n\n<p>Raises:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">props</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">) -> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">residue</span><span class=\"o\">.</span><span class=\"n\">Residue</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.file_io.prot_io.ProtIO.chain_to_dict", "modulename": "protkit.file_io.prot_io", "qualname": "ProtIO.chain_to_dict", "kind": "function", "doc": "<p>Converts a Chain object to a dictionary.</p>\n\n<p>Args:\n    chain (Chain): The Chain object.</p>\n\n<p>Returns:\n    Dict: The dictionary representation of the Chain object.</p>\n\n<p>Raises:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">chain</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">chain</span><span class=\"o\">.</span><span class=\"n\">Chain</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.file_io.prot_io.ProtIO.chain_from_dict", "modulename": "protkit.file_io.prot_io", "qualname": "ProtIO.chain_from_dict", "kind": "function", "doc": "<p>Converts a dictionary to a Chain object.</p>\n\n<p>Args:\n    props (dict): The dictionary representation of the Chain object.</p>\n\n<p>Returns:\n    Chain: The Chain object created from the dictionary.</p>\n\n<p>Raises:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">props</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">) -> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">chain</span><span class=\"o\">.</span><span class=\"n\">Chain</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.file_io.prot_io.ProtIO.protein_to_dict", "modulename": "protkit.file_io.prot_io", "qualname": "ProtIO.protein_to_dict", "kind": "function", "doc": "<p>Converts a Protein object to a dictionary.</p>\n\n<p>Args:\n    protein (Protein): The Protein object.</p>\n\n<p>Returns:\n    Dict: The dictionary representation of the Protein object.</p>\n\n<p>Raises:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">protein</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.file_io.prot_io.ProtIO.protein_from_dict", "modulename": "protkit.file_io.prot_io", "qualname": "ProtIO.protein_from_dict", "kind": "function", "doc": "<p>Converts a dictionary to a Protein object.</p>\n\n<p>Args:\n    props (dict): The dictionary representation of the Protein object.</p>\n\n<p>Returns:\n    Protein: The Protein object created from the dictionary.</p>\n\n<p>Raises:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">props</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">) -> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.geometry", "modulename": "protkit.geometry", "kind": "module", "doc": "<p>Package <code>geometry</code> contains classes to apply geometric operations on proteins.</p>\n"}, {"fullname": "protkit.geometry.math", "modulename": "protkit.geometry.math", "kind": "module", "doc": "<p>Implements class <code>Math</code> to perform various mathematical operations. These mathematical\noperations include vector operations, such as calculating the magnitude, dot product,\ncross product, Euclidean distance, angle and dihedral angle between vectors.</p>\n\n<p>The class is meant to be used as a utility class and is not meant to be instantiated.\nIt is unaware of the context in which it is used and does not have any dependencies\non other classes or modules in the protkit package.</p>\n"}, {"fullname": "protkit.geometry.math.Math", "modulename": "protkit.geometry.math", "qualname": "Math", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "protkit.geometry.math.Math.magnitude", "modulename": "protkit.geometry.math", "qualname": "Math.magnitude", "kind": "function", "doc": "<p>Calculates the magnitude of a vector.</p>\n\n<p>Args:\n    x (float): The x-coordinate of the vector.\n    y (float): The y-coordinate of the vector.\n    z (float): The z-coordinate of the vector.</p>\n\n<p>Returns:\n    float: The magnitude of the vector.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"nb\">float</span>, </span><span class=\"param\"><span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"nb\">float</span>, </span><span class=\"param\"><span class=\"n\">z</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.geometry.math.Math.dot_product", "modulename": "protkit.geometry.math", "qualname": "Math.dot_product", "kind": "function", "doc": "<p>Calculates the dot product of two vectors.</p>\n\n<p>Args:\n    x1 (float): The x-coordinate of the first vector.\n    y1 (float): The y-coordinate of the first vector.\n    z1 (float): The z-coordinate of the first vector.\n    x2 (float): The x-coordinate of the second vector.\n    y2 (float): The y-coordinate of the second vector.\n    z2 (float): The z-coordinate of the second vector.</p>\n\n<p>Returns:\n    float: The dot product of the two vectors.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x1</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">y1</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">z1</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">x2</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">y2</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">z2</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.geometry.math.Math.cross_product", "modulename": "protkit.geometry.math", "qualname": "Math.cross_product", "kind": "function", "doc": "<p>Calculates the cross product of two vectors.</p>\n\n<p>Args:\n    x1 (float): The x-coordinate of the first vector.\n    y1 (float): The y-coordinate of the first vector.\n    z1 (float): The z-coordinate of the first vector.\n    x2 (float): The x-coordinate of the second vector.\n    y2 (float): The y-coordinate of the second vector.\n    z2 (float): The z-coordinate of the second vector.</p>\n\n<p>Returns:\n    Tuple[float, float, float]: The cross product of the two vectors.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x1</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">y1</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">z1</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">x2</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">y2</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">z2</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.geometry.math.Math.euclidean_distance", "modulename": "protkit.geometry.math", "qualname": "Math.euclidean_distance", "kind": "function", "doc": "<p>Calculates the Euclidean distance between two points.</p>\n\n<p>Args:\n    x1 (float): The x-coordinate of the first point.\n    y1 (float): The y-coordinate of the first point.\n    z1 (float): The z-coordinate of the first point.\n    x2 (float): The x-coordinate of the second point.\n    y2 (float): The y-coordinate of the second point.\n    z2 (float): The z-coordinate of the second point.</p>\n\n<p>Returns:\n    float: The distance between the two points.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x1</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">y1</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">z1</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">x2</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">y2</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">z2</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.geometry.math.Math.vector_angle", "modulename": "protkit.geometry.math", "qualname": "Math.vector_angle", "kind": "function", "doc": "<p>Calculates the angle between two vectors.</p>\n\n<p>Args:\n    x1 (float): The x-coordinate of the first vector.\n    y1 (float): The y-coordinate of the first vector.\n    z1 (float): The z-coordinate of the first vector.\n    x2 (float): The x-coordinate of the second vector.\n    y2 (float): The y-coordinate of the second vector.\n    z2 (float): The z-coordinate of the second vector.</p>\n\n<p>Returns:\n    float: The angle in degrees between the two vectors.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x1</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">y1</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">z1</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">x2</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">y2</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">z2</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.geometry.math.Math.angle", "modulename": "protkit.geometry.math", "qualname": "Math.angle", "kind": "function", "doc": "<p>Calculates the angle between three points.</p>\n\n<p>Args:\n    x1 (float): The x-coordinate of the first point.\n    y1 (float): The y-coordinate of the first point.\n    z1 (float): The z-coordinate of the first point.\n    x2 (float): The x-coordinate of the second point.\n    y2 (float): The y-coordinate of the second point.\n    z2 (float): The z-coordinate of the second point.\n    x3 (float): The x-coordinate of the third point.\n    y3 (float): The y-coordinate of the third point.\n    z3 (float): The z-coordinate of the third point.</p>\n\n<p>Returns:\n    float: The angle in degrees between the three points.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x1</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">y1</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">z1</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">x2</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">y2</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">z2</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">x3</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">y3</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">z3</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.geometry.math.Math.dihedral_angle", "modulename": "protkit.geometry.math", "qualname": "Math.dihedral_angle", "kind": "function", "doc": "<p>Calculates the dihedral angle between four points.</p>\n\n<p>Args:\n    x1 (float): The x-coordinate of the first point.\n    y1 (float): The y-coordinate of the first point.\n    z1 (float): The z-coordinate of the first point.\n    x2 (float): The x-coordinate of the second point.\n    y2 (float): The y-coordinate of the second point.\n    z2 (float): The z-coordinate of the second point.\n    x3 (float): The x-coordinate of the third point.\n    y3 (float): The y-coordinate of the third point.\n    z3 (float): The z-coordinate of the third point.\n    x4 (float): The x-coordinate of the fourth point.\n    y4 (float): The y-coordinate of the fourth point.\n    z4 (float): The z-coordinate of the fourth point.</p>\n\n<p>Returns:\n    float: The dihedral angle in degrees between the four points.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x1</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">y1</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">z1</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">x2</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">y2</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">z2</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">x3</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">y3</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">z3</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">x4</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">y4</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">z4</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.geometry.space_query", "modulename": "protkit.geometry.space_query", "kind": "module", "doc": "<p>Implements class <code>SpaceQuery</code> to do fast queries of atomic coordinates.</p>\n\n<p>It relies on the KDTree implementation provided by scikit-learn. It\nabstracts computations of distances and nearest neighbours using\nnumpy arrays to hide these implementation details from the user.</p>\n"}, {"fullname": "protkit.geometry.space_query.SpaceQuery", "modulename": "protkit.geometry.space_query", "qualname": "SpaceQuery", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "protkit.geometry.space_query.SpaceQuery.__init__", "modulename": "protkit.geometry.space_query", "qualname": "SpaceQuery.__init__", "kind": "function", "doc": "<p>Constructor.  Constructs a KDTree from the atomic coordinates.</p>\n\n<p>Args:\n    coordinates (List[Tuple[float, float, float]]): List of atomic coordinates.\n        The coordinates should be in the form of a list of lists,\n        where each sublist contains the x, y and z coordinates of\n        an atom.\n    leaf_size (int): Leaf size of the KDTree. Default is 50.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">coordinates</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]]</span>, </span><span class=\"param\"><span class=\"n\">leaf_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">50</span></span>)</span>"}, {"fullname": "protkit.geometry.space_query.SpaceQuery.coordinates", "modulename": "protkit.geometry.space_query", "qualname": "SpaceQuery.coordinates", "kind": "variable", "doc": "<p>Getter for the coordinates.</p>\n\n<p>Returns:\n    np.ndarray: The coordinates.</p>\n"}, {"fullname": "protkit.geometry.space_query.SpaceQuery.tree", "modulename": "protkit.geometry.space_query", "qualname": "SpaceQuery.tree", "kind": "variable", "doc": "<p>Getter for the KDTree.</p>\n\n<p>Returns:\n    KDTree: The KDTree.</p>\n"}, {"fullname": "protkit.geometry.space_query.SpaceQuery.query_nearest", "modulename": "protkit.geometry.space_query", "qualname": "SpaceQuery.query_nearest", "kind": "function", "doc": "<p>Query the KDTree for the k nearest neighbours of a given coordinates.</p>\n\n<p>Args:\n    coordinates (List[List[float]]): List of coordinates to query.\n    k (int): Number of nearest neighbours to return. Default is 1.</p>\n\n<p>Returns:\n    Tuple[List[int], List[float]]: List of indices of the k nearest neighbours and their distances.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">coordinates</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">k</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.geometry.space_query.SpaceQuery.query_partners", "modulename": "protkit.geometry.space_query", "qualname": "SpaceQuery.query_partners", "kind": "function", "doc": "<p>Query the KDTree for all atoms within a certain radius of a given coordinates.</p>\n\n<p>Args:\n    coordinates (List[Tuple[float, float, float]]): List of coordinates to query.\n    radius (float): Radius within which to search for atoms.</p>\n\n<p>Returns:</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">coordinates</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">radius</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"p\">(</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Tuple</span><span class=\"p\">],</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Tuple</span><span class=\"p\">])</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.geometry.space_query.SpaceQuery.query_indices", "modulename": "protkit.geometry.space_query", "qualname": "SpaceQuery.query_indices", "kind": "function", "doc": "<p>Query the KDTree for all atoms within a certain radius of a given coordinates.</p>\n\n<p>Args:\n    coordinates (List[List[float]]): List of coordinates to query.\n    radius (float): Radius within which to search for atoms.</p>\n\n<p>Returns:\n    List[List[int]]: List of lists of indices of atoms within the radius of the query coordinates.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">coordinates</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]]</span>, </span><span class=\"param\"><span class=\"n\">radius</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.geometry.space_query.SpaceQuery.query_distance", "modulename": "protkit.geometry.space_query", "qualname": "SpaceQuery.query_distance", "kind": "function", "doc": "<p>Query the KDTree for all atoms within a certain radius of a given coordinates.</p>\n\n<p>Args:\n    coordinates (List[List[float]]): List of coordinates to query.\n    radius (float): Radius within which to search for atoms.</p>\n\n<p>Returns:\n    List[List[float]]: List of lists of distances of atoms within the radius of the query coordinates.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">coordinates</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">radius</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]],</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.geometry.space_query.SpaceQuery.query_distance_np", "modulename": "protkit.geometry.space_query", "qualname": "SpaceQuery.query_distance_np", "kind": "function", "doc": "<p>Query the KDTree for all atoms within a certain radius of a given coordinates.</p>\n\n<p>Args:\n    coordinates (List[List[float]]): List of coordinates to query.\n    radius (float): Radius within which to search for atoms.</p>\n\n<p>Returns:\n    List[List[float]]: List of lists of distances of atoms within the radius of the query coordinates.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">coordinates</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">radius</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]],</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.metrics", "modulename": "protkit.metrics", "kind": "module", "doc": "<p>Package <code>metrics</code> contains classes to perform various evaluations on biological data.</p>\n\n<ul>\n<li><code>StructureEval</code> class in <code>structure_eval</code>: Various metrics such as RMSD, TMScore, GDT TS and Fnat scores to evaluate protein structures.</li>\n<li><code>SequenceEval</code> class in <code>sequence_eval</code>: Various metrics to such as sequence identity, similarity, and coverage to evaluate protein sequences.</li>\n<li><code>ClassificationEval</code> class in <code>classification_eval</code>: Various metrics such as accuracy, precision, recall, and F1 score to the results of protein classification problems.</li>\n<li><code>RegressionEval</code> class in <code>regression_eval</code>: Various metrics such as mean squared error, mean absolute error, and R2 score to evaluate the results of protein regression problems.</li>\n<li><code>UtilityEval</code> class in <code>utility_eval</code>: Various metrics such as memory usage, execution time, and disk usage to evaluate metrics related to the execution of a program.</li>\n</ul>\n"}, {"fullname": "protkit.metrics.classification_eval", "modulename": "protkit.metrics.classification_eval", "kind": "module", "doc": "<p>Implements class <code>ClassificationEval</code> for evaluating results of protein classification problems.</p>\n"}, {"fullname": "protkit.metrics.classification_eval.ClassificationEval", "modulename": "protkit.metrics.classification_eval", "qualname": "ClassificationEval", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "protkit.metrics.regression_eval", "modulename": "protkit.metrics.regression_eval", "kind": "module", "doc": "<p>Implements class <code>RegressionEval</code> for evaluating results of protein regression problems.</p>\n"}, {"fullname": "protkit.metrics.regression_eval.RegressionEval", "modulename": "protkit.metrics.regression_eval", "qualname": "RegressionEval", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "protkit.metrics.scoring_matrix", "modulename": "protkit.metrics.scoring_matrix", "kind": "module", "doc": "<p>Implements class <code>ScoringMatrix</code> for scoring residue pairs.</p>\n\n<p>A scoring matrix is a table of scores that are used to align sequences or to evaluate the\nsimilarity of two sequences. The scores are used to determine the quality of the alignment\nor the similarity of the sequences. The scores are based on the likelihood of a residue pair\noccurring in an alignment, and are often derived from multiple sequence alignments.</p>\n\n<p>The BLOSUM62 scoring matrix is a popular scoring matrix for protein sequences. It is based on\nthe frequencies of residue pairs in a multiple sequence alignment of protein sequences. The\nscores are log-odds scores, and are used to evaluate the similarity of two protein sequences.</p>\n"}, {"fullname": "protkit.metrics.scoring_matrix.ScoringMatrix", "modulename": "protkit.metrics.scoring_matrix", "qualname": "ScoringMatrix", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "protkit.metrics.scoring_matrix.ScoringMatrix.__init__", "modulename": "protkit.metrics.scoring_matrix", "qualname": "ScoringMatrix.__init__", "kind": "function", "doc": "<p>Initialize the scoring matrix.</p>\n\n<p>Args:\n    matrix (Dict[str, Dict[str, int]]): The scoring matrix.</p>\n\n<p>Returns:</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">matrix</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">&#39;A&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;A&#39;</span><span class=\"p\">:</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"s1\">&#39;C&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;D&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;E&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;F&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;G&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;H&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;I&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;K&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;L&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;M&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;N&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;P&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Q&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;R&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;S&#39;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;T&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;V&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;W&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Y&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">},</span> <span class=\"s1\">&#39;C&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;A&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;C&#39;</span><span class=\"p\">:</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"s1\">&#39;D&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;E&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"s1\">&#39;F&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;G&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;H&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;I&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;K&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;L&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;M&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;N&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;P&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Q&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;R&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;S&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;T&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;V&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;W&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Y&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">},</span> <span class=\"s1\">&#39;D&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;A&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;C&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;D&#39;</span><span class=\"p\">:</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"s1\">&#39;E&#39;</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;F&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;G&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;H&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;I&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;K&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;L&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"s1\">&#39;M&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;N&#39;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;P&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Q&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;R&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;S&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;T&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;V&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;W&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Y&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">},</span> <span class=\"s1\">&#39;E&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;A&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;C&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"s1\">&#39;D&#39;</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;E&#39;</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"s1\">&#39;F&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;G&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;H&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;I&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;K&#39;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;L&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;M&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;N&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;P&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Q&#39;</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;R&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;S&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;T&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;V&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;W&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Y&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">},</span> <span class=\"s1\">&#39;F&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;A&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;C&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;D&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;E&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;F&#39;</span><span class=\"p\">:</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"s1\">&#39;G&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;H&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;I&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;K&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;L&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;M&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;N&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;P&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Q&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;R&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;S&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;T&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;V&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;W&#39;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Y&#39;</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">},</span> <span class=\"s1\">&#39;G&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;A&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;C&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;D&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;E&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;F&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;G&#39;</span><span class=\"p\">:</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"s1\">&#39;H&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;I&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"s1\">&#39;K&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;L&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"s1\">&#39;M&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;N&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;P&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Q&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;R&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;S&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;T&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;V&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;W&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Y&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">},</span> <span class=\"s1\">&#39;H&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;A&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;C&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;D&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;E&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;F&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;G&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;H&#39;</span><span class=\"p\">:</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"s1\">&#39;I&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;K&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;L&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;M&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;N&#39;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;P&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Q&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;R&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;S&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;T&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;V&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;W&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Y&#39;</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">},</span> <span class=\"s1\">&#39;I&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;A&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;C&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;D&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;E&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;F&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;G&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"s1\">&#39;H&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;I&#39;</span><span class=\"p\">:</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"s1\">&#39;K&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;L&#39;</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;M&#39;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;N&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;P&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Q&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;R&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;S&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;T&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;V&#39;</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;W&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Y&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">},</span> <span class=\"s1\">&#39;K&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;A&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;C&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;D&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;E&#39;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;F&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;G&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;H&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;I&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;K&#39;</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"s1\">&#39;L&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;M&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;N&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;P&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Q&#39;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;R&#39;</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;S&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;T&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;V&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;W&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Y&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">},</span> <span class=\"s1\">&#39;L&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;A&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;C&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;D&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"s1\">&#39;E&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;F&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;G&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"s1\">&#39;H&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;I&#39;</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;K&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;L&#39;</span><span class=\"p\">:</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"s1\">&#39;M&#39;</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;N&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;P&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Q&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;R&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;S&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;T&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;V&#39;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;W&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Y&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">},</span> <span class=\"s1\">&#39;M&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;A&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;C&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;D&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;E&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;F&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;G&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;H&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;I&#39;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;K&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;L&#39;</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;M&#39;</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"s1\">&#39;N&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;P&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Q&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;R&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;S&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;T&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;V&#39;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;W&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Y&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">},</span> <span class=\"s1\">&#39;N&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;A&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;C&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;D&#39;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;E&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;F&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;G&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;H&#39;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;I&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;K&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;L&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;M&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;N&#39;</span><span class=\"p\">:</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"s1\">&#39;P&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Q&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;R&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;S&#39;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;T&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;V&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;W&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Y&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">},</span> <span class=\"s1\">&#39;P&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;A&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;C&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;D&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;E&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;F&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"s1\">&#39;G&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;H&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;I&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;K&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;L&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;M&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;N&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;P&#39;</span><span class=\"p\">:</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Q&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;R&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;S&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;T&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;V&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;W&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Y&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">},</span> <span class=\"s1\">&#39;Q&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;A&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;C&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;D&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;E&#39;</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;F&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;G&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;H&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;I&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;K&#39;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;L&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;M&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;N&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;P&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Q&#39;</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"s1\">&#39;R&#39;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;S&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;T&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;V&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;W&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Y&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">},</span> <span class=\"s1\">&#39;R&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;A&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;C&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;D&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;E&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;F&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;G&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;H&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;I&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;K&#39;</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;L&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;M&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;N&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;P&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Q&#39;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;R&#39;</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"s1\">&#39;S&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;T&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;V&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;W&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Y&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">},</span> <span class=\"s1\">&#39;S&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;A&#39;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;C&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;D&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;E&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;F&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;G&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;H&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;I&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;K&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;L&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;M&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;N&#39;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;P&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Q&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;R&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;S&#39;</span><span class=\"p\">:</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"s1\">&#39;T&#39;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;V&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;W&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Y&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">},</span> <span class=\"s1\">&#39;T&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;A&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;C&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;D&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;E&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;F&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;G&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;H&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;I&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;K&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;L&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;M&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;N&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;P&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Q&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;R&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;S&#39;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;T&#39;</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"s1\">&#39;V&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;W&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Y&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">},</span> <span class=\"s1\">&#39;V&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;A&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;C&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;D&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;E&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;F&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;G&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;H&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;I&#39;</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;K&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;L&#39;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;M&#39;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;N&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;P&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Q&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;R&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;S&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;T&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">&#39;V&#39;</span><span class=\"p\">:</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"s1\">&#39;W&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Y&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">},</span> <span class=\"s1\">&#39;W&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;A&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;C&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;D&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"s1\">&#39;E&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;F&#39;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;G&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;H&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;I&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;K&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;L&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;M&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;N&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"s1\">&#39;P&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Q&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;R&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;S&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;T&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;V&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;W&#39;</span><span class=\"p\">:</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Y&#39;</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">},</span> <span class=\"s1\">&#39;Y&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;A&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;C&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;D&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;E&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;F&#39;</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;G&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;H&#39;</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;I&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;K&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;L&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;M&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;N&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;P&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Q&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;R&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;S&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;T&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;V&#39;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">&#39;W&#39;</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Y&#39;</span><span class=\"p\">:</span> <span class=\"mi\">7</span><span class=\"p\">}}</span>,</span><span class=\"param\">\t<span class=\"n\">no_match_score</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span>)</span>"}, {"fullname": "protkit.metrics.scoring_matrix.ScoringMatrix.BLOSUM62", "modulename": "protkit.metrics.scoring_matrix", "qualname": "ScoringMatrix.BLOSUM62", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;A&#x27;: {&#x27;A&#x27;: 4, &#x27;C&#x27;: 0, &#x27;D&#x27;: -2, &#x27;E&#x27;: -1, &#x27;F&#x27;: -2, &#x27;G&#x27;: 0, &#x27;H&#x27;: -2, &#x27;I&#x27;: -1, &#x27;K&#x27;: -1, &#x27;L&#x27;: -1, &#x27;M&#x27;: -1, &#x27;N&#x27;: -2, &#x27;P&#x27;: -1, &#x27;Q&#x27;: -1, &#x27;R&#x27;: -1, &#x27;S&#x27;: 1, &#x27;T&#x27;: 0, &#x27;V&#x27;: 0, &#x27;W&#x27;: -3, &#x27;Y&#x27;: -2}, &#x27;C&#x27;: {&#x27;A&#x27;: 0, &#x27;C&#x27;: 9, &#x27;D&#x27;: -3, &#x27;E&#x27;: -4, &#x27;F&#x27;: -2, &#x27;G&#x27;: -3, &#x27;H&#x27;: -3, &#x27;I&#x27;: -1, &#x27;K&#x27;: -3, &#x27;L&#x27;: -1, &#x27;M&#x27;: -1, &#x27;N&#x27;: -3, &#x27;P&#x27;: -3, &#x27;Q&#x27;: -3, &#x27;R&#x27;: -3, &#x27;S&#x27;: -1, &#x27;T&#x27;: -1, &#x27;V&#x27;: -1, &#x27;W&#x27;: -2, &#x27;Y&#x27;: -2}, &#x27;D&#x27;: {&#x27;A&#x27;: -2, &#x27;C&#x27;: -3, &#x27;D&#x27;: 6, &#x27;E&#x27;: 2, &#x27;F&#x27;: -3, &#x27;G&#x27;: -1, &#x27;H&#x27;: -1, &#x27;I&#x27;: -3, &#x27;K&#x27;: -1, &#x27;L&#x27;: -4, &#x27;M&#x27;: -3, &#x27;N&#x27;: 1, &#x27;P&#x27;: -1, &#x27;Q&#x27;: 0, &#x27;R&#x27;: -2, &#x27;S&#x27;: 0, &#x27;T&#x27;: -1, &#x27;V&#x27;: -3, &#x27;W&#x27;: -4, &#x27;Y&#x27;: -3}, &#x27;E&#x27;: {&#x27;A&#x27;: -1, &#x27;C&#x27;: -4, &#x27;D&#x27;: 2, &#x27;E&#x27;: 5, &#x27;F&#x27;: -3, &#x27;G&#x27;: -2, &#x27;H&#x27;: 0, &#x27;I&#x27;: -3, &#x27;K&#x27;: 1, &#x27;L&#x27;: -3, &#x27;M&#x27;: -2, &#x27;N&#x27;: 0, &#x27;P&#x27;: -1, &#x27;Q&#x27;: 2, &#x27;R&#x27;: 0, &#x27;S&#x27;: 0, &#x27;T&#x27;: -1, &#x27;V&#x27;: -2, &#x27;W&#x27;: -3, &#x27;Y&#x27;: -2}, &#x27;F&#x27;: {&#x27;A&#x27;: -2, &#x27;C&#x27;: -2, &#x27;D&#x27;: -3, &#x27;E&#x27;: -3, &#x27;F&#x27;: 6, &#x27;G&#x27;: -3, &#x27;H&#x27;: -1, &#x27;I&#x27;: 0, &#x27;K&#x27;: -3, &#x27;L&#x27;: 0, &#x27;M&#x27;: 0, &#x27;N&#x27;: -3, &#x27;P&#x27;: -4, &#x27;Q&#x27;: -3, &#x27;R&#x27;: -3, &#x27;S&#x27;: -2, &#x27;T&#x27;: -2, &#x27;V&#x27;: -1, &#x27;W&#x27;: 1, &#x27;Y&#x27;: 3}, &#x27;G&#x27;: {&#x27;A&#x27;: 0, &#x27;C&#x27;: -3, &#x27;D&#x27;: -1, &#x27;E&#x27;: -2, &#x27;F&#x27;: -3, &#x27;G&#x27;: 6, &#x27;H&#x27;: -2, &#x27;I&#x27;: -4, &#x27;K&#x27;: -2, &#x27;L&#x27;: -4, &#x27;M&#x27;: -3, &#x27;N&#x27;: 0, &#x27;P&#x27;: -2, &#x27;Q&#x27;: -2, &#x27;R&#x27;: -2, &#x27;S&#x27;: 0, &#x27;T&#x27;: -2, &#x27;V&#x27;: -3, &#x27;W&#x27;: -2, &#x27;Y&#x27;: -3}, &#x27;H&#x27;: {&#x27;A&#x27;: -2, &#x27;C&#x27;: -3, &#x27;D&#x27;: -1, &#x27;E&#x27;: 0, &#x27;F&#x27;: -1, &#x27;G&#x27;: -2, &#x27;H&#x27;: 8, &#x27;I&#x27;: -3, &#x27;K&#x27;: -1, &#x27;L&#x27;: -3, &#x27;M&#x27;: -2, &#x27;N&#x27;: 1, &#x27;P&#x27;: -2, &#x27;Q&#x27;: 0, &#x27;R&#x27;: 0, &#x27;S&#x27;: -1, &#x27;T&#x27;: -2, &#x27;V&#x27;: -3, &#x27;W&#x27;: -2, &#x27;Y&#x27;: 2}, &#x27;I&#x27;: {&#x27;A&#x27;: -1, &#x27;C&#x27;: -1, &#x27;D&#x27;: -3, &#x27;E&#x27;: -3, &#x27;F&#x27;: 0, &#x27;G&#x27;: -4, &#x27;H&#x27;: -3, &#x27;I&#x27;: 4, &#x27;K&#x27;: -3, &#x27;L&#x27;: 2, &#x27;M&#x27;: 1, &#x27;N&#x27;: -3, &#x27;P&#x27;: -3, &#x27;Q&#x27;: -3, &#x27;R&#x27;: -3, &#x27;S&#x27;: -2, &#x27;T&#x27;: -1, &#x27;V&#x27;: 3, &#x27;W&#x27;: -3, &#x27;Y&#x27;: -1}, &#x27;K&#x27;: {&#x27;A&#x27;: -1, &#x27;C&#x27;: -3, &#x27;D&#x27;: -1, &#x27;E&#x27;: 1, &#x27;F&#x27;: -3, &#x27;G&#x27;: -2, &#x27;H&#x27;: -1, &#x27;I&#x27;: -3, &#x27;K&#x27;: 5, &#x27;L&#x27;: -2, &#x27;M&#x27;: 0, &#x27;N&#x27;: 0, &#x27;P&#x27;: -1, &#x27;Q&#x27;: 1, &#x27;R&#x27;: 2, &#x27;S&#x27;: 0, &#x27;T&#x27;: -1, &#x27;V&#x27;: -2, &#x27;W&#x27;: -3, &#x27;Y&#x27;: -2}, &#x27;L&#x27;: {&#x27;A&#x27;: -1, &#x27;C&#x27;: -1, &#x27;D&#x27;: -4, &#x27;E&#x27;: -3, &#x27;F&#x27;: 0, &#x27;G&#x27;: -4, &#x27;H&#x27;: -3, &#x27;I&#x27;: 2, &#x27;K&#x27;: -2, &#x27;L&#x27;: 4, &#x27;M&#x27;: 2, &#x27;N&#x27;: -3, &#x27;P&#x27;: -3, &#x27;Q&#x27;: -2, &#x27;R&#x27;: -2, &#x27;S&#x27;: -2, &#x27;T&#x27;: -1, &#x27;V&#x27;: 1, &#x27;W&#x27;: -2, &#x27;Y&#x27;: -1}, &#x27;M&#x27;: {&#x27;A&#x27;: -1, &#x27;C&#x27;: -1, &#x27;D&#x27;: -3, &#x27;E&#x27;: -2, &#x27;F&#x27;: 0, &#x27;G&#x27;: -3, &#x27;H&#x27;: -2, &#x27;I&#x27;: 1, &#x27;K&#x27;: 0, &#x27;L&#x27;: 2, &#x27;M&#x27;: 5, &#x27;N&#x27;: -2, &#x27;P&#x27;: -2, &#x27;Q&#x27;: 0, &#x27;R&#x27;: -1, &#x27;S&#x27;: -1, &#x27;T&#x27;: -1, &#x27;V&#x27;: 1, &#x27;W&#x27;: -1, &#x27;Y&#x27;: -1}, &#x27;N&#x27;: {&#x27;A&#x27;: -2, &#x27;C&#x27;: -3, &#x27;D&#x27;: 1, &#x27;E&#x27;: 0, &#x27;F&#x27;: -3, &#x27;G&#x27;: 0, &#x27;H&#x27;: 1, &#x27;I&#x27;: -3, &#x27;K&#x27;: 0, &#x27;L&#x27;: -3, &#x27;M&#x27;: -2, &#x27;N&#x27;: 6, &#x27;P&#x27;: -2, &#x27;Q&#x27;: 0, &#x27;R&#x27;: 0, &#x27;S&#x27;: 1, &#x27;T&#x27;: 0, &#x27;V&#x27;: -3, &#x27;W&#x27;: -4, &#x27;Y&#x27;: -2}, &#x27;P&#x27;: {&#x27;A&#x27;: -1, &#x27;C&#x27;: -3, &#x27;D&#x27;: -1, &#x27;E&#x27;: -1, &#x27;F&#x27;: -4, &#x27;G&#x27;: -2, &#x27;H&#x27;: -2, &#x27;I&#x27;: -3, &#x27;K&#x27;: -1, &#x27;L&#x27;: -3, &#x27;M&#x27;: -2, &#x27;N&#x27;: -2, &#x27;P&#x27;: 7, &#x27;Q&#x27;: -1, &#x27;R&#x27;: -2, &#x27;S&#x27;: -1, &#x27;T&#x27;: -1, &#x27;V&#x27;: -2, &#x27;W&#x27;: -4, &#x27;Y&#x27;: -3}, &#x27;Q&#x27;: {&#x27;A&#x27;: -1, &#x27;C&#x27;: -3, &#x27;D&#x27;: 0, &#x27;E&#x27;: 2, &#x27;F&#x27;: -3, &#x27;G&#x27;: -2, &#x27;H&#x27;: 0, &#x27;I&#x27;: -3, &#x27;K&#x27;: 1, &#x27;L&#x27;: -2, &#x27;M&#x27;: 0, &#x27;N&#x27;: 0, &#x27;P&#x27;: -1, &#x27;Q&#x27;: 5, &#x27;R&#x27;: 1, &#x27;S&#x27;: 0, &#x27;T&#x27;: -1, &#x27;V&#x27;: -2, &#x27;W&#x27;: -2, &#x27;Y&#x27;: -1}, &#x27;R&#x27;: {&#x27;A&#x27;: -1, &#x27;C&#x27;: -3, &#x27;D&#x27;: -2, &#x27;E&#x27;: 0, &#x27;F&#x27;: -3, &#x27;G&#x27;: -2, &#x27;H&#x27;: 0, &#x27;I&#x27;: -3, &#x27;K&#x27;: 2, &#x27;L&#x27;: -2, &#x27;M&#x27;: -1, &#x27;N&#x27;: 0, &#x27;P&#x27;: -2, &#x27;Q&#x27;: 1, &#x27;R&#x27;: 5, &#x27;S&#x27;: -1, &#x27;T&#x27;: -1, &#x27;V&#x27;: -3, &#x27;W&#x27;: -3, &#x27;Y&#x27;: -2}, &#x27;S&#x27;: {&#x27;A&#x27;: 1, &#x27;C&#x27;: -1, &#x27;D&#x27;: 0, &#x27;E&#x27;: 0, &#x27;F&#x27;: -2, &#x27;G&#x27;: 0, &#x27;H&#x27;: -1, &#x27;I&#x27;: -2, &#x27;K&#x27;: 0, &#x27;L&#x27;: -2, &#x27;M&#x27;: -1, &#x27;N&#x27;: 1, &#x27;P&#x27;: -1, &#x27;Q&#x27;: 0, &#x27;R&#x27;: -1, &#x27;S&#x27;: 4, &#x27;T&#x27;: 1, &#x27;V&#x27;: -2, &#x27;W&#x27;: -3, &#x27;Y&#x27;: -2}, &#x27;T&#x27;: {&#x27;A&#x27;: 0, &#x27;C&#x27;: -1, &#x27;D&#x27;: -1, &#x27;E&#x27;: -1, &#x27;F&#x27;: -2, &#x27;G&#x27;: -2, &#x27;H&#x27;: -2, &#x27;I&#x27;: -1, &#x27;K&#x27;: -1, &#x27;L&#x27;: -1, &#x27;M&#x27;: -1, &#x27;N&#x27;: 0, &#x27;P&#x27;: -1, &#x27;Q&#x27;: -1, &#x27;R&#x27;: -1, &#x27;S&#x27;: 1, &#x27;T&#x27;: 5, &#x27;V&#x27;: 0, &#x27;W&#x27;: -2, &#x27;Y&#x27;: -2}, &#x27;V&#x27;: {&#x27;A&#x27;: 0, &#x27;C&#x27;: -1, &#x27;D&#x27;: -3, &#x27;E&#x27;: -2, &#x27;F&#x27;: -1, &#x27;G&#x27;: -3, &#x27;H&#x27;: -3, &#x27;I&#x27;: 3, &#x27;K&#x27;: -2, &#x27;L&#x27;: 1, &#x27;M&#x27;: 1, &#x27;N&#x27;: -3, &#x27;P&#x27;: -2, &#x27;Q&#x27;: -2, &#x27;R&#x27;: -3, &#x27;S&#x27;: -2, &#x27;T&#x27;: 0, &#x27;V&#x27;: 4, &#x27;W&#x27;: -3, &#x27;Y&#x27;: -1}, &#x27;W&#x27;: {&#x27;A&#x27;: -3, &#x27;C&#x27;: -2, &#x27;D&#x27;: -4, &#x27;E&#x27;: -3, &#x27;F&#x27;: 1, &#x27;G&#x27;: -2, &#x27;H&#x27;: -2, &#x27;I&#x27;: -3, &#x27;K&#x27;: -3, &#x27;L&#x27;: -2, &#x27;M&#x27;: -1, &#x27;N&#x27;: -4, &#x27;P&#x27;: -4, &#x27;Q&#x27;: -2, &#x27;R&#x27;: -3, &#x27;S&#x27;: -3, &#x27;T&#x27;: -2, &#x27;V&#x27;: -3, &#x27;W&#x27;: 11, &#x27;Y&#x27;: 2}, &#x27;Y&#x27;: {&#x27;A&#x27;: -2, &#x27;C&#x27;: -2, &#x27;D&#x27;: -3, &#x27;E&#x27;: -2, &#x27;F&#x27;: 3, &#x27;G&#x27;: -3, &#x27;H&#x27;: 2, &#x27;I&#x27;: -1, &#x27;K&#x27;: -2, &#x27;L&#x27;: -1, &#x27;M&#x27;: -1, &#x27;N&#x27;: -2, &#x27;P&#x27;: -3, &#x27;Q&#x27;: -1, &#x27;R&#x27;: -2, &#x27;S&#x27;: -2, &#x27;T&#x27;: -2, &#x27;V&#x27;: -1, &#x27;W&#x27;: 2, &#x27;Y&#x27;: 7}}"}, {"fullname": "protkit.metrics.scoring_matrix.ScoringMatrix.score", "modulename": "protkit.metrics.scoring_matrix", "qualname": "ScoringMatrix.score", "kind": "function", "doc": "<p>Returns the score of the two residues.</p>\n\n<p>Args:\n    residue1 (str): The first residue.\n    residue2 (str): The second residue.</p>\n\n<p>Returns:\n    int: The score of the two residues.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">residue1</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">residue2</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.metrics.sequence_eval", "modulename": "protkit.metrics.sequence_eval", "kind": "module", "doc": "<p>Implements class <code>SequenceEval</code> for evaluating protein sequences.</p>\n\n<p>Various metrics, such as sequence identity, similarity, and coverage, can be calculated\nto evaluate the quality of a protein sequence. These scores can be used to compare two\nsequences or to evaluate a single sequence against a reference sequence.</p>\n"}, {"fullname": "protkit.metrics.sequence_eval.SequenceEval", "modulename": "protkit.metrics.sequence_eval", "qualname": "SequenceEval", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "protkit.metrics.sequence_eval.SequenceEval.sequence_identity", "modulename": "protkit.metrics.sequence_eval", "qualname": "SequenceEval.sequence_identity", "kind": "function", "doc": "<p>Calculate the sequence identity between two sequences.</p>\n\n<p>Sequence identity is a measure of the similarity between two sequences. It is\ndefined as the number of identical residues divided by the total number of residues.</p>\n\n<p>Args:\n    seq1 (Sequence): The first sequence.\n    seq2 (Sequence): The second sequence.</p>\n\n<p>Returns:\n    float: A float representing the sequence identity between the two sequences.</p>\n\n<p>Raises:\n    ValueError: If the sequences are not of equal length.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">seq1</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">seq</span><span class=\"o\">.</span><span class=\"n\">sequence</span><span class=\"o\">.</span><span class=\"n\">Sequence</span>,</span><span class=\"param\">\t<span class=\"n\">seq2</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">seq</span><span class=\"o\">.</span><span class=\"n\">sequence</span><span class=\"o\">.</span><span class=\"n\">Sequence</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.metrics.sequence_eval.SequenceEval.sequence_similarity", "modulename": "protkit.metrics.sequence_eval", "qualname": "SequenceEval.sequence_similarity", "kind": "function", "doc": "<p>Calculate the sequence similarity between two sequences.</p>\n\n<p>Sequence similarity is a measure of the similarity between two sequences. It is\ndefined as the sum of the scores for matching residues divided by the total number\nof residues.</p>\n\n<p>Args:\n    seq1 (str): The first sequence.\n    seq2 (str): The second sequence.\n    match_score (int): The score to assign to matching residues.\n    mismatch_score (int): The score to assign to mismatching residues.\n    scoring_matrix (ScoringMatrix): The scoring matrix to use for scoring residue pairs.</p>\n\n<p>Returns:\n    float: A float representing the sequence similarity between the two sequences.</p>\n\n<p>Raises:\n    ValueError: If the sequences are not of equal length.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">seq1</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">seq</span><span class=\"o\">.</span><span class=\"n\">sequence</span><span class=\"o\">.</span><span class=\"n\">Sequence</span>,</span><span class=\"param\">\t<span class=\"n\">seq2</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">seq</span><span class=\"o\">.</span><span class=\"n\">sequence</span><span class=\"o\">.</span><span class=\"n\">Sequence</span>,</span><span class=\"param\">\t<span class=\"n\">match_score</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>,</span><span class=\"param\">\t<span class=\"n\">mismatch_score</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">scoring_matrix</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">metrics</span><span class=\"o\">.</span><span class=\"n\">scoring_matrix</span><span class=\"o\">.</span><span class=\"n\">ScoringMatrix</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.metrics.sequence_eval.SequenceEval.alignment_coverage", "modulename": "protkit.metrics.sequence_eval", "qualname": "SequenceEval.alignment_coverage", "kind": "function", "doc": "<p>Calculate the alignment coverage between two sequences.</p>\n\n<p>Alignment coverage is a measure of the proportion of residues in one sequence that\nare aligned with residues in another sequence. It is defined as the number of aligned\nresidues divided by the total number of residues.</p>\n\n<p>Args:\n    seq (Sequence): The sequence.\n    gap_symbol (str): The symbol used to represent gaps in the alignment.</p>\n\n<p>Returns:\n    float: A float representing the alignment coverage of the sequence.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">seq</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">seq</span><span class=\"o\">.</span><span class=\"n\">sequence</span><span class=\"o\">.</span><span class=\"n\">Sequence</span>, </span><span class=\"param\"><span class=\"n\">gap_symbol</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;-&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.metrics.sequence_eval.SequenceEval.edit_distance", "modulename": "protkit.metrics.sequence_eval", "qualname": "SequenceEval.edit_distance", "kind": "function", "doc": "<p>Calculate the edit distance (Levenshtein distance) between two sequences.</p>\n\n<p>The edit distance is a measure of the similarity between two sequences. It is defined\nas the minimum number of single-character edits (insertions, deletions, or substitutions)\nrequired to change one sequence into the other.</p>\n\n<p>Args:\n    seq1 (str): The first sequence.\n    seq2 (str): The second sequence.</p>\n\n<p>Returns:\n    float: A float representing the edit distance between the two sequences.</p>\n\n<p>Raises:\n    ValueError: If the sequences are not of equal length.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">seq1</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">seq</span><span class=\"o\">.</span><span class=\"n\">sequence</span><span class=\"o\">.</span><span class=\"n\">Sequence</span>,</span><span class=\"param\">\t<span class=\"n\">seq2</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">seq</span><span class=\"o\">.</span><span class=\"n\">sequence</span><span class=\"o\">.</span><span class=\"n\">Sequence</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.metrics.structure_eval", "modulename": "protkit.metrics.structure_eval", "kind": "module", "doc": "<p>Implements class <code>StructureEval</code> for evaluating protein structures.</p>\n\n<p>Various scores, such as RMSD, TMScore, GDT TS and Fnat, can be calculated to evaluate\nthe quality of a protein structure. These scores can be used to compare two structures\nor to evaluate a single structure against a reference structure.</p>\n"}, {"fullname": "protkit.metrics.structure_eval.StructureEval", "modulename": "protkit.metrics.structure_eval", "qualname": "StructureEval", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "protkit.metrics.structure_eval.StructureEval.RMSD", "modulename": "protkit.metrics.structure_eval", "qualname": "StructureEval.RMSD", "kind": "function", "doc": "<p>Calculates the root-mean-square deviation (RMSD) between two sets of coordinates.</p>\n\n<p>It provides a measure of the average distance between atoms of two superimposed structures.\nSee <a href=\"https://en.wikipedia.org/wiki/Root-mean-square_deviation_of_atomic_positions\">https://en.wikipedia.org/wiki/Root-mean-square_deviation_of_atomic_positions</a>.</p>\n\n<p>Args:\n    coordinates (List[List[float]]): A list of lists containing the coordinates to be evaluated.\n    reference (List[List[float]]): A list of lists containing the reference coordinates.\nReturns:\n    float: A float representing the RMSD between the two sets of coordinates.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">coordinates</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]]</span>, </span><span class=\"param\"><span class=\"n\">reference</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "protkit.metrics.structure_eval.StructureEval.TMscore", "modulename": "protkit.metrics.structure_eval", "qualname": "StructureEval.TMscore", "kind": "function", "doc": "<p>Calculates the template modelling (TM-score) between two sets of coordinates.</p>\n\n<p>The TM-score is a measure of the structural similarity between two protein structures.\nIt is intended to be more robust to variations in protein length than the RMSD. It\nprovides a score in the range (0, 1] where 1 indicates a perfect match. See\n<a href=\"https://en.wikipedia.org/wiki/Template_modeling_score\">https://en.wikipedia.org/wiki/Template_modeling_score</a></p>\n\n<p>Args:\n    coordinates (List[List[float]]): A list of lists containing the coordinates to be evaluated.\n    reference (List[List[float]]): A list of lists containing the reference coordinates.\nReturns:\n    float: A float representing the TM-score between the two sets of coordinates.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">coordinates</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]]</span>, </span><span class=\"param\"><span class=\"n\">reference</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "protkit.metrics.structure_eval.StructureEval.GDT_TS", "modulename": "protkit.metrics.structure_eval", "qualname": "StructureEval.GDT_TS", "kind": "function", "doc": "<p>Calculates the GDT_TS score between two sets of coordinates.</p>\n\n<p>Args:\n    coordinates (List[List[float]]): A list of lists containing the coordinates to be evaluated.\n    reference (List[List[float]]): A list of lists containing the reference coordinates.\nReturns:\n    float: A float representing the GDT_TS score between the two sets of coordinates.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">coordinates</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]]</span>, </span><span class=\"param\"><span class=\"n\">reference</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "protkit.metrics.structure_eval.StructureEval.Fnat", "modulename": "protkit.metrics.structure_eval", "qualname": "StructureEval.Fnat", "kind": "function", "doc": "<p>Calculates the fraction of native contacts (Fnat).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "protkit.metrics.utility_eval", "modulename": "protkit.metrics.utility_eval", "kind": "module", "doc": "<p>Implements class <code>UtilityEval</code> for evaluating monitoring resources such as\nexecution time, memory usage, disk usage, network usage, etc. during the\nexecution of a program.</p>\n"}, {"fullname": "protkit.metrics.utility_eval.UtilityEval", "modulename": "protkit.metrics.utility_eval", "qualname": "UtilityEval", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "protkit.ml", "modulename": "protkit.ml", "kind": "module", "doc": "<p>Package <code>ml</code> contains classes to prepare data for machine learning applications and to represent machine learning models in computational biology.</p>\n\n<ul>\n<li><code>ProteinToDataframe</code> class in <code>protein_to_dataframe</code>: Converts protein data to pandas dataframes.</li>\n</ul>\n"}, {"fullname": "protkit.ml.dataframe", "modulename": "protkit.ml.dataframe", "kind": "module", "doc": "<p>Implements class <code>ProteinToDataframe</code> to convert a protein structure into a pandas DataFrame.</p>\n"}, {"fullname": "protkit.ml.dataframe.ProteinToDataframe", "modulename": "protkit.ml.dataframe", "qualname": "ProteinToDataframe", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "protkit.ml.dataframe.ProteinToDataframe.DEFAULT_PROTEIN_FIELDS", "modulename": "protkit.ml.dataframe", "qualname": "ProteinToDataframe.DEFAULT_PROTEIN_FIELDS", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;pdb_id&#x27;, &#x27;num_chains&#x27;, &#x27;num_residues&#x27;, &#x27;num_atoms&#x27;]"}, {"fullname": "protkit.ml.dataframe.ProteinToDataframe.EXCLUDED_PROTEIN_FIELDS", "modulename": "protkit.ml.dataframe", "qualname": "ProteinToDataframe.EXCLUDED_PROTEIN_FIELDS", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;chains&#x27;]"}, {"fullname": "protkit.ml.dataframe.ProteinToDataframe.DEFAULT_CHAIN_FIELDS", "modulename": "protkit.ml.dataframe", "qualname": "ProteinToDataframe.DEFAULT_CHAIN_FIELDS", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;pdb_id&#x27;, &#x27;chain_id&#x27;, &#x27;num_residues&#x27;, &#x27;num_atoms&#x27;]"}, {"fullname": "protkit.ml.dataframe.ProteinToDataframe.EXCLUDED_CHAIN_FIELDS", "modulename": "protkit.ml.dataframe", "qualname": "ProteinToDataframe.EXCLUDED_CHAIN_FIELDS", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;residues&#x27;, &#x27;protein&#x27;, &#x27;seqres&#x27;]"}, {"fullname": "protkit.ml.dataframe.ProteinToDataframe.DEFAULT_RESIDUE_FIELDS", "modulename": "protkit.ml.dataframe", "qualname": "ProteinToDataframe.DEFAULT_RESIDUE_FIELDS", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;pdb_id&#x27;, &#x27;chain_id&#x27;, &#x27;sequence_no&#x27;, &#x27;insertion_code&#x27;, &#x27;residue_type&#x27;, &#x27;is_disordered&#x27;, &#x27;is_hetero&#x27;, &#x27;num_atoms&#x27;, &#x27;num_heavy_atoms&#x27;, &#x27;num_hydrogen_atoms&#x27;]"}, {"fullname": "protkit.ml.dataframe.ProteinToDataframe.EXCLUDED_RESIDUE_FIELDS", "modulename": "protkit.ml.dataframe", "qualname": "ProteinToDataframe.EXCLUDED_RESIDUE_FIELDS", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;atoms&#x27;, &#x27;chain&#x27;]"}, {"fullname": "protkit.ml.dataframe.ProteinToDataframe.DEFAULT_ATOM_FIELDS", "modulename": "protkit.ml.dataframe", "qualname": "ProteinToDataframe.DEFAULT_ATOM_FIELDS", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;pdb_id&#x27;, &#x27;chain_id&#x27;, &#x27;sequence_no&#x27;, &#x27;insertion_code&#x27;, &#x27;residue_type&#x27;, &#x27;atom_type&#x27;, &#x27;element&#x27;, &#x27;x&#x27;, &#x27;y&#x27;, &#x27;z&#x27;, &#x27;is_disordered&#x27;, &#x27;is_hetero&#x27;, &#x27;alt_loc&#x27;, &#x27;occupancy&#x27;, &#x27;temp_factor&#x27;, &#x27;assigned_charge&#x27;, &#x27;calculated_charge&#x27;, &#x27;radius&#x27;]"}, {"fullname": "protkit.ml.dataframe.ProteinToDataframe.EXCLUDED_ATOM_FIELDS", "modulename": "protkit.ml.dataframe", "qualname": "ProteinToDataframe.EXCLUDED_ATOM_FIELDS", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;residue&#x27;]"}, {"fullname": "protkit.ml.dataframe.ProteinToDataframe.DEFAULT_SEQUENCE_FIELDS", "modulename": "protkit.ml.dataframe", "qualname": "ProteinToDataframe.DEFAULT_SEQUENCE_FIELDS", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;chain_id&#x27;, &#x27;description&#x27;, &#x27;length&#x27;, &#x27;sequence&#x27;]"}, {"fullname": "protkit.ml.dataframe.ProteinToDataframe.EXCLUDED_SEQUENCE_FIELDS", "modulename": "protkit.ml.dataframe", "qualname": "ProteinToDataframe.EXCLUDED_SEQUENCE_FIELDS", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;extended_attributes&#x27;]"}, {"fullname": "protkit.ml.dataframe.ProteinToDataframe.proteins_dataframe", "modulename": "protkit.ml.dataframe", "qualname": "ProteinToDataframe.proteins_dataframe", "kind": "function", "doc": "<p>Featurize the protein(s).</p>\n\n<p>Args:\n    protein: Protein object or list of Protein objects.\n    additional_fields: List of additional fields to include in the dataframe.\n        If None, all default fields as well as any additional fields will be included.\n        If List, all default fields as well as the specified fields will be included.</p>\n\n<p>Returns:\n    pd.DataFrame: Dataframe containing protein features.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\tprotein: [&lt;class &#x27;protkit.structure.protein.Protein&#x27;&gt;, typing.List[protkit.structure.protein.Protein]],</span><span class=\"param\">\t<span class=\"n\">additional_fields</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.ml.dataframe.ProteinToDataframe.chains_dataframe", "modulename": "protkit.ml.dataframe", "qualname": "ProteinToDataframe.chains_dataframe", "kind": "function", "doc": "<p>Featurize the chain(s) of a protein or list of proteins.</p>\n\n<p>Args:\n    protein: Protein object or list of Protein objects.\n    additional_fields: List of additional fields to include in the dataframe.\n        If None, all default fields as well as any additional fields will be included.\n        If List, all default fields as well as the specified fields will be included.</p>\n\n<p>Returns:\n    pd.DataFrame: Dataframe containing chain features.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\tprotein: [&lt;class &#x27;protkit.structure.protein.Protein&#x27;&gt;, typing.List[protkit.structure.protein.Protein]],</span><span class=\"param\">\t<span class=\"n\">additional_fields</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.ml.dataframe.ProteinToDataframe.residues_dataframe", "modulename": "protkit.ml.dataframe", "qualname": "ProteinToDataframe.residues_dataframe", "kind": "function", "doc": "<p>Featurize the residues of a protein or list of proteins.</p>\n\n<p>Args:\n    protein: Protein object or list of Protein objects.\n    additional_fields: List of additional fields to include in the dataframe.\n        If None, all default fields as well as any additional fields will be included.\n        If List, all default fields as well as the specified fields will be included.</p>\n\n<p>Returns:\n    pd.DataFrame: Dataframe containing residue features.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\tprotein: [&lt;class &#x27;protkit.structure.protein.Protein&#x27;&gt;, typing.List[protkit.structure.protein.Protein]],</span><span class=\"param\">\t<span class=\"n\">additional_fields</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.ml.dataframe.ProteinToDataframe.atoms_dataframe", "modulename": "protkit.ml.dataframe", "qualname": "ProteinToDataframe.atoms_dataframe", "kind": "function", "doc": "<p>Featurize the atoms of a protein or list of proteins.</p>\n\n<p>Args:\n    protein: Protein object or list of Protein objects.\n    additional_fields: List of additional fields to include in the dataframe.\n        If None, all default fields as well as any additional fields will be included.\n        If List, all default fields as well as the specified fields will be included.</p>\n\n<p>Returns:\n    pd.DataFrame: Dataframe containing atom features.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\tprotein: [&lt;class &#x27;protkit.structure.protein.Protein&#x27;&gt;, typing.List[protkit.structure.protein.Protein]],</span><span class=\"param\">\t<span class=\"n\">additional_fields</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.ml.dataframe.ProteinToDataframe.sequences_dataframe", "modulename": "protkit.ml.dataframe", "qualname": "ProteinToDataframe.sequences_dataframe", "kind": "function", "doc": "<p>Featurize the sequences of a protein or list of proteins.</p>\n\n<p>Args:\n    sequences: List of Sequence objects.\n    additional_fields: List of additional fields to include in the dataframe.</p>\n\n<p>Returns:\n    pd.DataFrame: Dataframe containing sequence features.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">sequences</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">seq</span><span class=\"o\">.</span><span class=\"n\">sequence</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">additional_fields</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties", "modulename": "protkit.properties", "kind": "module", "doc": "<p>Package <code>properties</code> contains classes to calculate properties of proteins.</p>\n\n<p>Properties are divided into various categories:</p>\n\n<ul>\n<li>Chemical Identity: Properties that describe the chemical composition of molecules.</li>\n<li>Physiochemical: Properties that describe the physical and chemical characteristics of molecules.</li>\n<li>Pharmacophore: Properties that relate to the recognition and binding of a molecule to its biological target.</li>\n<li>Structural: Properties related to the three-dimensional structure of a molecule.</li>\n</ul>\n"}, {"fullname": "protkit.properties.bond_angles", "modulename": "protkit.properties.bond_angles", "kind": "module", "doc": "<p>Implements class to calculate bond angles <code>BondAngles</code> to calculate bond angles\nin a residue, chain or protein.</p>\n"}, {"fullname": "protkit.properties.bond_angles.BondAngles", "modulename": "protkit.properties.bond_angles", "qualname": "BondAngles", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "protkit.properties.bond_angles.BondAngles.HEAVY_ATOM_BOND_ANGLES", "modulename": "protkit.properties.bond_angles", "qualname": "BondAngles.HEAVY_ATOM_BOND_ANGLES", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;ALA&#x27;: {(&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;C&#x27;), (&#x27;C&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;), (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;), (&#x27;CA&#x27;, &#x27;C&#x27;, &#x27;O&#x27;)}, &#x27;ARG&#x27;: {(&#x27;CG&#x27;, &#x27;CD&#x27;, &#x27;NE&#x27;), (&#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;CG&#x27;), (&#x27;CA&#x27;, &#x27;C&#x27;, &#x27;O&#x27;), (&#x27;CD&#x27;, &#x27;NE&#x27;, &#x27;CZ&#x27;), (&#x27;NH1&#x27;, &#x27;CZ&#x27;, &#x27;NH2&#x27;), (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;C&#x27;), (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;), (&#x27;C&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;), (&#x27;NE&#x27;, &#x27;CZ&#x27;, &#x27;NH1&#x27;), (&#x27;CB&#x27;, &#x27;CG&#x27;, &#x27;CD&#x27;), (&#x27;NE&#x27;, &#x27;CZ&#x27;, &#x27;NH2&#x27;)}, &#x27;ASN&#x27;: {(&#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;CG&#x27;), (&#x27;CA&#x27;, &#x27;C&#x27;, &#x27;O&#x27;), (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;C&#x27;), (&#x27;CB&#x27;, &#x27;CG&#x27;, &#x27;ND2&#x27;), (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;), (&#x27;C&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;), (&#x27;ND2&#x27;, &#x27;CG&#x27;, &#x27;OD1&#x27;), (&#x27;CB&#x27;, &#x27;CG&#x27;, &#x27;OD1&#x27;)}, &#x27;ASP&#x27;: {(&#x27;CB&#x27;, &#x27;CG&#x27;, &#x27;OD2&#x27;), (&#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;CG&#x27;), (&#x27;CA&#x27;, &#x27;C&#x27;, &#x27;O&#x27;), (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;C&#x27;), (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;), (&#x27;OD1&#x27;, &#x27;CG&#x27;, &#x27;OD2&#x27;), (&#x27;C&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;), (&#x27;CB&#x27;, &#x27;CG&#x27;, &#x27;OD1&#x27;)}, &#x27;CYS&#x27;: {(&#x27;C&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;), (&#x27;CA&#x27;, &#x27;C&#x27;, &#x27;O&#x27;), (&#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;SG&#x27;), (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;C&#x27;), (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;)}, &#x27;GLU&#x27;: {(&#x27;CG&#x27;, &#x27;CD&#x27;, &#x27;OE2&#x27;), (&#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;CG&#x27;), (&#x27;CA&#x27;, &#x27;C&#x27;, &#x27;O&#x27;), (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;C&#x27;), (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;), (&#x27;CG&#x27;, &#x27;CD&#x27;, &#x27;OE1&#x27;), (&#x27;C&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;), (&#x27;CB&#x27;, &#x27;CG&#x27;, &#x27;CD&#x27;), (&#x27;OE1&#x27;, &#x27;CD&#x27;, &#x27;OE2&#x27;)}, &#x27;GLN&#x27;: {(&#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;CG&#x27;), (&#x27;CA&#x27;, &#x27;C&#x27;, &#x27;O&#x27;), (&#x27;OE1&#x27;, &#x27;CD&#x27;, &#x27;NE2&#x27;), (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;C&#x27;), (&#x27;CG&#x27;, &#x27;CD&#x27;, &#x27;NE2&#x27;), (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;), (&#x27;CG&#x27;, &#x27;CD&#x27;, &#x27;OE1&#x27;), (&#x27;C&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;), (&#x27;CB&#x27;, &#x27;CG&#x27;, &#x27;CD&#x27;)}, &#x27;GLY&#x27;: {(&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;C&#x27;), (&#x27;CA&#x27;, &#x27;C&#x27;, &#x27;O&#x27;)}, &#x27;HIS&#x27;: {(&#x27;CB&#x27;, &#x27;CG&#x27;, &#x27;ND1&#x27;), (&#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;CG&#x27;), (&#x27;CA&#x27;, &#x27;C&#x27;, &#x27;O&#x27;), (&#x27;ND1&#x27;, &#x27;CE1&#x27;, &#x27;NE2&#x27;), (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;C&#x27;), (&#x27;NE2&#x27;, &#x27;CD2&#x27;, &#x27;CG&#x27;), (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;), (&#x27;CB&#x27;, &#x27;CG&#x27;, &#x27;CD2&#x27;), (&#x27;CG&#x27;, &#x27;ND1&#x27;, &#x27;CE1&#x27;), (&#x27;C&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;), (&#x27;CD2&#x27;, &#x27;CG&#x27;, &#x27;ND1&#x27;), (&#x27;CE1&#x27;, &#x27;NE2&#x27;, &#x27;CD2&#x27;)}, &#x27;ILE&#x27;: {(&#x27;CA&#x27;, &#x27;C&#x27;, &#x27;O&#x27;), (&#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;CG2&#x27;), (&#x27;CG1&#x27;, &#x27;CB&#x27;, &#x27;CG2&#x27;), (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;C&#x27;), (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;), (&#x27;C&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;), (&#x27;CB&#x27;, &#x27;CG1&#x27;, &#x27;CD1&#x27;), (&#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;CG1&#x27;)}, &#x27;LEU&#x27;: {(&#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;CG&#x27;), (&#x27;CA&#x27;, &#x27;C&#x27;, &#x27;O&#x27;), (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;C&#x27;), (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;), (&#x27;CB&#x27;, &#x27;CG&#x27;, &#x27;CD2&#x27;), (&#x27;C&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;), (&#x27;CB&#x27;, &#x27;CG&#x27;, &#x27;CD1&#x27;), (&#x27;CD1&#x27;, &#x27;CG&#x27;, &#x27;CD2&#x27;)}, &#x27;LYS&#x27;: {(&#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;CG&#x27;), (&#x27;CA&#x27;, &#x27;C&#x27;, &#x27;O&#x27;), (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;C&#x27;), (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;), (&#x27;CG&#x27;, &#x27;CD&#x27;, &#x27;CE&#x27;), (&#x27;C&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;), (&#x27;CD&#x27;, &#x27;CE&#x27;, &#x27;NZ&#x27;), (&#x27;CB&#x27;, &#x27;CG&#x27;, &#x27;CD&#x27;)}, &#x27;MET&#x27;: {(&#x27;C&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;), (&#x27;CG&#x27;, &#x27;SD&#x27;, &#x27;CE&#x27;), (&#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;CG&#x27;), (&#x27;CA&#x27;, &#x27;C&#x27;, &#x27;O&#x27;), (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;C&#x27;), (&#x27;CB&#x27;, &#x27;CG&#x27;, &#x27;SD&#x27;), (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;)}, &#x27;PHE&#x27;: {(&#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;CG&#x27;), (&#x27;CA&#x27;, &#x27;C&#x27;, &#x27;O&#x27;), (&#x27;CE2&#x27;, &#x27;CD2&#x27;, &#x27;CG&#x27;), (&#x27;CD1&#x27;, &#x27;CE1&#x27;, &#x27;CZ&#x27;), (&#x27;CG&#x27;, &#x27;CD1&#x27;, &#x27;CE1&#x27;), (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;C&#x27;), (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;), (&#x27;CZ&#x27;, &#x27;CE2&#x27;, &#x27;CD2&#x27;), (&#x27;CB&#x27;, &#x27;CG&#x27;, &#x27;CD2&#x27;), (&#x27;C&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;), (&#x27;CE1&#x27;, &#x27;CZ&#x27;, &#x27;CE2&#x27;), (&#x27;CB&#x27;, &#x27;CG&#x27;, &#x27;CD1&#x27;), (&#x27;CD1&#x27;, &#x27;CG&#x27;, &#x27;CD2&#x27;)}, &#x27;PRO&#x27;: {(&#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;CG&#x27;), (&#x27;CA&#x27;, &#x27;C&#x27;, &#x27;O&#x27;), (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;C&#x27;), (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;), (&#x27;CG&#x27;, &#x27;CD&#x27;, &#x27;N&#x27;), (&#x27;C&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;), (&#x27;CA&#x27;, &#x27;N&#x27;, &#x27;CD&#x27;), (&#x27;CB&#x27;, &#x27;CG&#x27;, &#x27;CD&#x27;)}, &#x27;SER&#x27;: {(&#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;OG&#x27;), (&#x27;C&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;), (&#x27;CA&#x27;, &#x27;C&#x27;, &#x27;O&#x27;), (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;C&#x27;), (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;)}, &#x27;THR&#x27;: {(&#x27;OG1&#x27;, &#x27;CB&#x27;, &#x27;CG2&#x27;), (&#x27;C&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;), (&#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;OG1&#x27;), (&#x27;CA&#x27;, &#x27;C&#x27;, &#x27;O&#x27;), (&#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;CG2&#x27;), (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;C&#x27;), (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;)}, &#x27;TRP&#x27;: {(&#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;CG&#x27;), (&#x27;CD2&#x27;, &#x27;CE2&#x27;, &#x27;CZ2&#x27;), (&#x27;CE2&#x27;, &#x27;CD2&#x27;, &#x27;CG&#x27;), (&#x27;CG&#x27;, &#x27;CD2&#x27;, &#x27;CE3&#x27;), (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;C&#x27;), (&#x27;CZ2&#x27;, &#x27;CH2&#x27;, &#x27;CZ3&#x27;), (&#x27;NE1&#x27;, &#x27;CE2&#x27;, &#x27;CD2&#x27;), (&#x27;CE2&#x27;, &#x27;CZ2&#x27;, &#x27;CH2&#x27;), (&#x27;CH2&#x27;, &#x27;CZ3&#x27;, &#x27;CE3&#x27;), (&#x27;CD1&#x27;, &#x27;CG&#x27;, &#x27;CD2&#x27;), (&#x27;NE1&#x27;, &#x27;CE2&#x27;, &#x27;CZ2&#x27;), (&#x27;CA&#x27;, &#x27;C&#x27;, &#x27;O&#x27;), (&#x27;CD1&#x27;, &#x27;NE1&#x27;, &#x27;CE2&#x27;), (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;), (&#x27;CZ3&#x27;, &#x27;CE3&#x27;, &#x27;CD2&#x27;), (&#x27;CB&#x27;, &#x27;CG&#x27;, &#x27;CD2&#x27;), (&#x27;CE3&#x27;, &#x27;CD2&#x27;, &#x27;CE2&#x27;), (&#x27;C&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;), (&#x27;CG&#x27;, &#x27;CD1&#x27;, &#x27;NE1&#x27;), (&#x27;CB&#x27;, &#x27;CG&#x27;, &#x27;CD1&#x27;)}, &#x27;TYR&#x27;: {(&#x27;CE1&#x27;, &#x27;CZ&#x27;, &#x27;OH&#x27;), (&#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;CG&#x27;), (&#x27;CA&#x27;, &#x27;C&#x27;, &#x27;O&#x27;), (&#x27;CG&#x27;, &#x27;CD2&#x27;, &#x27;CE2&#x27;), (&#x27;CD1&#x27;, &#x27;CE1&#x27;, &#x27;CZ&#x27;), (&#x27;CG&#x27;, &#x27;CD1&#x27;, &#x27;CE1&#x27;), (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;C&#x27;), (&#x27;CE2&#x27;, &#x27;CZ&#x27;, &#x27;OH&#x27;), (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;), (&#x27;CB&#x27;, &#x27;CG&#x27;, &#x27;CD2&#x27;), (&#x27;C&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;), (&#x27;CD2&#x27;, &#x27;CE2&#x27;, &#x27;CZ&#x27;), (&#x27;CE1&#x27;, &#x27;CZ&#x27;, &#x27;CE2&#x27;), (&#x27;CB&#x27;, &#x27;CG&#x27;, &#x27;CD1&#x27;), (&#x27;CD1&#x27;, &#x27;CG&#x27;, &#x27;CD2&#x27;)}, &#x27;VAL&#x27;: {(&#x27;C&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;), (&#x27;CA&#x27;, &#x27;C&#x27;, &#x27;O&#x27;), (&#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;CG2&#x27;), (&#x27;CG1&#x27;, &#x27;CB&#x27;, &#x27;CG2&#x27;), (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;C&#x27;), (&#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;CG1&#x27;), (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;)}}"}, {"fullname": "protkit.properties.bond_angles.BondAngles.angle", "modulename": "protkit.properties.bond_angles", "qualname": "BondAngles.angle", "kind": "function", "doc": "<p>Calculates the angle between three atoms.</p>\n\n<p>Args:\n    a1 (Atom): The first atom.\n    a2 (Atom): The second atom.\n    a3 (Atom): The third atom.</p>\n\n<p>Returns:\n    float: The angle between the three atoms.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a1</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">atom</span><span class=\"o\">.</span><span class=\"n\">Atom</span>,</span><span class=\"param\">\t<span class=\"n\">a2</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">atom</span><span class=\"o\">.</span><span class=\"n\">Atom</span>,</span><span class=\"param\">\t<span class=\"n\">a3</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">atom</span><span class=\"o\">.</span><span class=\"n\">Atom</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.bond_angles.BondAngles.bond_angles_of_residue", "modulename": "protkit.properties.bond_angles", "qualname": "BondAngles.bond_angles_of_residue", "kind": "function", "doc": "<p>Returns the bond angles of a residue</p>\n\n<p>Args:\n    residue (Residue): The residue for which to return the bond angles\n    assign_attribute (bool): Whether to assign the bond angles to the residue\n    key (str): The key to use to access the bond angles</p>\n\n<p>Returns:\n    Dict[Tuple[str, str, str], float]: A dictionary of bond angles</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">residue</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">residue</span><span class=\"o\">.</span><span class=\"n\">Residue</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;bond_angles&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.bond_angles.BondAngles.bond_angles_of_chain", "modulename": "protkit.properties.bond_angles", "qualname": "BondAngles.bond_angles_of_chain", "kind": "function", "doc": "<p>Returns the bond angles of a chain</p>\n\n<p>Args:\n    chain (Chain): The chain for which to return the bond angles\n    assign_attribute (bool): Whether to assign the bond angles to the chain\n    key (str): The key to use to access the bond angles</p>\n\n<p>Returns:\n    Dict[str, Dict]: A dictionary of bond angles.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">chain</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">chain</span><span class=\"o\">.</span><span class=\"n\">Chain</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;bond_angles&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.bond_angles.BondAngles.bond_angles_of_protein", "modulename": "protkit.properties.bond_angles", "qualname": "BondAngles.bond_angles_of_protein", "kind": "function", "doc": "<p>Returns the bond angles of a protein</p>\n\n<p>Args:\n    protein (Protein): The protein for which to return the bond angles\n    assign_attribute (bool): Whether to assign the bond angles to the protein\n    key (str): The key to use to access the bond angles</p>\n\n<p>Returns:\n    Dict[str, Dict]: A dictionary of bond angles.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">protein</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;bond_angles&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.bond_lengths", "modulename": "protkit.properties.bond_lengths", "kind": "module", "doc": "<p>Implements class <code>BondLengths</code> to calculate the bond lengths in a residue,\nchain or protein.</p>\n"}, {"fullname": "protkit.properties.bond_lengths.BondLengths", "modulename": "protkit.properties.bond_lengths", "qualname": "BondLengths", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "protkit.properties.bond_lengths.BondLengths.HEAVY_ATOM_BONDS", "modulename": "protkit.properties.bond_lengths", "qualname": "BondLengths.HEAVY_ATOM_BONDS", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;ALA&#x27;: [(&#x27;N&#x27;, &#x27;CA&#x27;), (&#x27;CA&#x27;, &#x27;C&#x27;), (&#x27;C&#x27;, &#x27;O&#x27;), (&#x27;CA&#x27;, &#x27;CB&#x27;)], &#x27;ASN&#x27;: [(&#x27;N&#x27;, &#x27;CA&#x27;), (&#x27;CA&#x27;, &#x27;C&#x27;), (&#x27;C&#x27;, &#x27;O&#x27;), (&#x27;CA&#x27;, &#x27;CB&#x27;), (&#x27;CB&#x27;, &#x27;CG&#x27;), (&#x27;CG&#x27;, &#x27;OD1&#x27;), (&#x27;CG&#x27;, &#x27;ND2&#x27;)], &#x27;ASP&#x27;: [(&#x27;N&#x27;, &#x27;CA&#x27;), (&#x27;CA&#x27;, &#x27;C&#x27;), (&#x27;C&#x27;, &#x27;O&#x27;), (&#x27;CA&#x27;, &#x27;CB&#x27;), (&#x27;CB&#x27;, &#x27;CG&#x27;), (&#x27;CG&#x27;, &#x27;OD1&#x27;), (&#x27;CG&#x27;, &#x27;OD2&#x27;)], &#x27;ARG&#x27;: [(&#x27;N&#x27;, &#x27;CA&#x27;), (&#x27;CA&#x27;, &#x27;C&#x27;), (&#x27;C&#x27;, &#x27;O&#x27;), (&#x27;CA&#x27;, &#x27;CB&#x27;), (&#x27;CB&#x27;, &#x27;CG&#x27;), (&#x27;CG&#x27;, &#x27;CD&#x27;), (&#x27;CD&#x27;, &#x27;NE&#x27;), (&#x27;NE&#x27;, &#x27;CZ&#x27;), (&#x27;CZ&#x27;, &#x27;NH1&#x27;), (&#x27;CZ&#x27;, &#x27;NH2&#x27;)], &#x27;CYS&#x27;: [(&#x27;N&#x27;, &#x27;CA&#x27;), (&#x27;CA&#x27;, &#x27;C&#x27;), (&#x27;C&#x27;, &#x27;O&#x27;), (&#x27;CA&#x27;, &#x27;CB&#x27;), (&#x27;CB&#x27;, &#x27;SG&#x27;)], &#x27;GLN&#x27;: [(&#x27;N&#x27;, &#x27;CA&#x27;), (&#x27;CA&#x27;, &#x27;C&#x27;), (&#x27;C&#x27;, &#x27;O&#x27;), (&#x27;CA&#x27;, &#x27;CB&#x27;), (&#x27;CB&#x27;, &#x27;CG&#x27;), (&#x27;CG&#x27;, &#x27;CD&#x27;), (&#x27;CD&#x27;, &#x27;OE1&#x27;), (&#x27;CD&#x27;, &#x27;NE2&#x27;)], &#x27;GLY&#x27;: [(&#x27;N&#x27;, &#x27;CA&#x27;), (&#x27;CA&#x27;, &#x27;C&#x27;), (&#x27;C&#x27;, &#x27;O&#x27;)], &#x27;GLU&#x27;: [(&#x27;N&#x27;, &#x27;CA&#x27;), (&#x27;CA&#x27;, &#x27;C&#x27;), (&#x27;C&#x27;, &#x27;O&#x27;), (&#x27;CA&#x27;, &#x27;CB&#x27;), (&#x27;CB&#x27;, &#x27;CG&#x27;), (&#x27;CG&#x27;, &#x27;CD&#x27;), (&#x27;CD&#x27;, &#x27;OE1&#x27;), (&#x27;CD&#x27;, &#x27;OE2&#x27;)], &#x27;HIS&#x27;: [(&#x27;N&#x27;, &#x27;CA&#x27;), (&#x27;CA&#x27;, &#x27;C&#x27;), (&#x27;C&#x27;, &#x27;O&#x27;), (&#x27;CA&#x27;, &#x27;CB&#x27;), (&#x27;CB&#x27;, &#x27;CG&#x27;), (&#x27;CG&#x27;, &#x27;ND1&#x27;), (&#x27;CG&#x27;, &#x27;CD2&#x27;), (&#x27;ND1&#x27;, &#x27;CE1&#x27;), (&#x27;CD2&#x27;, &#x27;NE2&#x27;), (&#x27;CE1&#x27;, &#x27;NE2&#x27;)], &#x27;ILE&#x27;: [(&#x27;N&#x27;, &#x27;CA&#x27;), (&#x27;CA&#x27;, &#x27;C&#x27;), (&#x27;C&#x27;, &#x27;O&#x27;), (&#x27;CA&#x27;, &#x27;CB&#x27;), (&#x27;CB&#x27;, &#x27;CG1&#x27;), (&#x27;CB&#x27;, &#x27;CG2&#x27;), (&#x27;CG1&#x27;, &#x27;CD1&#x27;)], &#x27;LEU&#x27;: [(&#x27;N&#x27;, &#x27;CA&#x27;), (&#x27;CA&#x27;, &#x27;C&#x27;), (&#x27;C&#x27;, &#x27;O&#x27;), (&#x27;CA&#x27;, &#x27;CB&#x27;), (&#x27;CB&#x27;, &#x27;CG&#x27;), (&#x27;CG&#x27;, &#x27;CD1&#x27;), (&#x27;CG&#x27;, &#x27;CD2&#x27;)], &#x27;LYS&#x27;: [(&#x27;N&#x27;, &#x27;CA&#x27;), (&#x27;CA&#x27;, &#x27;C&#x27;), (&#x27;C&#x27;, &#x27;O&#x27;), (&#x27;CA&#x27;, &#x27;CB&#x27;), (&#x27;CB&#x27;, &#x27;CG&#x27;), (&#x27;CG&#x27;, &#x27;CD&#x27;), (&#x27;CD&#x27;, &#x27;CE&#x27;), (&#x27;CE&#x27;, &#x27;NZ&#x27;)], &#x27;MET&#x27;: [(&#x27;N&#x27;, &#x27;CA&#x27;), (&#x27;CA&#x27;, &#x27;C&#x27;), (&#x27;C&#x27;, &#x27;O&#x27;), (&#x27;CA&#x27;, &#x27;CB&#x27;), (&#x27;CB&#x27;, &#x27;CG&#x27;), (&#x27;CG&#x27;, &#x27;SD&#x27;), (&#x27;SD&#x27;, &#x27;CE&#x27;)], &#x27;PHE&#x27;: [(&#x27;N&#x27;, &#x27;CA&#x27;), (&#x27;CA&#x27;, &#x27;C&#x27;), (&#x27;C&#x27;, &#x27;O&#x27;), (&#x27;CA&#x27;, &#x27;CB&#x27;), (&#x27;CB&#x27;, &#x27;CG&#x27;), (&#x27;CG&#x27;, &#x27;CD1&#x27;), (&#x27;CG&#x27;, &#x27;CD2&#x27;), (&#x27;CD1&#x27;, &#x27;CE1&#x27;), (&#x27;CD2&#x27;, &#x27;CE2&#x27;), (&#x27;CE1&#x27;, &#x27;CZ&#x27;), (&#x27;CE2&#x27;, &#x27;CZ&#x27;)], &#x27;PRO&#x27;: [(&#x27;N&#x27;, &#x27;CA&#x27;), (&#x27;CA&#x27;, &#x27;C&#x27;), (&#x27;C&#x27;, &#x27;O&#x27;), (&#x27;CA&#x27;, &#x27;CB&#x27;), (&#x27;CB&#x27;, &#x27;CG&#x27;), (&#x27;CG&#x27;, &#x27;CD&#x27;), (&#x27;N&#x27;, &#x27;CD&#x27;)], &#x27;SER&#x27;: [(&#x27;N&#x27;, &#x27;CA&#x27;), (&#x27;CA&#x27;, &#x27;C&#x27;), (&#x27;C&#x27;, &#x27;O&#x27;), (&#x27;CA&#x27;, &#x27;CB&#x27;), (&#x27;CB&#x27;, &#x27;OG&#x27;)], &#x27;THR&#x27;: [(&#x27;N&#x27;, &#x27;CA&#x27;), (&#x27;CA&#x27;, &#x27;C&#x27;), (&#x27;C&#x27;, &#x27;O&#x27;), (&#x27;CA&#x27;, &#x27;CB&#x27;), (&#x27;CB&#x27;, &#x27;OG1&#x27;), (&#x27;CB&#x27;, &#x27;CG2&#x27;)], &#x27;TRP&#x27;: [(&#x27;N&#x27;, &#x27;CA&#x27;), (&#x27;CA&#x27;, &#x27;C&#x27;), (&#x27;C&#x27;, &#x27;O&#x27;), (&#x27;CA&#x27;, &#x27;CB&#x27;), (&#x27;CB&#x27;, &#x27;CG&#x27;), (&#x27;CG&#x27;, &#x27;CD1&#x27;), (&#x27;CG&#x27;, &#x27;CD2&#x27;), (&#x27;CD1&#x27;, &#x27;NE1&#x27;), (&#x27;CD2&#x27;, &#x27;CE2&#x27;), (&#x27;CD2&#x27;, &#x27;CE3&#x27;), (&#x27;NE1&#x27;, &#x27;CE2&#x27;), (&#x27;CE2&#x27;, &#x27;CZ2&#x27;), (&#x27;CE3&#x27;, &#x27;CZ3&#x27;), (&#x27;CZ2&#x27;, &#x27;CH2&#x27;), (&#x27;CZ3&#x27;, &#x27;CH2&#x27;)], &#x27;TYR&#x27;: [(&#x27;N&#x27;, &#x27;CA&#x27;), (&#x27;CA&#x27;, &#x27;C&#x27;), (&#x27;C&#x27;, &#x27;O&#x27;), (&#x27;CA&#x27;, &#x27;CB&#x27;), (&#x27;CB&#x27;, &#x27;CG&#x27;), (&#x27;CG&#x27;, &#x27;CD1&#x27;), (&#x27;CG&#x27;, &#x27;CD2&#x27;), (&#x27;CD1&#x27;, &#x27;CE1&#x27;), (&#x27;CD2&#x27;, &#x27;CE2&#x27;), (&#x27;CE1&#x27;, &#x27;CZ&#x27;), (&#x27;CE2&#x27;, &#x27;CZ&#x27;), (&#x27;CZ&#x27;, &#x27;OH&#x27;)], &#x27;VAL&#x27;: [(&#x27;N&#x27;, &#x27;CA&#x27;), (&#x27;CA&#x27;, &#x27;C&#x27;), (&#x27;C&#x27;, &#x27;O&#x27;), (&#x27;CA&#x27;, &#x27;CB&#x27;), (&#x27;CB&#x27;, &#x27;CG1&#x27;), (&#x27;CB&#x27;, &#x27;CG2&#x27;)]}"}, {"fullname": "protkit.properties.bond_lengths.BondLengths.atom_distance", "modulename": "protkit.properties.bond_lengths", "qualname": "BondLengths.atom_distance", "kind": "function", "doc": "<p>Calculates the Euclidean distance between two atoms.</p>\n\n<p>Args:\n    atom1 (Atom): The first atom.\n    atom2 (Atom): The second atom.</p>\n\n<p>Returns:\n    float: The distance between the two atoms.</p>\n\n<p>Raises:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">atom1</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">atom</span><span class=\"o\">.</span><span class=\"n\">Atom</span>,</span><span class=\"param\">\t<span class=\"n\">atom2</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">atom</span><span class=\"o\">.</span><span class=\"n\">Atom</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.bond_lengths.BondLengths.bond_lengths_of_residue", "modulename": "protkit.properties.bond_lengths", "qualname": "BondLengths.bond_lengths_of_residue", "kind": "function", "doc": "<p>Returns the bond lengths of the residue.</p>\n\n<p>Args:\n    residue (Residue): The residue for which to return the bond lengths.\n    assign_attribute (bool): Whether to assign the bond lengths to the residue.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    Dict[Tuple[str, str], float]: A dictionary containing the bond lengths of the residue.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">residue</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">residue</span><span class=\"o\">.</span><span class=\"n\">Residue</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;bond_lengths&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.bond_lengths.BondLengths.bond_lengths_of_chain", "modulename": "protkit.properties.bond_lengths", "qualname": "BondLengths.bond_lengths_of_chain", "kind": "function", "doc": "<p>Returns the bond lengths of the chain.</p>\n\n<p>Args:\n    chain (Chain): The chain for which to return the bond lengths.\n    assign_attribute (bool): Whether to assign the bond lengths to the chain.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    Dict[str, Dict]: A dictionary containing the bond lengths of the chain.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">chain</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">chain</span><span class=\"o\">.</span><span class=\"n\">Chain</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;bond_lengths&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.bond_lengths.BondLengths.bond_lengths_of_protein", "modulename": "protkit.properties.bond_lengths", "qualname": "BondLengths.bond_lengths_of_protein", "kind": "function", "doc": "<p>Returns the bond lengths of the protein.</p>\n\n<p>Args:\n    protein (Protein): The protein for which to return the bond lengths.\n    assign_attribute (bool): Whether to assign the bond lengths to the protein.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    Dict[str, Dict]: A dictionary containing the bond lengths of the protein.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">protein</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;bond_lengths&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.bond_lengths.BondLengths.peptide_bond_length", "modulename": "protkit.properties.bond_lengths", "qualname": "BondLengths.peptide_bond_length", "kind": "function", "doc": "<p>Returns the peptide bond length between two residues.  Specifically, the bond length\nbetween the C atom of the first residue and the N atom of the second residue.</p>\n\n<p>Args:\n    residue1 (Residue): The first residue.\n    residue2 (Residue): The second residue.</p>\n\n<p>Returns:\n    float: The bond length between the two residues.  If the atoms are not found, None is returned.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">residue1</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">residue</span><span class=\"o\">.</span><span class=\"n\">Residue</span>,</span><span class=\"param\">\t<span class=\"n\">residue2</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">residue</span><span class=\"o\">.</span><span class=\"n\">Residue</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.bond_lengths.BondLengths.peptide_bond_lengths_of_chain", "modulename": "protkit.properties.bond_lengths", "qualname": "BondLengths.peptide_bond_lengths_of_chain", "kind": "function", "doc": "<p>Returns the peptide bond lengths of the chain.</p>\n\n<p>Args:\n    chain (Chain): The chain for which to return the peptide bond lengths.\n    assign_attribute (bool): Whether to assign the peptide bond lengths to the chain.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    dict: A dictionary containing the peptide bond lengths of the chain.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">chain</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">chain</span><span class=\"o\">.</span><span class=\"n\">Chain</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;peptide_bond_lengths&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.bond_lengths.BondLengths.peptide_bond_lengths_of_protein", "modulename": "protkit.properties.bond_lengths", "qualname": "BondLengths.peptide_bond_lengths_of_protein", "kind": "function", "doc": "<p>Returns the peptide bond lengths of the protein.</p>\n\n<p>Args:\n    protein (Protein): The protein for which to return the peptide bond lengths.\n    assign_attribute (bool): Whether to assign the peptide bond lengths to the protein.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    dict: A dictionary containing the peptide bond lengths of the protein.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">protein</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;peptide_bond_lengths&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.bounds", "modulename": "protkit.properties.bounds", "kind": "module", "doc": "<p>Implements class <code>Bounds</code> to calculate the bounds and center of a residue, chain or protein.</p>\n\n<p>Bounds are defined as the minimum and maximum x, y and z coordinates of the atoms in a residue, chain or protein.\nCenter is defined as the center of the bounds.</p>\n"}, {"fullname": "protkit.properties.bounds.Bounds", "modulename": "protkit.properties.bounds", "qualname": "Bounds", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "protkit.properties.bounds.Bounds.bounds_of_residue", "modulename": "protkit.properties.bounds", "qualname": "Bounds.bounds_of_residue", "kind": "function", "doc": "<p>Returns the bounds of a residue.</p>\n\n<p>Args:\n    residue (Residue): The residue.\n    assign_attribute (bool): Whether to assign the bounds of the residue as an attribute.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    Tuple[float, float, float, float, float, float]: The bounds of the residue.</p>\n\n<p>Raises:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">residue</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">residue</span><span class=\"o\">.</span><span class=\"n\">Residue</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;bounds&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.bounds.Bounds.center_of_residue", "modulename": "protkit.properties.bounds", "qualname": "Bounds.center_of_residue", "kind": "function", "doc": "<p>Returns the center of a residue.</p>\n\n<p>Args:\n    residue (Residue): The residue.\n    assign_attribute (bool): Whether to assign the center of the residue as an attribute.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    Tuple[float, float, float]: The center of the residue.</p>\n\n<p>Raises:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">residue</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">residue</span><span class=\"o\">.</span><span class=\"n\">Residue</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;center&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.bounds.Bounds.bounds_of_chain", "modulename": "protkit.properties.bounds", "qualname": "Bounds.bounds_of_chain", "kind": "function", "doc": "<p>Returns the bounds of a chain.</p>\n\n<p>Args:\n    chain (Chain): The chain.</p>\n\n<p>Returns:\n    Tuple[float, float, float, float, float, float]: The bounds of the chain.</p>\n\n<p>Raises:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">chain</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">chain</span><span class=\"o\">.</span><span class=\"n\">Chain</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;bounds&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.bounds.Bounds.center_of_chain", "modulename": "protkit.properties.bounds", "qualname": "Bounds.center_of_chain", "kind": "function", "doc": "<p>Returns the center of a chain.</p>\n\n<p>Args:\n    chain (Chain): The chain.\n    assign_attribute (bool): Whether to assign the center of the chain as an attribute.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    Tuple[float, float, float]: The center of the chain.1</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">chain</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">chain</span><span class=\"o\">.</span><span class=\"n\">Chain</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;center&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.bounds.Bounds.bounds_of_protein", "modulename": "protkit.properties.bounds", "qualname": "Bounds.bounds_of_protein", "kind": "function", "doc": "<p>Returns the bounds of a protein.</p>\n\n<p>Args:\n    protein (Protein): The protein.</p>\n\n<p>Returns:\n    Tuple[float, float, float, float, float, float]: The bounds of the protein.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">protein</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;bounds&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.bounds.Bounds.center_of_protein", "modulename": "protkit.properties.bounds", "qualname": "Bounds.center_of_protein", "kind": "function", "doc": "<p>Returns the center of a protein.</p>\n\n<p>Args:\n    protein (Protein): The protein.\n    assign_attribute (bool): Whether to assign the center of the protein as an attribute.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    Tuple[float, float, float]: The center of the protein.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">protein</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;center&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.charge", "modulename": "protkit.properties.charge", "kind": "module", "doc": "<p>Implements class <code>Charge</code> to calculate the charge of a residue,\nchain, protein or sequence.</p>\n\n<p>Charge values related to residues are defined at:\n<a href=\"https://www.imgt.org/IMGTeducation/Aide-memoire/_UK/aminoacids/IMGTclasses.html#charge\">https://www.imgt.org/IMGTeducation/Aide-memoire/_UK/aminoacids/IMGTclasses.html#charge</a></p>\n"}, {"fullname": "protkit.properties.charge.Charge", "modulename": "protkit.properties.charge", "qualname": "Charge", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "protkit.properties.charge.Charge.NEUTRAL", "modulename": "protkit.properties.charge", "qualname": "Charge.NEUTRAL", "kind": "variable", "doc": "<p></p>\n", "default_value": "0"}, {"fullname": "protkit.properties.charge.Charge.POSITIVE", "modulename": "protkit.properties.charge", "qualname": "Charge.POSITIVE", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, {"fullname": "protkit.properties.charge.Charge.NEGATIVE", "modulename": "protkit.properties.charge", "qualname": "Charge.NEGATIVE", "kind": "variable", "doc": "<p></p>\n", "default_value": "-1"}, {"fullname": "protkit.properties.charge.Charge.RESIDUE_CHARGE", "modulename": "protkit.properties.charge", "qualname": "Charge.RESIDUE_CHARGE", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;ALA&#x27;: 0, &#x27;ARG&#x27;: 1, &#x27;ASN&#x27;: 0, &#x27;ASP&#x27;: -1, &#x27;CYS&#x27;: 0, &#x27;GLN&#x27;: 0, &#x27;GLU&#x27;: -1, &#x27;GLY&#x27;: 0, &#x27;HIS&#x27;: 1, &#x27;ILE&#x27;: 0, &#x27;LEU&#x27;: 0, &#x27;LYS&#x27;: 1, &#x27;MET&#x27;: 0, &#x27;PHE&#x27;: 0, &#x27;PRO&#x27;: 0, &#x27;SER&#x27;: 0, &#x27;THR&#x27;: 0, &#x27;TRP&#x27;: 0, &#x27;TYR&#x27;: 0, &#x27;VAL&#x27;: 0, &#x27;A&#x27;: 0, &#x27;R&#x27;: 1, &#x27;N&#x27;: 0, &#x27;D&#x27;: -1, &#x27;C&#x27;: 0, &#x27;Q&#x27;: 0, &#x27;E&#x27;: -1, &#x27;G&#x27;: 0, &#x27;H&#x27;: 1, &#x27;I&#x27;: 0, &#x27;L&#x27;: 0, &#x27;K&#x27;: 1, &#x27;M&#x27;: 0, &#x27;F&#x27;: 0, &#x27;P&#x27;: 0, &#x27;S&#x27;: 0, &#x27;T&#x27;: 0, &#x27;W&#x27;: 0, &#x27;Y&#x27;: 0}"}, {"fullname": "protkit.properties.charge.Charge.charge_of_residue", "modulename": "protkit.properties.charge", "qualname": "Charge.charge_of_residue", "kind": "function", "doc": "<p>Returns the charge of a residue.</p>\n\n<p>Args:\n    residue (Residue): The residue for which to determine the charge.\n    assign_attribute (bool): Whether to assign the charge to the residue.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    int: The charge of the residue.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">residue</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">residue</span><span class=\"o\">.</span><span class=\"n\">Residue</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;charge&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.charge.Charge.charge_of_chain", "modulename": "protkit.properties.charge", "qualname": "Charge.charge_of_chain", "kind": "function", "doc": "<p>Returns the charge of a chain.</p>\n\n<p>Args:\n    chain (Chain): The chain for which to determine the charge.\n    assign_attribute (bool): Whether to assign the charge to the chain.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    int: The charge of the chain.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">chain</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">chain</span><span class=\"o\">.</span><span class=\"n\">Chain</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;charge&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.charge.Charge.charge_of_protein", "modulename": "protkit.properties.charge", "qualname": "Charge.charge_of_protein", "kind": "function", "doc": "<p>Returns the charge of a protein.</p>\n\n<p>Args:\n    protein (Protein): The protein for which to determine the charge.\n    assign_attribute (bool): Whether to assign the charge to the protein.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    int: The charge of the protein.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">protein</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;charge&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.charge.Charge.charge_of_sequence", "modulename": "protkit.properties.charge", "qualname": "Charge.charge_of_sequence", "kind": "function", "doc": "<p>Returns the charge of a sequence.</p>\n\n<p>Args:\n    sequence (Sequence): The sequence for which to determine the charge.\n    assign_attribute (bool): Whether to assign the charge to the sequence.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    int: The charge of the sequence.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">sequence</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">seq</span><span class=\"o\">.</span><span class=\"n\">sequence</span><span class=\"o\">.</span><span class=\"n\">Sequence</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;charge&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.chemical_class", "modulename": "protkit.properties.chemical_class", "kind": "module", "doc": "<p>Implements class <code>ChemicalClass</code> to represent the chemical class of a residue.</p>\n\n<p>IMGT defines the following chemical classes for amino acids:\n    1. Aliphatic (A, G, I, L, P, V)\n    2. Aromatic (F, W, Y)\n    3. Sulfur (C, M)\n    4. Hydroxyl (S, T)\n    5. Basic (R, H, K)\n    6. Acidic (D, E)\n    7. Amide (N, Q)</p>\n\n<p>See: <a href=\"https://www.imgt.org/IMGTeducation/Aide-memoire/_UK/aminoacids/IMGTclasses.html\">https://www.imgt.org/IMGTeducation/Aide-memoire/_UK/aminoacids/IMGTclasses.html</a></p>\n"}, {"fullname": "protkit.properties.chemical_class.ChemicalClass", "modulename": "protkit.properties.chemical_class", "qualname": "ChemicalClass", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "protkit.properties.chemical_class.ChemicalClass.UNDEFINED", "modulename": "protkit.properties.chemical_class", "qualname": "ChemicalClass.UNDEFINED", "kind": "variable", "doc": "<p></p>\n", "default_value": "0"}, {"fullname": "protkit.properties.chemical_class.ChemicalClass.ALIPHATIC", "modulename": "protkit.properties.chemical_class", "qualname": "ChemicalClass.ALIPHATIC", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, {"fullname": "protkit.properties.chemical_class.ChemicalClass.AROMATIC", "modulename": "protkit.properties.chemical_class", "qualname": "ChemicalClass.AROMATIC", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, {"fullname": "protkit.properties.chemical_class.ChemicalClass.SULFUR", "modulename": "protkit.properties.chemical_class", "qualname": "ChemicalClass.SULFUR", "kind": "variable", "doc": "<p></p>\n", "default_value": "3"}, {"fullname": "protkit.properties.chemical_class.ChemicalClass.HYDROXYL", "modulename": "protkit.properties.chemical_class", "qualname": "ChemicalClass.HYDROXYL", "kind": "variable", "doc": "<p></p>\n", "default_value": "4"}, {"fullname": "protkit.properties.chemical_class.ChemicalClass.BASIC", "modulename": "protkit.properties.chemical_class", "qualname": "ChemicalClass.BASIC", "kind": "variable", "doc": "<p></p>\n", "default_value": "5"}, {"fullname": "protkit.properties.chemical_class.ChemicalClass.ACIDIC", "modulename": "protkit.properties.chemical_class", "qualname": "ChemicalClass.ACIDIC", "kind": "variable", "doc": "<p></p>\n", "default_value": "6"}, {"fullname": "protkit.properties.chemical_class.ChemicalClass.AMIDE", "modulename": "protkit.properties.chemical_class", "qualname": "ChemicalClass.AMIDE", "kind": "variable", "doc": "<p></p>\n", "default_value": "7"}, {"fullname": "protkit.properties.chemical_class.ChemicalClass.CHEMICAL_CLASS_STRING", "modulename": "protkit.properties.chemical_class", "qualname": "ChemicalClass.CHEMICAL_CLASS_STRING", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;Undefined&#x27;, &#x27;Aliphatic&#x27;, &#x27;Aromatic&#x27;, &#x27;Sulfur&#x27;, &#x27;Hydroxyl&#x27;, &#x27;Basic&#x27;, &#x27;Acidic&#x27;, &#x27;Amide&#x27;]"}, {"fullname": "protkit.properties.chemical_class.ChemicalClass.CHEMICAL_CLASS", "modulename": "protkit.properties.chemical_class", "qualname": "ChemicalClass.CHEMICAL_CLASS", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;ALA&#x27;: 1, &#x27;ARG&#x27;: 5, &#x27;ASN&#x27;: 7, &#x27;ASP&#x27;: 6, &#x27;CYS&#x27;: 3, &#x27;GLN&#x27;: 7, &#x27;GLU&#x27;: 6, &#x27;GLY&#x27;: 1, &#x27;HIS&#x27;: 5, &#x27;ILE&#x27;: 1, &#x27;LEU&#x27;: 1, &#x27;LYS&#x27;: 5, &#x27;MET&#x27;: 3, &#x27;PHE&#x27;: 2, &#x27;PRO&#x27;: 1, &#x27;SER&#x27;: 4, &#x27;THR&#x27;: 4, &#x27;TRP&#x27;: 2, &#x27;TYR&#x27;: 2, &#x27;VAL&#x27;: 1, &#x27;A&#x27;: 1, &#x27;R&#x27;: 5, &#x27;N&#x27;: 7, &#x27;D&#x27;: 6, &#x27;C&#x27;: 3, &#x27;Q&#x27;: 7, &#x27;E&#x27;: 6, &#x27;G&#x27;: 1, &#x27;H&#x27;: 5, &#x27;I&#x27;: 1, &#x27;L&#x27;: 1, &#x27;K&#x27;: 5, &#x27;M&#x27;: 3, &#x27;F&#x27;: 2, &#x27;P&#x27;: 1, &#x27;S&#x27;: 4, &#x27;T&#x27;: 4, &#x27;W&#x27;: 2, &#x27;Y&#x27;: 2, &#x27;V&#x27;: 1}"}, {"fullname": "protkit.properties.chemical_class.ChemicalClass.chemical_class_of_residue", "modulename": "protkit.properties.chemical_class", "qualname": "ChemicalClass.chemical_class_of_residue", "kind": "function", "doc": "<p>Returns the chemical class of the residue.</p>\n\n<p>Args:\n    residue (Residue): The residue for which to determine the chemical class.\n    assign_attribute (bool): Whether to assign the chemical class to the residue.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    int: The chemical class of the residue.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">residue</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">residue</span><span class=\"o\">.</span><span class=\"n\">Residue</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;chemical_class&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.chemical_class.ChemicalClass.chemical_classes_of_chain", "modulename": "protkit.properties.chemical_class", "qualname": "ChemicalClass.chemical_classes_of_chain", "kind": "function", "doc": "<p>Returns the chemical classes of the residues in the chain.</p>\n\n<p>Args:\n    chain (Chain): The chain for which to determine the chemical classes.\n    assign_attribute (bool): Whether to assign the chemical classes to the chain.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    List[int]: The chemical classes of the residues in the chain.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">chain</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">chain</span><span class=\"o\">.</span><span class=\"n\">Chain</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;chemical_class&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.chemical_class.ChemicalClass.chemical_classes_of_protein", "modulename": "protkit.properties.chemical_class", "qualname": "ChemicalClass.chemical_classes_of_protein", "kind": "function", "doc": "<p>Returns the chemical classes of the residues in the protein.</p>\n\n<p>Args:\n    protein (Protein): The protein for which to determine the chemical classes.\n    assign_attribute (bool): Whether to assign the chemical classes to the protein.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    List[List[int]]: The chemical classes of the residues in the protein.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">protein</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;chemical_class&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.circular_variance", "modulename": "protkit.properties.circular_variance", "kind": "module", "doc": "<p>Implements class <code>CircularVariance</code> to calculate the circular variance of a protein.</p>\n\n<p>Circular variance is a measure of uniformity of a set of points on a sphere. It is\ncalculated as 1 - |sum(unit_vectors)| / n, where n is the number of points and\nunit_vectors are the vectors from the center to the points.</p>\n\n<p>The circular variance of a protein can be calculated for each atom or residue.\nFor atoms, the circular variance is calculated using the coordinates of the atom.\nFor residues, the circular variance is calculated using the coordinates of the alpha carbon\natom of the residue.</p>\n"}, {"fullname": "protkit.properties.circular_variance.CircularVariance", "modulename": "protkit.properties.circular_variance", "qualname": "CircularVariance", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "protkit.properties.circular_variance.CircularVariance.circular_variance", "modulename": "protkit.properties.circular_variance", "qualname": "CircularVariance.circular_variance", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">coordinates</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]]</span>, </span><span class=\"param\"><span class=\"n\">radius</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">5.0</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.circular_variance.CircularVariance.circular_variance_by_atom", "modulename": "protkit.properties.circular_variance", "qualname": "CircularVariance.circular_variance_by_atom", "kind": "function", "doc": "<p>Calculate the circular variance of a protein for each atom.</p>\n\n<p>Args:\n    protein (Protein): The protein for which to calculate the circular variance.\n    radius (float): The radius to use for the calculation.\n    assign_attribute (bool): Whether to assign the circular variance to the atoms.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    List[float]: The circular variance of each atom in the protein.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">protein</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span>,</span><span class=\"param\">\t<span class=\"n\">radius</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">5.0</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;cv_atom&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.circular_variance.CircularVariance.circular_variance_by_residue", "modulename": "protkit.properties.circular_variance", "qualname": "CircularVariance.circular_variance_by_residue", "kind": "function", "doc": "<p>Calculate the circular variance of a protein for each residue.</p>\n\n<p>Args:\n    protein (Protein): The protein for which to calculate the circular variance.\n    radius (float): The radius to use for the calculation.\n    assign_attribute (bool): Whether to assign the circular variance to the residues.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    List[float]: The circular variance of each residue in the protein.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">protein</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span>,</span><span class=\"param\">\t<span class=\"n\">radius</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">5.0</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;cv_residue&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.dihedral_angles", "modulename": "protkit.properties.dihedral_angles", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "protkit.properties.dihedral_angles.DihedralAngles", "modulename": "protkit.properties.dihedral_angles", "qualname": "DihedralAngles", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "protkit.properties.dihedral_angles.DihedralAngles.DIHEDRAL_ANGLES", "modulename": "protkit.properties.dihedral_angles", "qualname": "DihedralAngles.DIHEDRAL_ANGLES", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;PHI&#x27;: (&#x27;C&#x27;, &#x27;N&#x27;, &#x27;CA&#x27;, &#x27;C&#x27;), &#x27;PSI&#x27;: (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;C&#x27;, &#x27;N&#x27;), &#x27;OMEGA&#x27;: (&#x27;CA&#x27;, &#x27;C&#x27;, &#x27;N&#x27;, &#x27;CA&#x27;), &#x27;ALA&#x27;: {}, &#x27;ARG&#x27;: {&#x27;CHI1&#x27;: (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;CG&#x27;), &#x27;CHI2&#x27;: (&#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;CG&#x27;, &#x27;CD&#x27;), &#x27;CHI3&#x27;: (&#x27;CB&#x27;, &#x27;CG&#x27;, &#x27;CD&#x27;, &#x27;NE&#x27;), &#x27;CHI4&#x27;: (&#x27;CG&#x27;, &#x27;CD&#x27;, &#x27;NE&#x27;, &#x27;CZ&#x27;), &#x27;CHI5&#x27;: (&#x27;CD&#x27;, &#x27;NE&#x27;, &#x27;CZ&#x27;, &#x27;NH1&#x27;)}, &#x27;ASN&#x27;: {&#x27;CHI1&#x27;: (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;CG&#x27;), &#x27;CHI2&#x27;: (&#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;CG&#x27;, &#x27;OD1&#x27;)}, &#x27;ASP&#x27;: {&#x27;CHI1&#x27;: (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;CG&#x27;), &#x27;CHI2&#x27;: (&#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;CG&#x27;, &#x27;OD1&#x27;)}, &#x27;CYS&#x27;: {&#x27;CHI1&#x27;: (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;SG&#x27;)}, &#x27;GLU&#x27;: {&#x27;CHI1&#x27;: (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;CG&#x27;), &#x27;CHI2&#x27;: (&#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;CG&#x27;, &#x27;CD&#x27;), &#x27;CHI3&#x27;: (&#x27;CB&#x27;, &#x27;CG&#x27;, &#x27;CD&#x27;, &#x27;OE1&#x27;)}, &#x27;GLN&#x27;: {&#x27;CHI1&#x27;: (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;CG&#x27;), &#x27;CHI2&#x27;: (&#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;CG&#x27;, &#x27;CD&#x27;), &#x27;CHI3&#x27;: (&#x27;CB&#x27;, &#x27;CG&#x27;, &#x27;CD&#x27;, &#x27;OE1&#x27;)}, &#x27;GLY&#x27;: {}, &#x27;HIS&#x27;: {&#x27;CHI1&#x27;: (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;CG&#x27;), &#x27;CHI2&#x27;: (&#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;CG&#x27;, &#x27;ND1&#x27;)}, &#x27;ILE&#x27;: {&#x27;CHI1&#x27;: (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;CG1&#x27;), &#x27;CHI2&#x27;: (&#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;CG1&#x27;, &#x27;CD1&#x27;)}, &#x27;LEU&#x27;: {&#x27;CHI1&#x27;: (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;CG&#x27;), &#x27;CHI2&#x27;: (&#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;CG&#x27;, &#x27;CD1&#x27;)}, &#x27;LYS&#x27;: {&#x27;CHI1&#x27;: (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;CG&#x27;), &#x27;CHI2&#x27;: (&#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;CG&#x27;, &#x27;CD&#x27;), &#x27;CHI3&#x27;: (&#x27;CB&#x27;, &#x27;CG&#x27;, &#x27;CD&#x27;, &#x27;CE&#x27;), &#x27;CHI4&#x27;: (&#x27;CG&#x27;, &#x27;CD&#x27;, &#x27;CE&#x27;, &#x27;NZ&#x27;)}, &#x27;MET&#x27;: {&#x27;CHI1&#x27;: (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;CG&#x27;), &#x27;CHI2&#x27;: (&#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;CG&#x27;, &#x27;SD&#x27;), &#x27;CHI3&#x27;: (&#x27;CB&#x27;, &#x27;CG&#x27;, &#x27;SD&#x27;, &#x27;CE&#x27;)}, &#x27;PHE&#x27;: {&#x27;CHI1&#x27;: (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;CG&#x27;), &#x27;CHI2&#x27;: (&#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;CG&#x27;, &#x27;CD1&#x27;)}, &#x27;PRO&#x27;: {&#x27;CHI1&#x27;: (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;CG&#x27;), &#x27;CHI2&#x27;: (&#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;CG&#x27;, &#x27;CD&#x27;)}, &#x27;SER&#x27;: {&#x27;CHI1&#x27;: (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;OG&#x27;)}, &#x27;THR&#x27;: {&#x27;CHI1&#x27;: (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;OG1&#x27;)}, &#x27;TRP&#x27;: {&#x27;CHI1&#x27;: (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;CG&#x27;), &#x27;CHI2&#x27;: (&#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;CG&#x27;, &#x27;CD1&#x27;)}, &#x27;TYR&#x27;: {&#x27;CHI1&#x27;: (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;CG&#x27;), &#x27;CHI2&#x27;: (&#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;CG&#x27;, &#x27;CD1&#x27;)}, &#x27;VAL&#x27;: {&#x27;CHI1&#x27;: (&#x27;N&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;CG1&#x27;)}}"}, {"fullname": "protkit.properties.dihedral_angles.DihedralAngles.dihedral_angle", "modulename": "protkit.properties.dihedral_angles", "qualname": "DihedralAngles.dihedral_angle", "kind": "function", "doc": "<p>Calculates the dihedral angle between four atoms.</p>\n\n<p>Args:\n    a1 (Atom): The first atom.\n    a2 (Atom): The second atom.\n    a3 (Atom): The third atom.\n    a4 (Atom): The fourth atom.</p>\n\n<p>Returns:\n    float: The dihedral angle between the four atoms.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a1</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">atom</span><span class=\"o\">.</span><span class=\"n\">Atom</span>,</span><span class=\"param\">\t<span class=\"n\">a2</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">atom</span><span class=\"o\">.</span><span class=\"n\">Atom</span>,</span><span class=\"param\">\t<span class=\"n\">a3</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">atom</span><span class=\"o\">.</span><span class=\"n\">Atom</span>,</span><span class=\"param\">\t<span class=\"n\">a4</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">atom</span><span class=\"o\">.</span><span class=\"n\">Atom</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.dihedral_angles.DihedralAngles.dihedral_angles_of_residue", "modulename": "protkit.properties.dihedral_angles", "qualname": "DihedralAngles.dihedral_angles_of_residue", "kind": "function", "doc": "<p>Returns the dihedral angles of a residue.</p>\n\n<p>Args:\n    residue (Residue): The residue object\n    previous_residue (Residue): The previous residue object\n    assign_attribute (bool): Whether to assign the dihedral angles as attributes to the residue object\n    key (str): The key to use when assigning the dihedral angles as attributes to the residue object</p>\n\n<p>Returns:\n    dict: A dictionary containing the dihedral angles of the residue side chain. If the previous residue\n        is defined, the phi, psi and omega angles are also calculated.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">residue</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">residue</span><span class=\"o\">.</span><span class=\"n\">Residue</span>,</span><span class=\"param\">\t<span class=\"n\">previous_residue</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">residue</span><span class=\"o\">.</span><span class=\"n\">Residue</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;dihedral_angles&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.dihedral_angles.DihedralAngles.dihedral_angles_of_chain", "modulename": "protkit.properties.dihedral_angles", "qualname": "DihedralAngles.dihedral_angles_of_chain", "kind": "function", "doc": "<p>Returns the dihedral angles of a chain.</p>\n\n<p>Args:\n    chain (Chain): The chain object\n    assign_attribute (bool): Whether to assign the dihedral angles as attributes to the chain object\n    key (str): The key to use when assigning the dihedral angles as attributes to the chain object</p>\n\n<p>Returns:\n    dict: A dictionary containing the dihedral angles of the chain</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">chain</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">chain</span><span class=\"o\">.</span><span class=\"n\">Chain</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;dihedral_angles&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.dihedral_angles.DihedralAngles.dihedral_angles_of_protein", "modulename": "protkit.properties.dihedral_angles", "qualname": "DihedralAngles.dihedral_angles_of_protein", "kind": "function", "doc": "<p>Returns the dihedral angles of a protein.</p>\n\n<p>Args:\n    protein (Protein): The protein object\n    assign_attribute (bool): Whether to assign the dihedral angles as attributes to the protein object\n    key (str): The key to use when assigning the dihedral angles as attributes to the protein object</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">protein</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;dihedral_angles&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.donors_acceptors", "modulename": "protkit.properties.donors_acceptors", "kind": "module", "doc": "<p>Implements class <code>DonorsAcceptors</code> to represent the donors and acceptors of hydrogen bonds.</p>\n"}, {"fullname": "protkit.properties.donors_acceptors.DonorsAcceptors", "modulename": "protkit.properties.donors_acceptors", "qualname": "DonorsAcceptors", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "protkit.properties.donors_acceptors.DonorsAcceptors.DONOR_RESIDUES", "modulename": "protkit.properties.donors_acceptors", "qualname": "DonorsAcceptors.DONOR_RESIDUES", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;ALA&#x27;: False, &#x27;ARG&#x27;: True, &#x27;ASN&#x27;: True, &#x27;ASP&#x27;: False, &#x27;CYS&#x27;: False, &#x27;GLN&#x27;: True, &#x27;GLU&#x27;: False, &#x27;GLY&#x27;: False, &#x27;HIS&#x27;: True, &#x27;ILE&#x27;: False, &#x27;LEU&#x27;: False, &#x27;LYS&#x27;: True, &#x27;MET&#x27;: False, &#x27;PHE&#x27;: False, &#x27;PRO&#x27;: False, &#x27;SER&#x27;: True, &#x27;THR&#x27;: True, &#x27;TRP&#x27;: True, &#x27;TYR&#x27;: True, &#x27;VAL&#x27;: False, &#x27;A&#x27;: False, &#x27;R&#x27;: True, &#x27;N&#x27;: True, &#x27;D&#x27;: False, &#x27;C&#x27;: False, &#x27;Q&#x27;: True, &#x27;E&#x27;: False, &#x27;G&#x27;: False, &#x27;H&#x27;: True, &#x27;I&#x27;: False, &#x27;L&#x27;: False, &#x27;K&#x27;: True, &#x27;M&#x27;: False, &#x27;F&#x27;: False, &#x27;P&#x27;: False, &#x27;S&#x27;: True, &#x27;T&#x27;: True, &#x27;W&#x27;: True, &#x27;Y&#x27;: True, &#x27;V&#x27;: False}"}, {"fullname": "protkit.properties.donors_acceptors.DonorsAcceptors.ACCEPTOR_RESIDUES", "modulename": "protkit.properties.donors_acceptors", "qualname": "DonorsAcceptors.ACCEPTOR_RESIDUES", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;ALA&#x27;: False, &#x27;ARG&#x27;: False, &#x27;ASN&#x27;: True, &#x27;ASP&#x27;: True, &#x27;CYS&#x27;: False, &#x27;GLN&#x27;: True, &#x27;GLU&#x27;: True, &#x27;GLY&#x27;: False, &#x27;HIS&#x27;: True, &#x27;ILE&#x27;: False, &#x27;LEU&#x27;: False, &#x27;LYS&#x27;: False, &#x27;MET&#x27;: False, &#x27;PHE&#x27;: False, &#x27;PRO&#x27;: False, &#x27;SER&#x27;: True, &#x27;THR&#x27;: True, &#x27;TRP&#x27;: False, &#x27;TYR&#x27;: True, &#x27;VAL&#x27;: False, &#x27;A&#x27;: False, &#x27;R&#x27;: False, &#x27;N&#x27;: True, &#x27;D&#x27;: True, &#x27;C&#x27;: False, &#x27;Q&#x27;: True, &#x27;E&#x27;: True, &#x27;G&#x27;: False, &#x27;H&#x27;: True, &#x27;I&#x27;: False, &#x27;L&#x27;: False, &#x27;K&#x27;: False, &#x27;M&#x27;: False, &#x27;F&#x27;: False, &#x27;P&#x27;: False, &#x27;S&#x27;: True, &#x27;T&#x27;: True, &#x27;W&#x27;: False, &#x27;Y&#x27;: True, &#x27;V&#x27;: False}"}, {"fullname": "protkit.properties.donors_acceptors.DonorsAcceptors.DONOR_ATOMS", "modulename": "protkit.properties.donors_acceptors", "qualname": "DonorsAcceptors.DONOR_ATOMS", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;ALA&#x27;: {&#x27;N&#x27;}, &#x27;ARG&#x27;: {&#x27;NE&#x27;, &#x27;NH2&#x27;, &#x27;N&#x27;, &#x27;NH1&#x27;}, &#x27;ASN&#x27;: {&#x27;ND2&#x27;, &#x27;N&#x27;}, &#x27;ASP&#x27;: {&#x27;N&#x27;}, &#x27;CYS&#x27;: {&#x27;N&#x27;}, &#x27;GLU&#x27;: {&#x27;N&#x27;}, &#x27;GLN&#x27;: {&#x27;N&#x27;, &#x27;NE2&#x27;}, &#x27;GLY&#x27;: {&#x27;N&#x27;}, &#x27;HIS&#x27;: {&#x27;ND1&#x27;, &#x27;N&#x27;, &#x27;NE2&#x27;}, &#x27;ILE&#x27;: {&#x27;N&#x27;}, &#x27;LEU&#x27;: {&#x27;N&#x27;}, &#x27;LYS&#x27;: {&#x27;NZ&#x27;, &#x27;N&#x27;}, &#x27;MET&#x27;: {&#x27;N&#x27;}, &#x27;PHE&#x27;: {&#x27;N&#x27;}, &#x27;PRO&#x27;: {}, &#x27;SER&#x27;: {&#x27;N&#x27;, &#x27;OG&#x27;}, &#x27;THR&#x27;: {&#x27;OG1&#x27;, &#x27;N&#x27;}, &#x27;TRP&#x27;: {&#x27;NE1&#x27;, &#x27;N&#x27;}, &#x27;TYR&#x27;: {&#x27;OH&#x27;, &#x27;N&#x27;}, &#x27;VAL&#x27;: {&#x27;N&#x27;}, &#x27;A&#x27;: {&#x27;N&#x27;}, &#x27;R&#x27;: {&#x27;NE&#x27;, &#x27;NH2&#x27;, &#x27;N&#x27;, &#x27;NH1&#x27;}, &#x27;N&#x27;: {&#x27;ND2&#x27;, &#x27;N&#x27;}, &#x27;D&#x27;: {&#x27;N&#x27;}, &#x27;C&#x27;: {&#x27;N&#x27;}, &#x27;Q&#x27;: {&#x27;N&#x27;}, &#x27;E&#x27;: {&#x27;N&#x27;, &#x27;NE2&#x27;}, &#x27;G&#x27;: {&#x27;N&#x27;}, &#x27;H&#x27;: {&#x27;ND1&#x27;, &#x27;N&#x27;, &#x27;NE2&#x27;}, &#x27;I&#x27;: {&#x27;N&#x27;}, &#x27;L&#x27;: {&#x27;N&#x27;}, &#x27;K&#x27;: {&#x27;NZ&#x27;, &#x27;N&#x27;}, &#x27;M&#x27;: {&#x27;N&#x27;}, &#x27;F&#x27;: {&#x27;N&#x27;}, &#x27;P&#x27;: {}, &#x27;S&#x27;: {&#x27;N&#x27;, &#x27;OG&#x27;}, &#x27;T&#x27;: {&#x27;OG1&#x27;, &#x27;N&#x27;}, &#x27;W&#x27;: {&#x27;NE1&#x27;, &#x27;N&#x27;}, &#x27;Y&#x27;: {&#x27;OH&#x27;, &#x27;N&#x27;}, &#x27;V&#x27;: {&#x27;N&#x27;}}"}, {"fullname": "protkit.properties.donors_acceptors.DonorsAcceptors.ACCEPTOR_ATOMS", "modulename": "protkit.properties.donors_acceptors", "qualname": "DonorsAcceptors.ACCEPTOR_ATOMS", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;ALA&#x27;: {&#x27;OXT&#x27;, &#x27;O&#x27;}, &#x27;ARG&#x27;: {&#x27;OXT&#x27;, &#x27;O&#x27;}, &#x27;ASN&#x27;: {&#x27;OXT&#x27;, &#x27;OD1&#x27;, &#x27;O&#x27;}, &#x27;ASP&#x27;: {&#x27;OXT&#x27;, &#x27;OD1&#x27;, &#x27;OD2&#x27;, &#x27;O&#x27;}, &#x27;CYS&#x27;: {&#x27;OXT&#x27;, &#x27;O&#x27;}, &#x27;GLU&#x27;: {&#x27;OXT&#x27;, &#x27;OE1&#x27;, &#x27;O&#x27;, &#x27;OE2&#x27;}, &#x27;GLN&#x27;: {&#x27;OXT&#x27;, &#x27;OE1&#x27;, &#x27;O&#x27;}, &#x27;GLY&#x27;: {&#x27;OXT&#x27;, &#x27;O&#x27;}, &#x27;HIS&#x27;: {&#x27;OXT&#x27;, &#x27;ND1&#x27;, &#x27;O&#x27;, &#x27;NE2&#x27;}, &#x27;ILE&#x27;: {&#x27;OXT&#x27;, &#x27;O&#x27;}, &#x27;LEU&#x27;: {&#x27;OXT&#x27;, &#x27;O&#x27;}, &#x27;LYS&#x27;: {&#x27;OXT&#x27;, &#x27;O&#x27;}, &#x27;MET&#x27;: {&#x27;OXT&#x27;, &#x27;O&#x27;}, &#x27;PHE&#x27;: {&#x27;OXT&#x27;, &#x27;O&#x27;}, &#x27;PRO&#x27;: {&#x27;OXT&#x27;, &#x27;O&#x27;}, &#x27;SER&#x27;: {&#x27;OXT&#x27;, &#x27;OG&#x27;, &#x27;O&#x27;}, &#x27;THR&#x27;: {&#x27;OXT&#x27;, &#x27;OG1&#x27;, &#x27;O&#x27;}, &#x27;TRP&#x27;: {&#x27;OXT&#x27;, &#x27;O&#x27;}, &#x27;TYR&#x27;: {&#x27;OXT&#x27;, &#x27;OH&#x27;, &#x27;O&#x27;}, &#x27;VAL&#x27;: {&#x27;OXT&#x27;, &#x27;O&#x27;}, &#x27;A&#x27;: {&#x27;OXT&#x27;, &#x27;O&#x27;}, &#x27;R&#x27;: {&#x27;OXT&#x27;, &#x27;O&#x27;}, &#x27;N&#x27;: {&#x27;OXT&#x27;, &#x27;OD1&#x27;, &#x27;O&#x27;}, &#x27;D&#x27;: {&#x27;OXT&#x27;, &#x27;OD1&#x27;, &#x27;OD2&#x27;, &#x27;O&#x27;}, &#x27;C&#x27;: {&#x27;OXT&#x27;, &#x27;O&#x27;}, &#x27;Q&#x27;: {&#x27;OXT&#x27;, &#x27;OE1&#x27;, &#x27;O&#x27;, &#x27;OE2&#x27;}, &#x27;E&#x27;: {&#x27;OXT&#x27;, &#x27;OE1&#x27;, &#x27;O&#x27;}, &#x27;G&#x27;: {&#x27;OXT&#x27;, &#x27;O&#x27;}, &#x27;H&#x27;: {&#x27;OXT&#x27;, &#x27;ND1&#x27;, &#x27;O&#x27;, &#x27;NE2&#x27;}, &#x27;I&#x27;: {&#x27;OXT&#x27;, &#x27;O&#x27;}, &#x27;L&#x27;: {&#x27;OXT&#x27;, &#x27;O&#x27;}, &#x27;K&#x27;: {&#x27;OXT&#x27;, &#x27;O&#x27;}, &#x27;M&#x27;: {&#x27;OXT&#x27;, &#x27;O&#x27;}, &#x27;F&#x27;: {&#x27;OXT&#x27;, &#x27;O&#x27;}, &#x27;P&#x27;: {&#x27;OXT&#x27;, &#x27;O&#x27;}, &#x27;S&#x27;: {&#x27;OXT&#x27;, &#x27;OG&#x27;, &#x27;O&#x27;}, &#x27;T&#x27;: {&#x27;OXT&#x27;, &#x27;OG1&#x27;, &#x27;O&#x27;}, &#x27;W&#x27;: {&#x27;OXT&#x27;, &#x27;O&#x27;}, &#x27;Y&#x27;: {&#x27;OXT&#x27;, &#x27;OH&#x27;, &#x27;O&#x27;}, &#x27;V&#x27;: {&#x27;OXT&#x27;, &#x27;O&#x27;}}"}, {"fullname": "protkit.properties.donors_acceptors.DonorsAcceptors.donor_residue", "modulename": "protkit.properties.donors_acceptors", "qualname": "DonorsAcceptors.donor_residue", "kind": "function", "doc": "<p>Returns whether the residue is a donor of hydrogen bonds.</p>\n\n<p>Args:\n    residue (str): The residue for which to check if it is a donor.\n    assign_attribute (bool): Whether to assign the donor property to the residue.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    bool: True if the residue is a donor, False otherwise.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">residue</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">residue</span><span class=\"o\">.</span><span class=\"n\">Residue</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;is_donor_residue&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.donors_acceptors.DonorsAcceptors.acceptor_residue", "modulename": "protkit.properties.donors_acceptors", "qualname": "DonorsAcceptors.acceptor_residue", "kind": "function", "doc": "<p>Returns whether the residue is an acceptor of hydrogen bonds.</p>\n\n<p>Args:\n    residue (str): The residue for which to check if it is an acceptor.\n    assign_attribute (bool): Whether to assign the acceptor property to the residue.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    bool: True if the residue is an acceptor, False otherwise.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">residue</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">residue</span><span class=\"o\">.</span><span class=\"n\">Residue</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;is_acceptor_residue&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.donors_acceptors.DonorsAcceptors.donor_residues_of_chain", "modulename": "protkit.properties.donors_acceptors", "qualname": "DonorsAcceptors.donor_residues_of_chain", "kind": "function", "doc": "<p>Returns the donor residues of a chain.</p>\n\n<p>Args:\n    chain (Chain): The chain for which to determine the donor residues.\n    assign_attribute (bool): Whether to assign the donor residues to the chain.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    list: A list of donor residues.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">chain</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">chain</span><span class=\"o\">.</span><span class=\"n\">Chain</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;is_donor_residue&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.donors_acceptors.DonorsAcceptors.acceptor_residues_of_chain", "modulename": "protkit.properties.donors_acceptors", "qualname": "DonorsAcceptors.acceptor_residues_of_chain", "kind": "function", "doc": "<p>Returns the acceptor residues of a chain.</p>\n\n<p>Args:\n    chain (Chain): The chain for which to determine the acceptor residues.\n    assign_attribute (bool): Whether to assign the acceptor residues to the chain.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    list: A list of acceptor residues.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">chain</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">chain</span><span class=\"o\">.</span><span class=\"n\">Chain</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;is_acceptor_residue&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.donors_acceptors.DonorsAcceptors.donor_residues_of_protein", "modulename": "protkit.properties.donors_acceptors", "qualname": "DonorsAcceptors.donor_residues_of_protein", "kind": "function", "doc": "<p>Returns the donor residues of a protein.</p>\n\n<p>Args:\n    protein (Protein): The protein for which to determine the donor residues.\n    assign_attribute (bool): Whether to assign the donor residues to the protein.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    list: A list of donor residues.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">protein</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;is_donor_residue&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.donors_acceptors.DonorsAcceptors.acceptor_residues_of_protein", "modulename": "protkit.properties.donors_acceptors", "qualname": "DonorsAcceptors.acceptor_residues_of_protein", "kind": "function", "doc": "<p>Returns the acceptor residues of a protein.</p>\n\n<p>Args:\n    protein (Protein): The protein for which to determine the acceptor residues.\n    assign_attribute (bool): Whether to assign the acceptor residues to the protein.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    list: A list of acceptor residues.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">protein</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;is_acceptor_residue&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.donors_acceptors.DonorsAcceptors.donor_residues_of_sequence", "modulename": "protkit.properties.donors_acceptors", "qualname": "DonorsAcceptors.donor_residues_of_sequence", "kind": "function", "doc": "<p>Returns the donor residues of a sequence.</p>\n\n<p>Args:\n    sequence (Sequence): The sequence for which to determine the donor residues.\n    assign_attribute (bool): Whether to assign the donor residues to the sequence.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    list: A list of donor residues.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">sequence</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">seq</span><span class=\"o\">.</span><span class=\"n\">sequence</span><span class=\"o\">.</span><span class=\"n\">Sequence</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;is_donor_residue&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.donors_acceptors.DonorsAcceptors.acceptor_residues_of_sequence", "modulename": "protkit.properties.donors_acceptors", "qualname": "DonorsAcceptors.acceptor_residues_of_sequence", "kind": "function", "doc": "<p>Returns the acceptor residues of a sequence.</p>\n\n<p>Args:\n    sequence (Sequence): The sequence for which to determine the acceptor residues.\n    assign_attribute (bool): Whether to assign the acceptor residues to the sequence.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    list: A list of acceptor residues.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">sequence</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">seq</span><span class=\"o\">.</span><span class=\"n\">sequence</span><span class=\"o\">.</span><span class=\"n\">Sequence</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;is_acceptor_residue&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.donors_acceptors.DonorsAcceptors.donor_atom", "modulename": "protkit.properties.donors_acceptors", "qualname": "DonorsAcceptors.donor_atom", "kind": "function", "doc": "<p>Returns whether the atom is a donor atom.</p>\n\n<p>Args:\n    atom (Atom): The atom for which to check if it is a donor atom.\n    assign_attribute (bool): Whether to assign the donor property to the atom.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    bool: True if the atom is a donor, False otherwise.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">atom</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">atom</span><span class=\"o\">.</span><span class=\"n\">Atom</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;is_donor_atom&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.donors_acceptors.DonorsAcceptors.acceptor_atom", "modulename": "protkit.properties.donors_acceptors", "qualname": "DonorsAcceptors.acceptor_atom", "kind": "function", "doc": "<p>Returns whether the atom is an acceptor atom.</p>\n\n<p>Args:\n    atom (Atom): The atom for which to check if it is an acceptor atom.\n    assign_attribute (bool): Whether to assign the acceptor property to the atom.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    bool: True if the atom is an acceptor, False otherwise.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">atom</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">atom</span><span class=\"o\">.</span><span class=\"n\">Atom</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;is_acceptor_atom&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.donors_acceptors.DonorsAcceptors.donor_atoms_of_residue", "modulename": "protkit.properties.donors_acceptors", "qualname": "DonorsAcceptors.donor_atoms_of_residue", "kind": "function", "doc": "<p>Returns the donor atoms of a residue.</p>\n\n<p>Args:\n    residue (Residue): The residue for which to determine the donor atoms.\n    assign_attribute (bool): Whether to assign the donor atoms to the residue.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    set: A set of donor atoms.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">residue</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">residue</span><span class=\"o\">.</span><span class=\"n\">Residue</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;is_donor_atom&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.donors_acceptors.DonorsAcceptors.acceptor_atoms_of_residue", "modulename": "protkit.properties.donors_acceptors", "qualname": "DonorsAcceptors.acceptor_atoms_of_residue", "kind": "function", "doc": "<p>Returns the acceptor atoms of a residue.</p>\n\n<p>Args:\n    residue (Residue): The residue for which to determine the acceptor atoms.\n    assign_attribute (bool): Whether to assign the acceptor atoms to the residue.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    set: A set of acceptor atoms.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">residue</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">residue</span><span class=\"o\">.</span><span class=\"n\">Residue</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;is_acceptor_atom&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.donors_acceptors.DonorsAcceptors.donor_atoms_of_chain", "modulename": "protkit.properties.donors_acceptors", "qualname": "DonorsAcceptors.donor_atoms_of_chain", "kind": "function", "doc": "<p>Returns the donor atoms of a chain.</p>\n\n<p>Args:\n    chain (Chain): The chain for which to determine the donor atoms.\n    assign_attribute (bool): Whether to assign the donor atoms to the chain.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    list: A list of donor atoms.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">chain</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">chain</span><span class=\"o\">.</span><span class=\"n\">Chain</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;is_donor_atom&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.donors_acceptors.DonorsAcceptors.acceptor_atoms_of_chain", "modulename": "protkit.properties.donors_acceptors", "qualname": "DonorsAcceptors.acceptor_atoms_of_chain", "kind": "function", "doc": "<p>Returns the acceptor atoms of a chain.</p>\n\n<p>Args:\n    chain (Chain): The chain for which to determine the acceptor atoms.\n    assign_attribute (bool): Whether to assign the acceptor atoms to the chain.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    list: A list of acceptor atoms.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">chain</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">chain</span><span class=\"o\">.</span><span class=\"n\">Chain</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;is_acceptor_atom&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.donors_acceptors.DonorsAcceptors.donor_atoms_of_protein", "modulename": "protkit.properties.donors_acceptors", "qualname": "DonorsAcceptors.donor_atoms_of_protein", "kind": "function", "doc": "<p>Returns the donor atoms of a protein.</p>\n\n<p>Args:\n    protein (Protein): The protein for which to determine the donor atoms.\n    assign_attribute (bool): Whether to assign the donor atoms to the protein.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    list: A list of donor atoms.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">protein</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;is_donor_atom&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.donors_acceptors.DonorsAcceptors.acceptor_atoms_of_protein", "modulename": "protkit.properties.donors_acceptors", "qualname": "DonorsAcceptors.acceptor_atoms_of_protein", "kind": "function", "doc": "<p>Returns the acceptor atoms of a protein.</p>\n\n<p>Args:\n    protein (Protein): The protein for which to determine the acceptor atoms.\n    assign_attribute (bool): Whether to assign the acceptor atoms to the protein.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    list: A list of acceptor atoms.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">protein</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;is_acceptor_atom&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.hydrophobicity", "modulename": "protkit.properties.hydrophobicity", "kind": "module", "doc": "<p>Implements class <code>Hydrophobicity</code> to calculate the hydrophobicity and\nhydrophobicity class of a residue, chain, protein or sequence.</p>\n\n<p>Hydrophobicity is calculated based on the Kyte-Doolittle scale.</p>\n\n<p>For chains, the hydrophobicity is\nthe sum of the hydrophobicity values of the residues in the chain.  For\nproteins, the hydrophobicity is the sum of the hydrophobicity values of\nthe chains in the protein.</p>\n\n<p>Calculated values can be added as attributes to the respective objects.</p>\n\n<p>For more information, see:\n<a href=\"https://en.wikipedia.org/wiki/Hydrophobicity_scales#Kyte%E2%80%93Doolittle_scale\">https://en.wikipedia.org/wiki/Hydrophobicity_scales#Kyte%E2%80%93Doolittle_scale</a></p>\n\n<p>The Kyte-Doolittle scale was defined in:\nKyte, J. and Doolittle, R.F. (1982) A simple method for displaying the\nhydropathic character of a protein. J. Mol. Biol. 157, 105-132.</p>\n\n<p>Also see:\n<a href=\"https://www.imgt.org/IMGTeducation/Aide-memoire/_UK/aminoacids/IMGTclasses.html\">https://www.imgt.org/IMGTeducation/Aide-memoire/_UK/aminoacids/IMGTclasses.html</a></p>\n"}, {"fullname": "protkit.properties.hydrophobicity.Hydrophobicity", "modulename": "protkit.properties.hydrophobicity", "qualname": "Hydrophobicity", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "protkit.properties.hydrophobicity.Hydrophobicity.HYDROPHOBICITY", "modulename": "protkit.properties.hydrophobicity", "qualname": "Hydrophobicity.HYDROPHOBICITY", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;ALA&#x27;: 1.8, &#x27;ARG&#x27;: -4.5, &#x27;ASN&#x27;: -3.5, &#x27;ASP&#x27;: -3.5, &#x27;CYS&#x27;: 2.5, &#x27;GLN&#x27;: -3.5, &#x27;GLU&#x27;: -3.5, &#x27;GLY&#x27;: -0.4, &#x27;HIS&#x27;: -3.2, &#x27;ILE&#x27;: 4.5, &#x27;LEU&#x27;: 3.8, &#x27;LYS&#x27;: -3.9, &#x27;MET&#x27;: 1.9, &#x27;PHE&#x27;: 2.8, &#x27;PRO&#x27;: -1.6, &#x27;SER&#x27;: -0.8, &#x27;THR&#x27;: -0.7, &#x27;TRP&#x27;: -0.9, &#x27;TYR&#x27;: -1.3, &#x27;VAL&#x27;: 4.2, &#x27;A&#x27;: 1.8, &#x27;R&#x27;: -4.5, &#x27;N&#x27;: -3.5, &#x27;D&#x27;: -3.5, &#x27;C&#x27;: 2.5, &#x27;Q&#x27;: -3.5, &#x27;E&#x27;: -3.5, &#x27;G&#x27;: -0.4, &#x27;H&#x27;: -3.2, &#x27;I&#x27;: 4.5, &#x27;L&#x27;: 3.8, &#x27;K&#x27;: -3.9, &#x27;M&#x27;: 1.9, &#x27;F&#x27;: 2.8, &#x27;P&#x27;: -1.6, &#x27;S&#x27;: -0.8, &#x27;T&#x27;: -0.7, &#x27;W&#x27;: -0.9, &#x27;Y&#x27;: -1.3, &#x27;V&#x27;: 4.2}"}, {"fullname": "protkit.properties.hydrophobicity.Hydrophobicity.UNDEFINED", "modulename": "protkit.properties.hydrophobicity", "qualname": "Hydrophobicity.UNDEFINED", "kind": "variable", "doc": "<p></p>\n", "default_value": "0"}, {"fullname": "protkit.properties.hydrophobicity.Hydrophobicity.HYDROPHOBIC", "modulename": "protkit.properties.hydrophobicity", "qualname": "Hydrophobicity.HYDROPHOBIC", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, {"fullname": "protkit.properties.hydrophobicity.Hydrophobicity.NEUTRAL", "modulename": "protkit.properties.hydrophobicity", "qualname": "Hydrophobicity.NEUTRAL", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, {"fullname": "protkit.properties.hydrophobicity.Hydrophobicity.HYDROPHILIC", "modulename": "protkit.properties.hydrophobicity", "qualname": "Hydrophobicity.HYDROPHILIC", "kind": "variable", "doc": "<p></p>\n", "default_value": "3"}, {"fullname": "protkit.properties.hydrophobicity.Hydrophobicity.HYDROPHOBICITY_CLASS_STRING", "modulename": "protkit.properties.hydrophobicity", "qualname": "Hydrophobicity.HYDROPHOBICITY_CLASS_STRING", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;Undefined&#x27;, &#x27;Hydrophobic&#x27;, &#x27;Neutral&#x27;, &#x27;Hydrophilic&#x27;]"}, {"fullname": "protkit.properties.hydrophobicity.Hydrophobicity.HYDROPHOBICITY_CLASS", "modulename": "protkit.properties.hydrophobicity", "qualname": "Hydrophobicity.HYDROPHOBICITY_CLASS", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;ALA&#x27;: 1, &#x27;ARG&#x27;: 3, &#x27;ASN&#x27;: 3, &#x27;ASP&#x27;: 3, &#x27;CYS&#x27;: 1, &#x27;GLN&#x27;: 3, &#x27;GLU&#x27;: 3, &#x27;GLY&#x27;: 2, &#x27;HIS&#x27;: 2, &#x27;ILE&#x27;: 1, &#x27;LEU&#x27;: 1, &#x27;LYS&#x27;: 3, &#x27;MET&#x27;: 1, &#x27;PHE&#x27;: 1, &#x27;PRO&#x27;: 2, &#x27;SER&#x27;: 2, &#x27;THR&#x27;: 2, &#x27;TRP&#x27;: 1, &#x27;TYR&#x27;: 2, &#x27;VAL&#x27;: 1, &#x27;A&#x27;: 1, &#x27;R&#x27;: 3, &#x27;N&#x27;: 3, &#x27;D&#x27;: 3, &#x27;C&#x27;: 1, &#x27;Q&#x27;: 3, &#x27;E&#x27;: 3, &#x27;G&#x27;: 2, &#x27;H&#x27;: 2, &#x27;I&#x27;: 1, &#x27;L&#x27;: 1, &#x27;K&#x27;: 3, &#x27;M&#x27;: 1, &#x27;F&#x27;: 1, &#x27;P&#x27;: 2, &#x27;S&#x27;: 2, &#x27;T&#x27;: 2, &#x27;W&#x27;: 1, &#x27;Y&#x27;: 2, &#x27;V&#x27;: 1}"}, {"fullname": "protkit.properties.hydrophobicity.Hydrophobicity.hydrophobicity_of_residue", "modulename": "protkit.properties.hydrophobicity", "qualname": "Hydrophobicity.hydrophobicity_of_residue", "kind": "function", "doc": "<p>Returns the hydrophobicity value of the residue.</p>\n\n<p>Args:\n    residue (Residue): The residue for which the hydrophobicity value will be returned.\n    assign_attribute (bool): If True, the hydrophobicity value will be added as an attribute to the residue.\n    key (str): The name of the attribute that will be added to the residue.</p>\n\n<p>Returns:\n    float: The hydrophobicity value of the residue.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">residue</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">residue</span><span class=\"o\">.</span><span class=\"n\">Residue</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;hydrophobicity&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.hydrophobicity.Hydrophobicity.hydrophobicity_class_of_residue", "modulename": "protkit.properties.hydrophobicity", "qualname": "Hydrophobicity.hydrophobicity_class_of_residue", "kind": "function", "doc": "<p>Returns the hydrophobicity class of the residue.</p>\n\n<p>Args:\n    residue (Residue): The residue for which the hydrophobicity class will be returned.\n    assign_attribute (bool): If True, the hydrophobicity class will be added as an attribute to the residue.\n    key (str): The name of the attribute that will be added to the residue.</p>\n\n<p>Returns:\n    int: The hydrophobicity class of the residue.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">residue</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">residue</span><span class=\"o\">.</span><span class=\"n\">Residue</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;hydrophobicity_class&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.hydrophobicity.Hydrophobicity.hydrophobicity_of_chain", "modulename": "protkit.properties.hydrophobicity", "qualname": "Hydrophobicity.hydrophobicity_of_chain", "kind": "function", "doc": "<p>Returns the hydrophobicity value of the chain.</p>\n\n<p>Args:\n    chain (Chain): The chain for which the hydrophobicity value will be returned.\n    assign_attribute (bool): If True, the hydrophobicity value will be added as an attribute to the chain.\n    key (str): The name of the attribute that will be added to the chain.</p>\n\n<p>Returns:\n    float: The hydrophobicity value of the chain.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">chain</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">chain</span><span class=\"o\">.</span><span class=\"n\">Chain</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;hydrophobicity&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.hydrophobicity.Hydrophobicity.hydrophobicity_classes_of_chain", "modulename": "protkit.properties.hydrophobicity", "qualname": "Hydrophobicity.hydrophobicity_classes_of_chain", "kind": "function", "doc": "<p>Returns the hydrophobicity class of the chain.</p>\n\n<p>Args:\n    chain (Chain): The chain for which the hydrophobicity class will be returned.\n    assign_attribute (bool): If True, the hydrophobicity class will be added as an attribute to the chain.\n    key (str): The name of the attribute that will be added to the chain.</p>\n\n<p>Returns:\n    list: The hydrophobicity classes of the residues of the chain.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">chain</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">chain</span><span class=\"o\">.</span><span class=\"n\">Chain</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;hydrophobicity_class&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.hydrophobicity.Hydrophobicity.hydrophobicity_of_protein", "modulename": "protkit.properties.hydrophobicity", "qualname": "Hydrophobicity.hydrophobicity_of_protein", "kind": "function", "doc": "<p>Returns the hydrophobicity value of the protein.</p>\n\n<p>Args:\n    protein (Protein): The protein for which the hydrophobicity value will be returned.\n    assign_attribute (bool): If True, the hydrophobicity value will be added as an attribute to the protein.\n    key (str): The name of the attribute that will be added to the protein.</p>\n\n<p>Returns\n    float: The hydrophobicity value of the protein.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">protein</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;hydrophobicity&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.hydrophobicity.Hydrophobicity.hydrophobicity_classes_of_protein", "modulename": "protkit.properties.hydrophobicity", "qualname": "Hydrophobicity.hydrophobicity_classes_of_protein", "kind": "function", "doc": "<p>Returns the hydrophobicity classes of the residues of the protein.</p>\n\n<p>Args:\n    protein (Protein): The protein for which the hydrophobicity class will be returned.\n    assign_attribute (bool): If True, the hydrophobicity class will be added as an attribute to the protein.\n    key (str): The name of the attribute that will be added to the protein.</p>\n\n<p>Returns:\n    list: The hydrophobicity classes of the residues of the protein.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">protein</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;hydrophobicity_class&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.hydrophobicity.Hydrophobicity.hydrophobicity_of_sequence", "modulename": "protkit.properties.hydrophobicity", "qualname": "Hydrophobicity.hydrophobicity_of_sequence", "kind": "function", "doc": "<p>Returns the hydrophobicity value of the sequence.</p>\n\n<p>Args:\n    sequence (Sequence): The sequence for which the hydrophobicity value will be returned.\n    assign_attribute (bool): If True, the hydrophobicity value will be added as an attribute to the sequence.\n    key (str): The name of the attribute that will be added to the sequence.</p>\n\n<p>Returns:\n    float: The hydrophobicity value of the sequence.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">sequence</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">seq</span><span class=\"o\">.</span><span class=\"n\">sequence</span><span class=\"o\">.</span><span class=\"n\">Sequence</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;hydrophobicity&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.hydrophobicity.Hydrophobicity.hydrophobicity_classes_of_sequence", "modulename": "protkit.properties.hydrophobicity", "qualname": "Hydrophobicity.hydrophobicity_classes_of_sequence", "kind": "function", "doc": "<p>Returns the hydrophobicity classes of the residues of the sequence.</p>\n\n<p>Args:\n    sequence (Sequence): The sequence for which the hydrophobicity class will be returned.\n    assign_attribute (bool): If True, the hydrophobicity class will be added as an attribute to the sequence.\n    key (str): The name of the attribute that will be added to the sequence.</p>\n\n<p>Returns:\n    list: The hydrophobicity classes of the residues of the sequence.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">sequence</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">seq</span><span class=\"o\">.</span><span class=\"n\">sequence</span><span class=\"o\">.</span><span class=\"n\">Sequence</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;hydrophobicity_class&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.interface", "modulename": "protkit.properties.interface", "kind": "module", "doc": "<p>Implements class <code>Interface</code> to represent an interface between two proteins.</p>\n\n<p>An interface is defined as the set of atoms or residues within one chain or protein\nthat are within a specified distance of atoms or residues in another chain or protein.</p>\n\n<p>The class is meant to be used as a utility class and is not meant to be instantiated.</p>\n\n<p>It uses a SpaceQuery data structure to calculate interacting atoms and residues fast.</p>\n"}, {"fullname": "protkit.properties.interface.Interface", "modulename": "protkit.properties.interface", "qualname": "Interface", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "protkit.properties.interface.Interface.interface_atoms", "modulename": "protkit.properties.interface", "qualname": "Interface.interface_atoms", "kind": "function", "doc": "<p>Returns a list of atoms that are within a specified distance of each other.</p>\n\n<p>Args:\n    atoms1 (List[Atom]): A list of atoms.\n    atoms2 (List[Atom]): A list of atoms.\n    cutoff (float): The cutoff distance.\n    assign_attribute (bool): If True, the atoms will be assigned as an attribute to the atoms.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    List[Atom]: A list of atoms that are within the cutoff distance of each other.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">atoms1</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">atom</span><span class=\"o\">.</span><span class=\"n\">Atom</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">atoms2</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">atom</span><span class=\"o\">.</span><span class=\"n\">Atom</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">cutoff</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">5.0</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;in_interface&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"p\">(</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">atom</span><span class=\"o\">.</span><span class=\"n\">Atom</span><span class=\"p\">],</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">atom</span><span class=\"o\">.</span><span class=\"n\">Atom</span><span class=\"p\">])</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.interface.Interface.interface_residues", "modulename": "protkit.properties.interface", "qualname": "Interface.interface_residues", "kind": "function", "doc": "<p>Returns a list of residues that are within a specified distance of each other. Two residues\nare considered to be within the cutoff distance of each other if any of their atoms are\nwithin the cutoff distance of each other.</p>\n\n<p>Args:\n    residues1 (List[Residue]): A list of residues.\n    residues2 (List[Residue]): A list of residues.\n    cutoff (float): The cutoff distance.\n    assign_attribute (bool): If True, the residues will be assigned as an attribute to the residues.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    List[Residue]: A list of residues that are within the cutoff distance of each other.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">residues1</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">residue</span><span class=\"o\">.</span><span class=\"n\">Residue</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">residues2</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">residue</span><span class=\"o\">.</span><span class=\"n\">Residue</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">cutoff</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">5.0</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;in_interface&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"p\">(</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">residue</span><span class=\"o\">.</span><span class=\"n\">Residue</span><span class=\"p\">],</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">residue</span><span class=\"o\">.</span><span class=\"n\">Residue</span><span class=\"p\">])</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.interface.Interface.interface_residues_from_alpha_carbon", "modulename": "protkit.properties.interface", "qualname": "Interface.interface_residues_from_alpha_carbon", "kind": "function", "doc": "<p>Returns a list of residues that are within a specified distance of each other. Two residues\nare considered to be within the cutoff distance of each other if any of their alpha carbon\natoms are within the cutoff distance of each other.</p>\n\n<p>Args:\n    residues1 (List[Residue]): A list of residues.\n    residues2 (List[Residue]): A list of residues.\n    cutoff (float): The cutoff distance.\n    assign_attribute (bool): If True, the residues will be assigned as an attribute to the residues.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    List[Residue]: A list of residues that are within the cutoff distance of each other.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">residues1</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">residue</span><span class=\"o\">.</span><span class=\"n\">Residue</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">residues2</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">residue</span><span class=\"o\">.</span><span class=\"n\">Residue</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">cutoff</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">5.0</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;in_interface&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"p\">(</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">residue</span><span class=\"o\">.</span><span class=\"n\">Residue</span><span class=\"p\">],</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">residue</span><span class=\"o\">.</span><span class=\"n\">Residue</span><span class=\"p\">])</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.mass", "modulename": "protkit.properties.mass", "kind": "module", "doc": "<p>Implements class <code>Mass</code> to calculate the mass of an atom, residue, chain, protein or sequence.</p>\n\n<p>Masses can be calculated in three ways:</p>\n\n<ul>\n<li>Atomic weight. In the first method, a mass is assigned to each atom.\nIt is then propagated to the residue, chain and protein levels.\nThe first method is applicable if the complete atomic structure is available.</li>\n<li>Residue weight. In the second method, a mass is assigned to each residue.\nIt is then propagated to the chain and protein. It can also be assigned to a sequence,\nsince it is dependent on knowledge of the residue sequence only.</li>\n<li>Molecular weight. In the third method, the molecular mass is assigned to each residue.\nThis is the mass of the unbound amino acid. It would not make sense to\nassign this mass to the chain or protein. It can be assigned to a sequence.</li>\n</ul>\n\n<p>Masses are in Daltons. Calculated values can be added as attributes to the respective objects.</p>\n\n<p>For more information, see:\n<a href=\"https://en.wikipedia.org/wiki/Atomic_mass_unit\">https://en.wikipedia.org/wiki/Atomic_mass_unit</a></p>\n\n<p>The Dalton values were obtained from:\n<a href=\"https://www.sigmaaldrich.com/life-science/metabolomics/learning-center/amino-acid-reference-chart.html\">https://www.sigmaaldrich.com/life-science/metabolomics/learning-center/amino-acid-reference-chart.html</a></p>\n"}, {"fullname": "protkit.properties.mass.Mass", "modulename": "protkit.properties.mass", "qualname": "Mass", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "protkit.properties.mass.Mass.MOLECULAR_MASS", "modulename": "protkit.properties.mass", "qualname": "Mass.MOLECULAR_MASS", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;ALA&#x27;: 89.1, &#x27;ARG&#x27;: 174.2, &#x27;ASN&#x27;: 132.12, &#x27;ASP&#x27;: 133.11, &#x27;CYS&#x27;: 121.16, &#x27;GLN&#x27;: 146.15, &#x27;GLU&#x27;: 147.13, &#x27;GLY&#x27;: 75.07, &#x27;HIS&#x27;: 155.16, &#x27;ILE&#x27;: 131.18, &#x27;LEU&#x27;: 131.18, &#x27;LYS&#x27;: 146.19, &#x27;MET&#x27;: 149.21, &#x27;PHE&#x27;: 165.19, &#x27;PRO&#x27;: 115.13, &#x27;SER&#x27;: 105.09, &#x27;THR&#x27;: 119.12, &#x27;TRP&#x27;: 204.23, &#x27;TYR&#x27;: 181.19, &#x27;VAL&#x27;: 117.15, &#x27;A&#x27;: 89.1, &#x27;R&#x27;: 174.2, &#x27;N&#x27;: 132.12, &#x27;D&#x27;: 133.11, &#x27;C&#x27;: 121.16, &#x27;Q&#x27;: 146.15, &#x27;E&#x27;: 147.13, &#x27;G&#x27;: 75.07, &#x27;H&#x27;: 155.16, &#x27;I&#x27;: 131.18, &#x27;L&#x27;: 131.18, &#x27;K&#x27;: 146.19, &#x27;M&#x27;: 149.21, &#x27;F&#x27;: 165.19, &#x27;P&#x27;: 115.13, &#x27;S&#x27;: 105.09, &#x27;T&#x27;: 119.12, &#x27;W&#x27;: 204.23, &#x27;Y&#x27;: 181.19, &#x27;V&#x27;: 117.15}"}, {"fullname": "protkit.properties.mass.Mass.MASS_RESIDUE", "modulename": "protkit.properties.mass", "qualname": "Mass.MASS_RESIDUE", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;ALA&#x27;: 71.0788, &#x27;ARG&#x27;: 156.1875, &#x27;ASN&#x27;: 114.1038, &#x27;ASP&#x27;: 115.0886, &#x27;CYS&#x27;: 103.1388, &#x27;GLN&#x27;: 128.1307, &#x27;GLU&#x27;: 129.1155, &#x27;GLY&#x27;: 57.0519, &#x27;HIS&#x27;: 137.1411, &#x27;ILE&#x27;: 113.1594, &#x27;LEU&#x27;: 113.1594, &#x27;LYS&#x27;: 128.1741, &#x27;MET&#x27;: 131.1926, &#x27;PHE&#x27;: 147.1766, &#x27;PRO&#x27;: 97.1167, &#x27;SER&#x27;: 87.0782, &#x27;THR&#x27;: 101.1051, &#x27;TRP&#x27;: 186.2132, &#x27;TYR&#x27;: 163.176, &#x27;VAL&#x27;: 99.1326, &#x27;A&#x27;: 71.0788, &#x27;R&#x27;: 156.1875, &#x27;N&#x27;: 114.1038, &#x27;D&#x27;: 115.0886, &#x27;C&#x27;: 103.1388, &#x27;Q&#x27;: 128.1307, &#x27;E&#x27;: 129.1155, &#x27;G&#x27;: 57.0519, &#x27;H&#x27;: 137.1411, &#x27;I&#x27;: 113.1594, &#x27;L&#x27;: 113.1594, &#x27;K&#x27;: 128.1741, &#x27;M&#x27;: 131.1926, &#x27;F&#x27;: 147.1766, &#x27;P&#x27;: 97.1167, &#x27;S&#x27;: 87.0782, &#x27;T&#x27;: 101.1051, &#x27;W&#x27;: 186.2132, &#x27;Y&#x27;: 163.176, &#x27;V&#x27;: 99.1326}"}, {"fullname": "protkit.properties.mass.Mass.MASS_ATOM", "modulename": "protkit.properties.mass", "qualname": "Mass.MASS_ATOM", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;H&#x27;: 1.00794, &#x27;C&#x27;: 12.0107, &#x27;N&#x27;: 14.0067, &#x27;O&#x27;: 15.9994, &#x27;S&#x27;: 32.065, &#x27;Se&#x27;: 78.96}"}, {"fullname": "protkit.properties.mass.Mass.residue_mass_of_residue", "modulename": "protkit.properties.mass", "qualname": "Mass.residue_mass_of_residue", "kind": "function", "doc": "<p>Returns the mass of the residue.</p>\n\n<p>Args:\n    residue (Residue): The residue for which to determine the mass.\n    assign_attribute (bool): If True, the mass will be assigned as an attribute to the residue.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    float: The mass of the residue.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">residue</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">residue</span><span class=\"o\">.</span><span class=\"n\">Residue</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;residue_mass&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.mass.Mass.residue_mass_of_chain", "modulename": "protkit.properties.mass", "qualname": "Mass.residue_mass_of_chain", "kind": "function", "doc": "<p>Returns the mass of the chain.</p>\n\n<p>Args:\n    chain (Chain): The chain for which the mass will be returned.\n    assign_attribute (bool): If True, the mass will be assigned as an attribute to the chain.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    float: The mass of the chain.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">chain</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">chain</span><span class=\"o\">.</span><span class=\"n\">Chain</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;residue_mass&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.mass.Mass.residue_mass_of_protein", "modulename": "protkit.properties.mass", "qualname": "Mass.residue_mass_of_protein", "kind": "function", "doc": "<p>Returns the mass of the protein.</p>\n\n<p>Args:\n    protein (Protein): The protein for which the mass will be returned.\n    assign_attribute (bool): If True, the mass will be assigned as an attribute to the protein.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    float: The mass of the protein.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">protein</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;residue_mass&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.mass.Mass.residue_mass_of_sequence", "modulename": "protkit.properties.mass", "qualname": "Mass.residue_mass_of_sequence", "kind": "function", "doc": "<p>Returns the mass of the sequence.</p>\n\n<p>Args:\n    sequence (Sequence): The sequence for which the mass will be returned.\n    assign_attribute (bool): If True, the mass will be assigned as an attribute to the sequence.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    float: The mass of the sequence.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">sequence</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">seq</span><span class=\"o\">.</span><span class=\"n\">sequence</span><span class=\"o\">.</span><span class=\"n\">Sequence</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;residue_mass&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.mass.Mass.atomic_mass_of_atom", "modulename": "protkit.properties.mass", "qualname": "Mass.atomic_mass_of_atom", "kind": "function", "doc": "<p>Returns the mass of the atom.</p>\n\n<p>Args:\n    atom (Atom): The atom for which to determine the mass.\n    assign_attribute (bool): If True, the mass will be assigned as an attribute to the atom.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    float: The mass of the atom</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">atom</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">atom</span><span class=\"o\">.</span><span class=\"n\">Atom</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;atomic_mass&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.mass.Mass.atomic_mass_of_residue", "modulename": "protkit.properties.mass", "qualname": "Mass.atomic_mass_of_residue", "kind": "function", "doc": "<p>Returns the mass of the residue, calculated as the sum of atomic masses.</p>\n\n<p>Args:\n    residue (Residue): The residue for which to determine the mass.\n    assign_attribute (bool): If True, the mass will be assigned as an attribute to the residue.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    float: The mass of the residue.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">residue</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">residue</span><span class=\"o\">.</span><span class=\"n\">Residue</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;atomic_mass&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.mass.Mass.atomic_mass_of_chain", "modulename": "protkit.properties.mass", "qualname": "Mass.atomic_mass_of_chain", "kind": "function", "doc": "<p>Returns the mass of the chain, calculated as the sum of atomic masses.</p>\n\n<p>Args:\n    chain (Chain): The chain for which to determine the mass.\n    assign_attribute (bool): If True, the mass will be assigned as an attribute to the chain.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    float: The mass of the chain.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">chain</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">chain</span><span class=\"o\">.</span><span class=\"n\">Chain</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;atomic_mass&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.mass.Mass.atomic_mass_of_protein", "modulename": "protkit.properties.mass", "qualname": "Mass.atomic_mass_of_protein", "kind": "function", "doc": "<p>Returns the mass of the protein, calculated as the sum of atomic masses.</p>\n\n<p>Args:\n    protein (Protein): The protein for which to determine the mass.\n    assign_attribute (bool): If True, the mass will be assigned as an attribute to the protein.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    float: The mass of the protein.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">protein</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;atomic_mass&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.mass.Mass.molecular_mass_of_residue", "modulename": "protkit.properties.mass", "qualname": "Mass.molecular_mass_of_residue", "kind": "function", "doc": "<p>Returns the molecular mass of the residue.</p>\n\n<p>Args:\n    residue (Residue): The residue for which to determine the mass.\n    assign_attribute (bool): If True, the mass will be assigned as an attribute to the residue.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    float: The mass of the residue.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">residue</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">residue</span><span class=\"o\">.</span><span class=\"n\">Residue</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;molecular_mass&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.mass.Mass.molecular_mass_of_chain", "modulename": "protkit.properties.mass", "qualname": "Mass.molecular_mass_of_chain", "kind": "function", "doc": "<p>Returns the molecular mass of the chain.</p>\n\n<p>Args:\n    chain (Chain): The chain for which to determine the mass.\n    assign_attribute (bool): If True, the mass will be assigned as attributes to the residues in the chain.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    float: The mass of the chain.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">chain</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">chain</span><span class=\"o\">.</span><span class=\"n\">Chain</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;molecular_mass&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.mass.Mass.molecular_mass_of_protein", "modulename": "protkit.properties.mass", "qualname": "Mass.molecular_mass_of_protein", "kind": "function", "doc": "<p>Returns the molecular mass of the protein.</p>\n\n<p>Args:\n    protein (Protein): The protein for which to determine the mass.\n    assign_attribute (bool): If True, the mass will be assigned as attributes to the residues in the protein.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    float: The mass of the protein.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">protein</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;molecular_mass&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.polarity", "modulename": "protkit.properties.polarity", "kind": "module", "doc": "<p>Implements class <code>Polarity</code> to calculate the polarity of a residue,\nchain, protein or sequence.</p>\n\n<p>Polarity values related to residues are defined at:\n<a href=\"https://www.imgt.org/IMGTeducation/Aide-memoire/_UK/aminoacids/IMGTclasses.html#charge\">https://www.imgt.org/IMGTeducation/Aide-memoire/_UK/aminoacids/IMGTclasses.html#charge</a></p>\n"}, {"fullname": "protkit.properties.polarity.Polarity", "modulename": "protkit.properties.polarity", "qualname": "Polarity", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "protkit.properties.polarity.Polarity.UNDEFINED", "modulename": "protkit.properties.polarity", "qualname": "Polarity.UNDEFINED", "kind": "variable", "doc": "<p></p>\n", "default_value": "0"}, {"fullname": "protkit.properties.polarity.Polarity.POLAR", "modulename": "protkit.properties.polarity", "qualname": "Polarity.POLAR", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, {"fullname": "protkit.properties.polarity.Polarity.NON_POLAR", "modulename": "protkit.properties.polarity", "qualname": "Polarity.NON_POLAR", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, {"fullname": "protkit.properties.polarity.Polarity.POLARITY_STRING", "modulename": "protkit.properties.polarity", "qualname": "Polarity.POLARITY_STRING", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;Undefined&#x27;, &#x27;Polar&#x27;, &#x27;Non-polar&#x27;]"}, {"fullname": "protkit.properties.polarity.Polarity.POLARITY", "modulename": "protkit.properties.polarity", "qualname": "Polarity.POLARITY", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;ALA&#x27;: 2, &#x27;ARG&#x27;: 1, &#x27;ASN&#x27;: 1, &#x27;ASP&#x27;: 1, &#x27;CYS&#x27;: 2, &#x27;GLN&#x27;: 1, &#x27;GLU&#x27;: 1, &#x27;GLY&#x27;: 2, &#x27;HIS&#x27;: 1, &#x27;ILE&#x27;: 2, &#x27;LEU&#x27;: 2, &#x27;LYS&#x27;: 1, &#x27;MET&#x27;: 2, &#x27;PHE&#x27;: 2, &#x27;PRO&#x27;: 2, &#x27;SER&#x27;: 1, &#x27;THR&#x27;: 1, &#x27;TRP&#x27;: 2, &#x27;TYR&#x27;: 1, &#x27;VAL&#x27;: 2, &#x27;A&#x27;: 2, &#x27;R&#x27;: 1, &#x27;N&#x27;: 1, &#x27;D&#x27;: 1, &#x27;C&#x27;: 2, &#x27;E&#x27;: 1, &#x27;Q&#x27;: 1, &#x27;G&#x27;: 2, &#x27;H&#x27;: 1, &#x27;I&#x27;: 2, &#x27;L&#x27;: 2, &#x27;K&#x27;: 1, &#x27;M&#x27;: 2, &#x27;F&#x27;: 2, &#x27;P&#x27;: 2, &#x27;S&#x27;: 1, &#x27;T&#x27;: 1, &#x27;W&#x27;: 2, &#x27;Y&#x27;: 1, &#x27;V&#x27;: 2}"}, {"fullname": "protkit.properties.polarity.Polarity.polarity_of_residue", "modulename": "protkit.properties.polarity", "qualname": "Polarity.polarity_of_residue", "kind": "function", "doc": "<p>Returns the polarity of the residue.</p>\n\n<p>Args:\n    residue (Residue): The residue for which to determine the polarity.\n    assign_attribute (bool): Whether to assign the polarity to the residue.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    int: The polarity of the residue.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">residue</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">residue</span><span class=\"o\">.</span><span class=\"n\">Residue</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;polarity&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.polarity.Polarity.polarities_of_chain", "modulename": "protkit.properties.polarity", "qualname": "Polarity.polarities_of_chain", "kind": "function", "doc": "<p>Returns the polarities of the residues of a chain.</p>\n\n<p>Args:\n    chain (Chain): The chain for which to determine the polarity.\n    assign_attribute (bool): Whether to assign the polarity to the chain.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    int: The polarity of the chain.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">chain</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">chain</span><span class=\"o\">.</span><span class=\"n\">Chain</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;polarity&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.polarity.Polarity.polarities_of_protein", "modulename": "protkit.properties.polarity", "qualname": "Polarity.polarities_of_protein", "kind": "function", "doc": "<p>Returns the polarities of the residues in the protein.</p>\n\n<p>Args:\n    protein (Protein): The protein for which to determine the polarities.\n    assign_attribute (bool): Whether to assign the polarities to the protein.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    List[List[int]]: The polarities of the residues in the protein.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">protein</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;polarity&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.polarity.Polarity.polarities_of_sequence", "modulename": "protkit.properties.polarity", "qualname": "Polarity.polarities_of_sequence", "kind": "function", "doc": "<p>Returns the polarities of the residues in the sequence.</p>\n\n<p>Args:\n    sequence (Sequence): The sequence for which to determine the polarities.\n    assign_attribute (bool): Whether to assign the polarities to the sequence.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    List[int]: The polarities of the residues in the sequence.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">sequence</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">seq</span><span class=\"o\">.</span><span class=\"n\">sequence</span><span class=\"o\">.</span><span class=\"n\">Sequence</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;polarity&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.surface_area", "modulename": "protkit.properties.surface_area", "kind": "module", "doc": "<p>Implements class <code>SurfaceArea</code> to calculate the surface area of proteins.</p>\n\n<p>The ASA or SASA was first described by Lee and Richards in 1971. Shrake and Rupley\ndeveloped the rolling ball algorithm in 1973.</p>\n\n<p>RASA can be calculated by dividing the ASA by the MaxASA. MasASA values were calculated\nby Miller et al. (1987).</p>\n\n<p>Levy (2010) describes a method for defining interior, surface, support, core and rim\nresidues of a protein based on ASA calculations.</p>\n\n<h2 id=\"abbreviations\">Abbreviations:</h2>\n\n<p>ASA    - Accessible Surface Area\nBASA   - Buried Surface Area\nMaxASA - Maximum Accessible Surface Area\nRASA   - Relative Accessible Surface Area = ASA / MaxASA\nSASA   - Solvent Accessible Surface Area (same as ASA)</p>\n\n<h2 id=\"papers-referenced-in-this-code\">Papers referenced in this code:</h2>\n\n<p>Lee B., Richards F.M. (1971)\nThe interpretation of protein structures: estimation of static accessibility.\nJ. Mol. Biol. Vol. 55, pp. 279-400.</p>\n\n<p>Levy E.D. (2010)\nA simple definition of structural regions in proteins and its use in analyzing\ninterface evolution.\nJ. Mol. Biol. Vol. 403, pp. 660-670.</p>\n\n<p>Miller S., Janin J., Lesk A.M., Chothia C. (1987).\nInterior and surface of monomeric proteins.\nJ. Mol. Biol. Vol. 196, pp. 641-656.</p>\n\n<p>Mitternacht S. (2016)\nFreeSASA: An open source C library for solvent accessible surface area calculations.\nF1000 Research, 5:189.</p>\n\n<p>Shrake A., Rupley J.A. (1973)\nEnvironment and exposure to solvent of protein atoms. Lysozyme and insulin.\nJ. Mol. Biol. Vol. 79, pp. 351-371.</p>\n\n<h2 id=\"external-packages-used-in-this-code\">External packages used in this code:</h2>\n\n<p>FreeSASA - <a href=\"https://freesasa.github.io/\">https://freesasa.github.io/</a>\nProvides C implementations of the Lee-Richards and Shrake-Rupley algorithms\nwith implementation hooks for Python.</p>\n"}, {"fullname": "protkit.properties.surface_area.SurfaceArea", "modulename": "protkit.properties.surface_area", "qualname": "SurfaceArea", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "protkit.properties.surface_area.SurfaceArea.MAX_ASA_MILLER", "modulename": "protkit.properties.surface_area", "qualname": "SurfaceArea.MAX_ASA_MILLER", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;ALA&#x27;: 113.0, &#x27;ARG&#x27;: 241.0, &#x27;ASN&#x27;: 158.0, &#x27;ASP&#x27;: 151.0, &#x27;CYS&#x27;: 140.0, &#x27;GLN&#x27;: 189.0, &#x27;GLU&#x27;: 183.0, &#x27;GLY&#x27;: 85.0, &#x27;HIS&#x27;: 194.0, &#x27;ILE&#x27;: 182.0, &#x27;LEU&#x27;: 180.0, &#x27;LYS&#x27;: 211.0, &#x27;MET&#x27;: 204.0, &#x27;PHE&#x27;: 218.0, &#x27;PRO&#x27;: 143.0, &#x27;SER&#x27;: 122.0, &#x27;THR&#x27;: 146.0, &#x27;TRP&#x27;: 259.0, &#x27;TYR&#x27;: 229.0, &#x27;VAL&#x27;: 160.0}"}, {"fullname": "protkit.properties.surface_area.SurfaceArea.surface_area_of_protein", "modulename": "protkit.properties.surface_area", "qualname": "SurfaceArea.surface_area_of_protein", "kind": "function", "doc": "<p>Calculate the surface area of a protein.</p>\n\n<p>Args:\n    protein (Protein): The protein object for which to calculate the surface area.\n    assign_attribute (bool): Whether to assign the surface area to the protein object.\n    key (str): The attribute key to use when assigning the surface area to the protein object.</p>\n\n<p>Returns:\n    float: The surface area of the protein.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">protein</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;surface_area&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.vdw_radius", "modulename": "protkit.properties.vdw_radius", "kind": "module", "doc": "<p>Implements class <code>VDWRadius</code> to provide van der Waals radii for atoms.</p>\n"}, {"fullname": "protkit.properties.vdw_radius.VDWRadius", "modulename": "protkit.properties.vdw_radius", "qualname": "VDWRadius", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "protkit.properties.vdw_radius.VDWRadius.VDW_RADIUS", "modulename": "protkit.properties.vdw_radius", "qualname": "VDWRadius.VDW_RADIUS", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;H&#x27;: 1.2, &#x27;C&#x27;: 1.7, &#x27;N&#x27;: 1.55, &#x27;O&#x27;: 1.52, &#x27;P&#x27;: 1.8, &#x27;S&#x27;: 1.8, &#x27;F&#x27;: 1.47, &#x27;CL&#x27;: 1.75, &#x27;BR&#x27;: 1.83, &#x27;I&#x27;: 1.98, &#x27;SE&#x27;: 1.9}"}, {"fullname": "protkit.properties.vdw_radius.VDWRadius.SURFACE_RADIUS", "modulename": "protkit.properties.vdw_radius", "qualname": "VDWRadius.SURFACE_RADIUS", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;H&#x27;: 1.2, &#x27;C&#x27;: 1.7, &#x27;N&#x27;: 1.55, &#x27;O&#x27;: 1.52, &#x27;P&#x27;: 1.8, &#x27;S&#x27;: 1.8, &#x27;F&#x27;: 1.47, &#x27;CL&#x27;: 1.75, &#x27;BR&#x27;: 1.83, &#x27;I&#x27;: 1.98, &#x27;SE&#x27;: 1.9}"}, {"fullname": "protkit.properties.volume", "modulename": "protkit.properties.volume", "kind": "module", "doc": "<p>Implements class <code>Volume</code> to calculate the volume of a protein,\nchain, residue or sequence.</p>\n\n<p>Volume is calculated by summing the volumes of residues in a chain, protein\nor sequence. For residues, current volume assignments are fixed and based on\nvalues as provided by the IMGT. In future versions,\nvolume calculations could be based on side-chain conformations of the residues.</p>\n\n<p>See <a href=\"https://www.imgt.org/IMGTeducation/Aide-memoire/_UK/aminoacids/IMGTclasses.html\">https://www.imgt.org/IMGTeducation/Aide-memoire/_UK/aminoacids/IMGTclasses.html</a></p>\n"}, {"fullname": "protkit.properties.volume.Volume", "modulename": "protkit.properties.volume", "qualname": "Volume", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "protkit.properties.volume.Volume.VOLUME", "modulename": "protkit.properties.volume", "qualname": "Volume.VOLUME", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;ALA&#x27;: 88.6, &#x27;ARG&#x27;: 173.4, &#x27;ASN&#x27;: 114.1, &#x27;ASP&#x27;: 111.1, &#x27;CYS&#x27;: 108.5, &#x27;GLN&#x27;: 143.8, &#x27;GLU&#x27;: 138.4, &#x27;GLY&#x27;: 60.1, &#x27;HIS&#x27;: 153.2, &#x27;ILE&#x27;: 166.7, &#x27;LEU&#x27;: 166.7, &#x27;LYS&#x27;: 168.6, &#x27;MET&#x27;: 162.9, &#x27;PHE&#x27;: 189.9, &#x27;PRO&#x27;: 112.7, &#x27;SER&#x27;: 89.0, &#x27;THR&#x27;: 116.1, &#x27;TRP&#x27;: 227.8, &#x27;TYR&#x27;: 193.6, &#x27;VAL&#x27;: 140.0, &#x27;A&#x27;: 88.6, &#x27;R&#x27;: 173.4, &#x27;N&#x27;: 114.1, &#x27;D&#x27;: 111.1, &#x27;C&#x27;: 108.5, &#x27;Q&#x27;: 143.8, &#x27;E&#x27;: 138.4, &#x27;G&#x27;: 60.1, &#x27;H&#x27;: 153.2, &#x27;I&#x27;: 166.7, &#x27;L&#x27;: 166.7, &#x27;K&#x27;: 168.6, &#x27;M&#x27;: 162.9, &#x27;F&#x27;: 189.9, &#x27;P&#x27;: 112.7, &#x27;S&#x27;: 89.0, &#x27;T&#x27;: 116.1, &#x27;W&#x27;: 227.8, &#x27;Y&#x27;: 193.6, &#x27;V&#x27;: 140.0}"}, {"fullname": "protkit.properties.volume.Volume.UNDEFINED", "modulename": "protkit.properties.volume", "qualname": "Volume.UNDEFINED", "kind": "variable", "doc": "<p></p>\n", "default_value": "0"}, {"fullname": "protkit.properties.volume.Volume.VS", "modulename": "protkit.properties.volume", "qualname": "Volume.VS", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, {"fullname": "protkit.properties.volume.Volume.S", "modulename": "protkit.properties.volume", "qualname": "Volume.S", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, {"fullname": "protkit.properties.volume.Volume.M", "modulename": "protkit.properties.volume", "qualname": "Volume.M", "kind": "variable", "doc": "<p></p>\n", "default_value": "3"}, {"fullname": "protkit.properties.volume.Volume.L", "modulename": "protkit.properties.volume", "qualname": "Volume.L", "kind": "variable", "doc": "<p></p>\n", "default_value": "4"}, {"fullname": "protkit.properties.volume.Volume.VL", "modulename": "protkit.properties.volume", "qualname": "Volume.VL", "kind": "variable", "doc": "<p></p>\n", "default_value": "5"}, {"fullname": "protkit.properties.volume.Volume.VOLUME_CLASS_STRING", "modulename": "protkit.properties.volume", "qualname": "Volume.VOLUME_CLASS_STRING", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;Undefined&#x27;, &#x27;Very Small&#x27;, &#x27;Small&#x27;, &#x27;Medium&#x27;, &#x27;Large&#x27;, &#x27;Very Large&#x27;]"}, {"fullname": "protkit.properties.volume.Volume.VOLUME_CLASS", "modulename": "protkit.properties.volume", "qualname": "Volume.VOLUME_CLASS", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;ALA&#x27;: 1, &#x27;ARG&#x27;: 4, &#x27;ASN&#x27;: 2, &#x27;ASP&#x27;: 2, &#x27;CYS&#x27;: 2, &#x27;GLN&#x27;: 3, &#x27;GLU&#x27;: 3, &#x27;GLY&#x27;: 1, &#x27;HIS&#x27;: 3, &#x27;ILE&#x27;: 4, &#x27;LEU&#x27;: 4, &#x27;LYS&#x27;: 4, &#x27;MET&#x27;: 4, &#x27;PHE&#x27;: 5, &#x27;PRO&#x27;: 2, &#x27;SER&#x27;: 1, &#x27;THR&#x27;: 2, &#x27;TRP&#x27;: 5, &#x27;TYR&#x27;: 5, &#x27;VAL&#x27;: 3, &#x27;A&#x27;: 1, &#x27;R&#x27;: 4, &#x27;N&#x27;: 2, &#x27;D&#x27;: 2, &#x27;C&#x27;: 2, &#x27;Q&#x27;: 3, &#x27;E&#x27;: 3, &#x27;G&#x27;: 1, &#x27;H&#x27;: 3, &#x27;I&#x27;: 4, &#x27;L&#x27;: 4, &#x27;K&#x27;: 4, &#x27;M&#x27;: 4, &#x27;F&#x27;: 5, &#x27;P&#x27;: 2, &#x27;S&#x27;: 1, &#x27;T&#x27;: 2, &#x27;W&#x27;: 5, &#x27;Y&#x27;: 5, &#x27;V&#x27;: 3}"}, {"fullname": "protkit.properties.volume.Volume.volume_of_residue", "modulename": "protkit.properties.volume", "qualname": "Volume.volume_of_residue", "kind": "function", "doc": "<p>Get the volume of a residue.</p>\n\n<p>Args:\n    residue (Residue): The residue for which to calculate the volume.\n    assign_attribute (bool): If True, the volume will be assigned as an attribute to the residue.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    float: A float representing the volume of the residue.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">residue</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">residue</span><span class=\"o\">.</span><span class=\"n\">Residue</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;volume&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.volume.Volume.volume_class_of_residue", "modulename": "protkit.properties.volume", "qualname": "Volume.volume_class_of_residue", "kind": "function", "doc": "<p>Get the volume class of a residue.</p>\n\n<p>Args:\n    residue (Residue): The residue for which to calculate the volume class.\n    assign_attribute (bool): If True, the volume class will be assigned as an attribute to the residue.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    int: A string representing the volume class of the residue.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">residue</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">residue</span><span class=\"o\">.</span><span class=\"n\">Residue</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;volume_class&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.volume.Volume.volume_of_chain", "modulename": "protkit.properties.volume", "qualname": "Volume.volume_of_chain", "kind": "function", "doc": "<p>Get the volume of a chain.</p>\n\n<p>Args:\n    chain (Chain): The chain for which to calculate the volume.\n    assign_attribute (bool): If True, the volume will be assigned as an attribute to the chain.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    float: A float representing the volume of the chain.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">chain</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">chain</span><span class=\"o\">.</span><span class=\"n\">Chain</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;volume&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.volume.Volume.volume_classes_of_chain", "modulename": "protkit.properties.volume", "qualname": "Volume.volume_classes_of_chain", "kind": "function", "doc": "<p>Get the volume classes of a chain.</p>\n\n<p>Args:\n    chain (Chain): The chain for which to calculate the volume classes.\n    assign_attribute (bool): If True, the volume classes will be assigned as an attribute to the chain.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    list: A list of volume classes of the chain.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">chain</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">chain</span><span class=\"o\">.</span><span class=\"n\">Chain</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;volume_class&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.volume.Volume.volume_of_protein", "modulename": "protkit.properties.volume", "qualname": "Volume.volume_of_protein", "kind": "function", "doc": "<p>Get the volume of a protein.</p>\n\n<p>Args:\n    protein (Protein): The protein for which to calculate the volume.\n    assign_attribute (bool): If True, the volume will be assigned as an attribute to the protein.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    float: A float representing the volume of the protein.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">protein</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;volume&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.volume.Volume.volume_classes_of_protein", "modulename": "protkit.properties.volume", "qualname": "Volume.volume_classes_of_protein", "kind": "function", "doc": "<p>Get the volume classes of a protein.</p>\n\n<p>Args:\n    protein (Protein): The protein for which to calculate the volume classes.\n    assign_attribute (bool): If True, the volume classes will be assigned as an attribute to the protein.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    list: A list of volume classes of the protein.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">protein</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;volume_class&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.volume.Volume.volume_of_sequence", "modulename": "protkit.properties.volume", "qualname": "Volume.volume_of_sequence", "kind": "function", "doc": "<p>Get the volume of a sequence.</p>\n\n<p>Args:\n    sequence (Sequence): The sequence for which to calculate the volume.\n    assign_attribute (bool): If True, the volume will be assigned as an attribute to the sequence.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    float: A float representing the volume of the sequence.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">sequence</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">seq</span><span class=\"o\">.</span><span class=\"n\">sequence</span><span class=\"o\">.</span><span class=\"n\">Sequence</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;volume&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.properties.volume.Volume.volume_classes_of_sequence", "modulename": "protkit.properties.volume", "qualname": "Volume.volume_classes_of_sequence", "kind": "function", "doc": "<p>Get the volume classes of a sequence.</p>\n\n<p>Args:\n    sequence (Sequence): The sequence for which to calculate the volume classes.\n    assign_attribute (bool): If True, the volume classes will be assigned as an attribute to the sequence.\n    key (str): The key to use for the attribute.</p>\n\n<p>Returns:\n    list: A list of volume classes of the sequence.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">sequence</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">seq</span><span class=\"o\">.</span><span class=\"n\">sequence</span><span class=\"o\">.</span><span class=\"n\">Sequence</span>,</span><span class=\"param\">\t<span class=\"n\">assign_attribute</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;volume_class&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.seq", "modulename": "protkit.seq", "kind": "module", "doc": "<p>Package <code>seq</code> contains classes to represent sequences in computational biology.</p>\n\n<p>Sequence Representations:</p>\n\n<ul>\n<li><code>Sequence</code> class in <code>sequence</code>: Represents sequence data.</li>\n<li><code>ProteinSequence</code> class in <code>protein_sequence</code>: Represents sequence data of a protein.</li>\n<li><code>AntibodySequence</code> class in <code>antibody_sequence</code>: Represents sequence data of an antibody.</li>\n<li><code>NucleotideSequence</code> class in <code>nucleotide_sequence</code>: Represents sequence data of a nucleotide.</li>\n</ul>\n"}, {"fullname": "protkit.seq.antibody_sequence", "modulename": "protkit.seq.antibody_sequence", "kind": "module", "doc": "<p>Implements class <code>AntibodySequence</code> to represent an antibody sequence.</p>\n"}, {"fullname": "protkit.seq.antibody_sequence.AntibodySequence", "modulename": "protkit.seq.antibody_sequence", "qualname": "AntibodySequence", "kind": "class", "doc": "<p></p>\n", "bases": "protkit.seq.protein_sequence.ProteinSequence"}, {"fullname": "protkit.seq.antibody_sequence.AntibodySequence.__init__", "modulename": "protkit.seq.antibody_sequence", "qualname": "AntibodySequence.__init__", "kind": "function", "doc": "<p>Constructor.</p>\n\n<p>Args:\n    sequence (Union[str, List[str]]): The sequence of residue names.\n    description (Optional[str]): Optional description associated with the sequence.\n    chain_id (Optional[str]): Optional chain ID associated with the sequence.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">sequence</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">description</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">chain_id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "protkit.seq.nucleotide_sequence", "modulename": "protkit.seq.nucleotide_sequence", "kind": "module", "doc": "<p>Implements class <code>NucleotideSequence</code> to represent a nucleotide sequence.</p>\n\n<p>IUPAC base symbols for nucleotide sequences:\n    A   A               Adenine\n    C   C               Cytosine\n    G   G               Guanine\n    T   T               Thymine\n    U   U               Uracil</p>\n\n<pre><code>W   A or T          Weak\nS   G or C          Strong\nR   A or G          Purine\nY   C or T          Pyrimidine\nK   G or T          Ketone\nM   A or C          Amino\n\nB   C or G or T     Not A\nD   A or G or T     Not C\nH   A or C or T     Not G\nV   A or C or G     Not T\n\nN   A, C, G or T    Any base\n-                   Gap\n</code></pre>\n\n<p>See: <a href=\"https://en.wikipedia.org/wiki/Nucleic_acid_notation\">https://en.wikipedia.org/wiki/Nucleic_acid_notation</a></p>\n"}, {"fullname": "protkit.seq.nucleotide_sequence.NucleotideSequence", "modulename": "protkit.seq.nucleotide_sequence", "qualname": "NucleotideSequence", "kind": "class", "doc": "<p></p>\n", "bases": "protkit.seq.sequence.Sequence"}, {"fullname": "protkit.seq.nucleotide_sequence.NucleotideSequence.__init__", "modulename": "protkit.seq.nucleotide_sequence", "qualname": "NucleotideSequence.__init__", "kind": "function", "doc": "<p>Constructor.</p>\n\n<p>Args:\n    sequence (Union[str, List[str]]): The sequence of residue names.\n    description (Optional[str]): Optional description associated with the sequence.\n    chain_id (Optional[str]): Optional chain ID associated with the sequence.</p>\n\n<p>Returns:\n    None</p>\n\n<p>Notes:\n    The sequence can be provided as a string or a list of strings.\n    If provided as a string, the string will be converted to a list of strings.</p>\n\n<pre><code>A sequence can be respresented by a string of single letters, such as \"AGILE\",\nor a list of three-letter codes such as [\"ALA\", \"GLY\", \"ILE\", \"LEU\", \"GLU\"]. For\nconsistency, the sequence is always represented as a list of codes.\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">sequence</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">description</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">chain_id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "protkit.seq.protein_sequence", "modulename": "protkit.seq.protein_sequence", "kind": "module", "doc": "<p>Implements class <code>ProteinSequence</code> to represent a protein sequence.</p>\n"}, {"fullname": "protkit.seq.protein_sequence.ProteinSequence", "modulename": "protkit.seq.protein_sequence", "qualname": "ProteinSequence", "kind": "class", "doc": "<p></p>\n", "bases": "protkit.seq.sequence.Sequence"}, {"fullname": "protkit.seq.protein_sequence.ProteinSequence.__init__", "modulename": "protkit.seq.protein_sequence", "qualname": "ProteinSequence.__init__", "kind": "function", "doc": "<p>Constructor.</p>\n\n<p>Args:\n    sequence (Union[str, List[str]]): The sequence of residue names.\n    description (Optional[str]): Optional description associated with the sequence.\n    chain_id (Optional[str]): Optional chain ID associated with the sequence.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">sequence</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">description</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">chain_id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "protkit.seq.protein_sequence.ProteinSequence.THREE_TO_ONE", "modulename": "protkit.seq.protein_sequence", "qualname": "ProteinSequence.THREE_TO_ONE", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;ALA&#x27;: &#x27;A&#x27;, &#x27;CYS&#x27;: &#x27;C&#x27;, &#x27;ASP&#x27;: &#x27;D&#x27;, &#x27;GLU&#x27;: &#x27;E&#x27;, &#x27;PHE&#x27;: &#x27;F&#x27;, &#x27;GLY&#x27;: &#x27;G&#x27;, &#x27;HIS&#x27;: &#x27;H&#x27;, &#x27;ILE&#x27;: &#x27;I&#x27;, &#x27;LYS&#x27;: &#x27;K&#x27;, &#x27;LEU&#x27;: &#x27;L&#x27;, &#x27;MET&#x27;: &#x27;M&#x27;, &#x27;ASN&#x27;: &#x27;N&#x27;, &#x27;PRO&#x27;: &#x27;P&#x27;, &#x27;GLN&#x27;: &#x27;Q&#x27;, &#x27;ARG&#x27;: &#x27;R&#x27;, &#x27;SER&#x27;: &#x27;S&#x27;, &#x27;THR&#x27;: &#x27;T&#x27;, &#x27;VAL&#x27;: &#x27;V&#x27;, &#x27;TRP&#x27;: &#x27;W&#x27;, &#x27;TYR&#x27;: &#x27;Y&#x27;, &#x27;SEC&#x27;: &#x27;U&#x27;, &#x27;PYL&#x27;: &#x27;O&#x27;, &#x27;ASX&#x27;: &#x27;B&#x27;, &#x27;GLX&#x27;: &#x27;Z&#x27;, &#x27;XLE&#x27;: &#x27;J&#x27;, &#x27;UNK&#x27;: &#x27;X&#x27;, &#x27;XAA&#x27;: &#x27;X&#x27;}"}, {"fullname": "protkit.seq.protein_sequence.ProteinSequence.ONE_TO_THREE", "modulename": "protkit.seq.protein_sequence", "qualname": "ProteinSequence.ONE_TO_THREE", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;A&#x27;: &#x27;ALA&#x27;, &#x27;C&#x27;: &#x27;CYS&#x27;, &#x27;D&#x27;: &#x27;ASP&#x27;, &#x27;E&#x27;: &#x27;GLU&#x27;, &#x27;F&#x27;: &#x27;PHE&#x27;, &#x27;G&#x27;: &#x27;GLY&#x27;, &#x27;H&#x27;: &#x27;HIS&#x27;, &#x27;I&#x27;: &#x27;ILE&#x27;, &#x27;K&#x27;: &#x27;LYS&#x27;, &#x27;L&#x27;: &#x27;LEU&#x27;, &#x27;M&#x27;: &#x27;MET&#x27;, &#x27;N&#x27;: &#x27;ASN&#x27;, &#x27;P&#x27;: &#x27;PRO&#x27;, &#x27;Q&#x27;: &#x27;GLN&#x27;, &#x27;R&#x27;: &#x27;ARG&#x27;, &#x27;S&#x27;: &#x27;SER&#x27;, &#x27;T&#x27;: &#x27;THR&#x27;, &#x27;V&#x27;: &#x27;VAL&#x27;, &#x27;W&#x27;: &#x27;TRP&#x27;, &#x27;Y&#x27;: &#x27;TYR&#x27;, &#x27;U&#x27;: &#x27;SEC&#x27;, &#x27;O&#x27;: &#x27;PYL&#x27;, &#x27;B&#x27;: &#x27;ASX&#x27;, &#x27;Z&#x27;: &#x27;GLX&#x27;, &#x27;J&#x27;: &#x27;XLE&#x27;, &#x27;X&#x27;: &#x27;UNK&#x27;}"}, {"fullname": "protkit.seq.protein_sequence.ProteinSequence.from_sequence", "modulename": "protkit.seq.protein_sequence", "qualname": "ProteinSequence.from_sequence", "kind": "function", "doc": "<p>Creates a ProteinSequence object from a Sequence object.</p>\n\n<p>Args:\n    seq (Sequence): The Sequence object.</p>\n\n<p>Returns:\n    ProteinSequence: The ProteinSequence object.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">seq</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">seq</span><span class=\"o\">.</span><span class=\"n\">sequence</span><span class=\"o\">.</span><span class=\"n\">Sequence</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "protkit.seq.protein_sequence.ProteinSequence.to_single_letter", "modulename": "protkit.seq.protein_sequence", "qualname": "ProteinSequence.to_single_letter", "kind": "function", "doc": "<p>Converts the sequence to single-letter residue names.</p>\n\n<p>Args:\n    None</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "protkit.seq.protein_sequence.ProteinSequence.to_triple_letter", "modulename": "protkit.seq.protein_sequence", "qualname": "ProteinSequence.to_triple_letter", "kind": "function", "doc": "<p>Converts the sequence to three-letter residue names.</p>\n\n<p>Args:\n    None</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "protkit.seq.sequence", "modulename": "protkit.seq.sequence", "kind": "module", "doc": "<p>Implements class <code>Sequence</code> to represent a sequence of residues.</p>\n\n<p>This class provides a representation of a sequence. The class\nprovides core functionality for sequence alignment and comparison,\nthat is applicable to both nucleotide and protein sequences.</p>\n\n<p>Specific functionality for nucleotide and protein sequences are\nprovided by the NucleotideSequence and ProteinSequence classes.</p>\n\n<p>This class should be able to handle sequences of any length, and\nof any type (nucleotide or protein). The underlying representation\nof the sequence should be able to handle any type of sequence.</p>\n"}, {"fullname": "protkit.seq.sequence.Sequence", "modulename": "protkit.seq.sequence", "qualname": "Sequence", "kind": "class", "doc": "<p></p>\n", "bases": "protkit.core.extend_attributes.ExtendedAttributes"}, {"fullname": "protkit.seq.sequence.Sequence.__init__", "modulename": "protkit.seq.sequence", "qualname": "Sequence.__init__", "kind": "function", "doc": "<p>Constructor.</p>\n\n<p>Args:\n    sequence (Union[str, List[str]]): The sequence of residue names.\n    description (Optional[str]): Optional description associated with the sequence.\n    chain_id (Optional[str]): Optional chain ID associated with the sequence.</p>\n\n<p>Returns:\n    None</p>\n\n<p>Notes:\n    The sequence can be provided as a string or a list of strings.\n    If provided as a string, the string will be converted to a list of strings.</p>\n\n<pre><code>A sequence can be respresented by a string of single letters, such as \"AGILE\",\nor a list of three-letter codes such as [\"ALA\", \"GLY\", \"ILE\", \"LEU\", \"GLU\"]. For\nconsistency, the sequence is always represented as a list of codes.\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">sequence</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">description</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">chain_id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "protkit.seq.sequence.Sequence.to_string", "modulename": "protkit.seq.sequence", "qualname": "Sequence.to_string", "kind": "function", "doc": "<p>Returns a string representation of a subsequence.</p>\n\n<p>Args:\n    start_index (int): The start index of the subsequence.\n    end_index (int): The end index of the subsequence.</p>\n\n<p>Returns:\n    str: The string representation of the subsequence.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">start_index</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">end_index</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.seq.sequence.Sequence.sequence", "modulename": "protkit.seq.sequence", "qualname": "Sequence.sequence", "kind": "variable", "doc": "<p>Returns the sequence.</p>\n\n<p>Returns:\n    str: The sequence.</p>\n"}, {"fullname": "protkit.seq.sequence.Sequence.description", "modulename": "protkit.seq.sequence", "qualname": "Sequence.description", "kind": "variable", "doc": "<p>Returns the description.</p>\n\n<p>Returns:\n    str: The description.</p>\n"}, {"fullname": "protkit.seq.sequence.Sequence.chain_id", "modulename": "protkit.seq.sequence", "qualname": "Sequence.chain_id", "kind": "variable", "doc": "<p>Returns the chain ID.</p>\n\n<p>Returns:\n    str: The chain ID.</p>\n"}, {"fullname": "protkit.seq.sequence.Sequence.length", "modulename": "protkit.seq.sequence", "qualname": "Sequence.length", "kind": "variable", "doc": "<p>Returns the length of the sequence.</p>\n\n<p>Returns:\n    int: The length of the sequence.</p>\n"}, {"fullname": "protkit.seq.sequence_alignment", "modulename": "protkit.seq.sequence_alignment", "kind": "module", "doc": "<p>Implements class <code>SequenceAlignment</code> to align two sequences.</p>\n\n<ul>\n<li><code>local_align()</code> to align two sequences using the Smith-Waterman algorithm.</li>\n<li><code>global_align()</code> to align two sequences using the Needleman-Wunsch algorithm.</li>\n</ul>\n"}, {"fullname": "protkit.seq.sequence_alignment.SequenceAlignment", "modulename": "protkit.seq.sequence_alignment", "qualname": "SequenceAlignment", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "protkit.seq.sequence_alignment.SequenceAlignment.local_align", "modulename": "protkit.seq.sequence_alignment", "qualname": "SequenceAlignment.local_align", "kind": "function", "doc": "<p>Aligns two sequences using the Smith-Waterman algorithm.</p>\n\n<p>Args:\n    sequence1 (Sequence): The first sequence.\n    sequence2 (Sequence): The second sequence.\n    match_value (int): The score for a match.\n    mismatch_penalty (int): The penalty for a mismatch.\n    gap_penalty (int): The penalty for a gap.</p>\n\n<p>Returns:\n    List[str], List[str]: The aligned sequences.</p>\n\n<p>Raises:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">sequence1</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">seq</span><span class=\"o\">.</span><span class=\"n\">sequence</span><span class=\"o\">.</span><span class=\"n\">Sequence</span>,</span><span class=\"param\">\t<span class=\"n\">sequence2</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">seq</span><span class=\"o\">.</span><span class=\"n\">sequence</span><span class=\"o\">.</span><span class=\"n\">Sequence</span>,</span><span class=\"param\">\t<span class=\"n\">match_value</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>,</span><span class=\"param\">\t<span class=\"n\">mismatch_penalty</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">gap_penalty</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span></span><span class=\"return-annotation\">) -> <span class=\"p\">(</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">])</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.seq.sequence_alignment.SequenceAlignment.global_align", "modulename": "protkit.seq.sequence_alignment", "qualname": "SequenceAlignment.global_align", "kind": "function", "doc": "<p>Aligns two sequences using the Needleman-Wunsch algorithm.</p>\n\n<p>Args:\n    sequence1 (Sequence): The first sequence.\n    sequence2 (Sequence): The second sequence.\n    match_value (int): The score for a match.\n    mismatch_penalty (int): The penalty for a mismatch.\n    gap_penalty (int): The penalty for a gap.\nReturns:\n    List[str], List[str]: The aligned sequences.</p>\n\n<p>Raises:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">sequence1</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">seq</span><span class=\"o\">.</span><span class=\"n\">sequence</span><span class=\"o\">.</span><span class=\"n\">Sequence</span>,</span><span class=\"param\">\t<span class=\"n\">sequence2</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">seq</span><span class=\"o\">.</span><span class=\"n\">sequence</span><span class=\"o\">.</span><span class=\"n\">Sequence</span>,</span><span class=\"param\">\t<span class=\"n\">match_value</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>,</span><span class=\"param\">\t<span class=\"n\">mismatch_penalty</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">gap_penalty</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span></span><span class=\"return-annotation\">) -> <span class=\"p\">(</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">])</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure", "modulename": "protkit.structure", "kind": "module", "doc": "<p>Package <code>structure</code> contains classes to represent structural data in computational biology.</p>\n\n<p>Structural Representations:</p>\n\n<ul>\n<li><code>Protein</code> class in <code>protein</code>: Represents structural data of a protein.</li>\n<li><code>Chain</code> class in <code>chain</code>: Represents structural data of a chain.</li>\n<li><code>Residue</code> class in <code>residue</code>: Represents structural data of a residue.</li>\n<li><code>Atom</code> class in <code>atom</code>: Represents structural data of an atom.</li>\n</ul>\n"}, {"fullname": "protkit.structure.atom", "modulename": "protkit.structure.atom", "kind": "module", "doc": "<p>Implements class <code>Atom</code> to represent an atom in a protein.</p>\n"}, {"fullname": "protkit.structure.atom.Atom", "modulename": "protkit.structure.atom", "qualname": "Atom", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "protkit.structure.atom.Atom.__init__", "modulename": "protkit.structure.atom", "qualname": "Atom.__init__", "kind": "function", "doc": "<p>Constructor for the Atom class.</p>\n\n<p>Args:\n    element (str): The element associated with the atom.\n    atom_type (str): The atom type.\n    x (float): The x coordinate of the atom.\n    y (float): The y coordinate of the atom.\n    z (float): The z coordinate of the atom.\n    is_hetero (bool, optional): The hetero flag. Defaults to False.\n    is_disordered (bool, optional): The disordered flag. Defaults to False.\n    alt_loc (Optional[str], optional): The alt_loc identifier. Defaults to None.\n    occupancy (Optional[float], optional): The occupancy. Defaults to None.\n    temp_factor (Optional[float], optional): The temperature factor. Defaults to None.\n    assigned_charge (Optional[str], optional): The assigned charge. Defaults to None.\n    calculated_charge (Optional[float], optional): The calculated charge (PQR). Defaults to None.\n    radius (Optional[float], optional): The radius (PQR). Defaults to None.\n    residue (Optional[Residue], optional): The residue the atom forms part of. Defaults to None.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">element</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">atom_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">z</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">is_hetero</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">is_disordered</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">alt_loc</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">occupancy</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">temp_factor</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">assigned_charge</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">calculated_charge</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">radius</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">residue</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">residue</span><span class=\"o\">.</span><span class=\"n\">Residue</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "protkit.structure.atom.Atom.copy", "modulename": "protkit.structure.atom", "qualname": "Atom.copy", "kind": "function", "doc": "<p>Returns a deep copy of the atom, excluding the residue.</p>\n\n<p>Returns:\n    Atom: A deep copy of the atom, excluding the residue.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.atom.Atom.id", "modulename": "protkit.structure.atom", "qualname": "Atom.id", "kind": "variable", "doc": "<p>Returns the atom's id, which is a combination of the\nresidue id and the atom type.</p>\n\n<p>Returns:\n    str: The atom's id.</p>\n", "annotation": ": str"}, {"fullname": "protkit.structure.atom.Atom.element", "modulename": "protkit.structure.atom", "qualname": "Atom.element", "kind": "variable", "doc": "<p>Returns the element associated with the atom.</p>\n\n<p>Returns:\n    str: The element associated with the atom.</p>\n", "annotation": ": str"}, {"fullname": "protkit.structure.atom.Atom.atom_type", "modulename": "protkit.structure.atom", "qualname": "Atom.atom_type", "kind": "variable", "doc": "<p>Returns the atom type.</p>\n\n<p>Returns:\n    str: The atom type.</p>\n", "annotation": ": str"}, {"fullname": "protkit.structure.atom.Atom.x", "modulename": "protkit.structure.atom", "qualname": "Atom.x", "kind": "variable", "doc": "<p>Returns the x coordinate of the atom.</p>\n\n<p>Returns:\n    float: The x coordinate of the atom.</p>\n", "annotation": ": float"}, {"fullname": "protkit.structure.atom.Atom.y", "modulename": "protkit.structure.atom", "qualname": "Atom.y", "kind": "variable", "doc": "<p>Returns the y coordinate of the atom.</p>\n\n<p>Returns:\n    float: The y coordinate of the atom.</p>\n", "annotation": ": float"}, {"fullname": "protkit.structure.atom.Atom.z", "modulename": "protkit.structure.atom", "qualname": "Atom.z", "kind": "variable", "doc": "<p>Returns the z coordinate of the atom.</p>\n\n<p>Returns:\n    float: The z coordinate of the atom.</p>\n", "annotation": ": float"}, {"fullname": "protkit.structure.atom.Atom.is_hetero", "modulename": "protkit.structure.atom", "qualname": "Atom.is_hetero", "kind": "variable", "doc": "<p>Returns the hetero flag.</p>\n\n<p>Returns:\n    bool: The hetero flag.</p>\n", "annotation": ": bool"}, {"fullname": "protkit.structure.atom.Atom.is_disordered", "modulename": "protkit.structure.atom", "qualname": "Atom.is_disordered", "kind": "variable", "doc": "<p>Returns the disordered flag.</p>\n\n<p>Returns:\n    bool: The disordered flag.</p>\n", "annotation": ": bool"}, {"fullname": "protkit.structure.atom.Atom.residue", "modulename": "protkit.structure.atom", "qualname": "Atom.residue", "kind": "variable", "doc": "<p>Returns the residue the atom forms part of.</p>\n\n<p>Returns:\n    Optional[Residue]: The residue the atom forms part of.</p>\n", "annotation": ": Optional[protkit.structure.residue.Residue]"}, {"fullname": "protkit.structure.atom.Atom.chain", "modulename": "protkit.structure.atom", "qualname": "Atom.chain", "kind": "variable", "doc": "<p>Returns the chain the atom forms part of.</p>\n\n<p>Returns:\n    Optional[Chain]: The chain the atom forms part of.</p>\n", "annotation": ": Optional[protkit.structure.chain.Chain]"}, {"fullname": "protkit.structure.atom.Atom.chain_id", "modulename": "protkit.structure.atom", "qualname": "Atom.chain_id", "kind": "variable", "doc": "<p>Returns the chain ID the atom forms part of.</p>\n\n<p>Returns:\n    Optional[str]: The chain ID the atom forms part of.</p>\n", "annotation": ": Optional[str]"}, {"fullname": "protkit.structure.atom.Atom.protein", "modulename": "protkit.structure.atom", "qualname": "Atom.protein", "kind": "variable", "doc": "<p>Returns the protein the atom forms part of.</p>\n\n<p>Returns:\n    Optional[Protein]: The protein the atom forms part of.</p>\n", "annotation": ": Optional[protkit.structure.protein.Protein]"}, {"fullname": "protkit.structure.atom.Atom.pdb_id", "modulename": "protkit.structure.atom", "qualname": "Atom.pdb_id", "kind": "variable", "doc": "<p>Returns the PDB ID the atom forms part of.</p>\n\n<p>Returns:\n    Optional[str]: The PDB ID the atom forms part of.</p>\n", "annotation": ": Optional[str]"}, {"fullname": "protkit.structure.atom.Atom.merge_disordered_atom", "modulename": "protkit.structure.atom", "qualname": "Atom.merge_disordered_atom", "kind": "function", "doc": "<p>Merges the disordered atom with the current atom.\nKeep track of the additional disordered information\nfrom the atom that the merge is done with.</p>\n\n<p>Args:\n    atom (Atom): The atom to merge with.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">atom</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">atom</span><span class=\"o\">.</span><span class=\"n\">Atom</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.atom.Atom.fix_disordered_atom", "modulename": "protkit.structure.atom", "qualname": "Atom.fix_disordered_atom", "kind": "function", "doc": "<p>Fixes the disordered atom by selecting the disordered\nstate with the highest occupancy.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.atom.Atom.has_attribute", "modulename": "protkit.structure.atom", "qualname": "Atom.has_attribute", "kind": "function", "doc": "<p>Returns True if the atom has the specified attribute.</p>\n\n<p>Args:\n    key (str): The name of the attribute.</p>\n\n<p>Returns:\n    bool: True if the atom has the specified attribute.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.atom.Atom.get_attribute", "modulename": "protkit.structure.atom", "qualname": "Atom.get_attribute", "kind": "function", "doc": "<p>current_residueReturns the value of the specified attribute.</p>\n\n<p>Args:\n    key (str): The name of the attribute.</p>\n\n<p>Returns:\n    Any: The value of the specified attribute.</p>\n\n<p>Raises:\n    AttributeError: If the attribute does not exist.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.atom.Atom.set_attribute", "modulename": "protkit.structure.atom", "qualname": "Atom.set_attribute", "kind": "function", "doc": "<p>\"\nSets the value of the specified attribute.</p>\n\n<p>Args:\n    key (str): The name of the attribute.\n    value (Any): The value of the attribute.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.atom.Atom.delete_attribute", "modulename": "protkit.structure.atom", "qualname": "Atom.delete_attribute", "kind": "function", "doc": "<p>Deletes the specified attribute.</p>\n\n<p>Args:\n    key (str): The name of the attribute.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.chain", "modulename": "protkit.structure.chain", "kind": "module", "doc": "<p>Implements class <code>Chain</code> to represent a chain in a protein.</p>\n"}, {"fullname": "protkit.structure.chain.Chain", "modulename": "protkit.structure.chain", "qualname": "Chain", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "protkit.structure.chain.Chain.__init__", "modulename": "protkit.structure.chain", "qualname": "Chain.__init__", "kind": "function", "doc": "<p>Constructor for the Chain class.</p>\n\n<p>Args:\n    chain_id (str): The chain's ID.\n    protein (Optional[Protein]): The chain's protein.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">chain_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">protein</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "protkit.structure.chain.Chain.copy", "modulename": "protkit.structure.chain", "qualname": "Chain.copy", "kind": "function", "doc": "<p>Returns a deep copy of the chain, excluding the protein.</p>\n\n<p>Returns:\n    Chain: A deep copy of the chain.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.chain.Chain.id", "modulename": "protkit.structure.chain", "qualname": "Chain.id", "kind": "variable", "doc": "<p>Returns the chain's ID, which is the chain ID if the chain\nis not part of a protein, or the protein ID + chain ID if\nthe chain is part of a protein.</p>\n\n<p>Returns:\n    str: The chain's ID.</p>\n", "annotation": ": str"}, {"fullname": "protkit.structure.chain.Chain.chain_id", "modulename": "protkit.structure.chain", "qualname": "Chain.chain_id", "kind": "variable", "doc": "<p>Returns the chain's ID.</p>\n\n<p>Returns:\n    str: The chain's ID.</p>\n", "annotation": ": str"}, {"fullname": "protkit.structure.chain.Chain.sequence", "modulename": "protkit.structure.chain", "qualname": "Chain.sequence", "kind": "variable", "doc": "<p>Returns the chain's sequence.</p>\n\n<p>Returns:\n    str: The chain's sequence.</p>\n", "annotation": ": str"}, {"fullname": "protkit.structure.chain.Chain.protein", "modulename": "protkit.structure.chain", "qualname": "Chain.protein", "kind": "variable", "doc": "<p>Returns the chain's protein.</p>\n\n<p>Returns:\n    Protein: The chain's protein.</p>\n", "annotation": ": protkit.structure.protein.Protein"}, {"fullname": "protkit.structure.chain.Chain.pdb_id", "modulename": "protkit.structure.chain", "qualname": "Chain.pdb_id", "kind": "variable", "doc": "<p>Returns the chain's PDB ID.</p>\n\n<p>Returns:\n    str: The chain's PDB ID.</p>\n", "annotation": ": str"}, {"fullname": "protkit.structure.chain.Chain.add_residue", "modulename": "protkit.structure.chain", "qualname": "Chain.add_residue", "kind": "function", "doc": "<p>Adds a residue to the end of the chain.</p>\n\n<p>Args:\n    residue (Residue): The residue to be added.</p>\n\n<p>Returns:\n    Residue: The residue that was added.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">residue</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">residue</span><span class=\"o\">.</span><span class=\"n\">Residue</span></span><span class=\"return-annotation\">) -> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">residue</span><span class=\"o\">.</span><span class=\"n\">Residue</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.chain.Chain.residues", "modulename": "protkit.structure.chain", "qualname": "Chain.residues", "kind": "variable", "doc": "<p>Returns an iterator over the chain's residues.</p>\n\n<p>Yields:\n    Residue: The next residue in the chain.</p>\n", "annotation": ": Iterator[protkit.structure.residue.Residue]"}, {"fullname": "protkit.structure.chain.Chain.num_residues", "modulename": "protkit.structure.chain", "qualname": "Chain.num_residues", "kind": "variable", "doc": "<p>Returns the number of residues in the chain.</p>\n\n<p>Returns:\n    int: The number of residues in the chain.</p>\n"}, {"fullname": "protkit.structure.chain.Chain.num_disordered_residues", "modulename": "protkit.structure.chain", "qualname": "Chain.num_disordered_residues", "kind": "variable", "doc": "<p>Returns the number of disordered residues in the chain.</p>\n\n<p>Returns:\n    int: The number of disordered residues in the chain.</p>\n", "annotation": ": int"}, {"fullname": "protkit.structure.chain.Chain.num_hetero_residues", "modulename": "protkit.structure.chain", "qualname": "Chain.num_hetero_residues", "kind": "variable", "doc": "<p>Returns the number of hetero residues in the chain.</p>\n\n<p>Returns:\n    int: The number of hetero residues in the chain.</p>\n", "annotation": ": int"}, {"fullname": "protkit.structure.chain.Chain.num_water_residues", "modulename": "protkit.structure.chain", "qualname": "Chain.num_water_residues", "kind": "variable", "doc": "<p>Returns the number of water residues in the chain.</p>\n\n<p>Returns:\n    int: The number of water residues in the chain.</p>\n", "annotation": ": int"}, {"fullname": "protkit.structure.chain.Chain.num_residues_by_type", "modulename": "protkit.structure.chain", "qualname": "Chain.num_residues_by_type", "kind": "variable", "doc": "<p>Returns the number of residues in the chain by residue type.</p>\n\n<p>Returns:\n    Dict[str, int]: The number of residues in the chain by residue type.</p>\n", "annotation": ": Dict[str, int]"}, {"fullname": "protkit.structure.chain.Chain.get_residue", "modulename": "protkit.structure.chain", "qualname": "Chain.get_residue", "kind": "function", "doc": "<p>Returns the residue at the specified index (0-based).</p>\n\n<p>Args:\n    index (int): The index of the residue.</p>\n\n<p>Returns:\n    Residue: The residue at the specified index.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">index</span></span><span class=\"return-annotation\">) -> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">residue</span><span class=\"o\">.</span><span class=\"n\">Residue</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.chain.Chain.get_residue_by_sequence_code", "modulename": "protkit.structure.chain", "qualname": "Chain.get_residue_by_sequence_code", "kind": "function", "doc": "<p>Returns the residue with the specified key.</p>\n\n<p>Args:\n    sequence_code (str): The key of the residue.</p>\n\n<p>Returns:\n    Residue: The residue with the specified sequence_code, or None\n        if the residue is not found.</p>\n\n<p>TODO:\n    It would be efficient to compute a dictionary of residues\n    that maps the key to an index when the residues are added.\n    Lookups like this would be much more efficient.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">sequence_code</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> [&lt;class &#x27;protkit.structure.residue.Residue&#x27;&gt;, None]:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.chain.Chain.filter_residues", "modulename": "protkit.structure.chain", "qualname": "Chain.filter_residues", "kind": "function", "doc": "<p>Yields residues that match the specified criteria.</p>\n\n<p>Args:\n    residue_criteria (Optional[List]): List of residue criteria.</p>\n\n<p>Yields:\n    Residue: The next residue that matches the specified criteria.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">residue_criteria</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">residue</span><span class=\"o\">.</span><span class=\"n\">Residue</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.chain.Chain.seqres_analysis", "modulename": "protkit.structure.chain", "qualname": "Chain.seqres_analysis", "kind": "function", "doc": "<p>Compares the sequence of the chain to the SEQRES record.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.chain.Chain.renumber_residues", "modulename": "protkit.structure.chain", "qualname": "Chain.renumber_residues", "kind": "function", "doc": "<p>Renumbers the residues in the chain. Residues are numbered\nsequentially, starting at 1.  If new_numbers is not specified,\nthe residues are numbered sequentially, starting at 1.\nInsertion codes are removed.</p>\n\n<p>Args:\n    new_numbers (Optional[List[int]]): List of new residue numbers.\n        If not specified, the residues are numbered sequentially,\n        starting at 1.</p>\n\n<p>Returns:\n    None</p>\n\n<p>Raises:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">new_numbers</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.chain.Chain.remove_hetero_residues", "modulename": "protkit.structure.chain", "qualname": "Chain.remove_hetero_residues", "kind": "function", "doc": "<p>Removes hetero residues from the chain.</p>\n\n<p>Args:\n    hetero_residue_types (Optional[Union[str, List[str]]]): The residue types to be removed.\n        If not specified, all hetero residues are removed.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">hetero_residue_types</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.chain.Chain.remove_water_residues", "modulename": "protkit.structure.chain", "qualname": "Chain.remove_water_residues", "kind": "function", "doc": "<p>Removes water residues from the chain.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.chain.Chain.atoms", "modulename": "protkit.structure.chain", "qualname": "Chain.atoms", "kind": "variable", "doc": "<p>Returns an iterator over the chain's atoms.</p>\n\n<p>Yields:\n    Atom: The next atom in the chain.</p>\n", "annotation": ": Iterator[protkit.structure.atom.Atom]"}, {"fullname": "protkit.structure.chain.Chain.num_atoms", "modulename": "protkit.structure.chain", "qualname": "Chain.num_atoms", "kind": "variable", "doc": "<p>Returns the number of atoms in the chain.</p>\n\n<p>Returns:\n    int: The number of atoms in the chain.</p>\n", "annotation": ": int"}, {"fullname": "protkit.structure.chain.Chain.num_heavy_atoms", "modulename": "protkit.structure.chain", "qualname": "Chain.num_heavy_atoms", "kind": "variable", "doc": "<p>Returns the number of heavy atoms in the chain.</p>\n\n<p>Returns:\n    int: The number of heavy atoms in the chain.</p>\n", "annotation": ": int"}, {"fullname": "protkit.structure.chain.Chain.num_hydrogen_atoms", "modulename": "protkit.structure.chain", "qualname": "Chain.num_hydrogen_atoms", "kind": "variable", "doc": "<p>Returns the number of hydrogen atoms in the chain.</p>\n\n<p>Returns:\n    int: The number of hydrogen atoms in the chain.</p>\n", "annotation": ": int"}, {"fullname": "protkit.structure.chain.Chain.num_disordered_atoms", "modulename": "protkit.structure.chain", "qualname": "Chain.num_disordered_atoms", "kind": "variable", "doc": "<p>Returns the number of disordered atoms in the chain.</p>\n\n<p>Returns:\n    int: The number of disordered atoms in the chain.</p>\n", "annotation": ": int"}, {"fullname": "protkit.structure.chain.Chain.num_hetero_atoms", "modulename": "protkit.structure.chain", "qualname": "Chain.num_hetero_atoms", "kind": "variable", "doc": "<p>Returns the number of hetero atoms in the chain.</p>\n\n<p>Returns:\n    int: The number of hetero atoms in the chain.</p>\n", "annotation": ": int"}, {"fullname": "protkit.structure.chain.Chain.filter_atoms", "modulename": "protkit.structure.chain", "qualname": "Chain.filter_atoms", "kind": "function", "doc": "<p>Yields atoms that match the specified criteria.</p>\n\n<p>Args:\n    atom_criteria (Optional[List]): List of atom criteria.\n    residue_criteria (Optional[List]): List of residue criteria.</p>\n\n<p>Yields:\n    Atom: The next atom that matches the specified criteria.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">atom_criteria</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">residue_criteria</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Iterator</span><span class=\"p\">[</span><span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">atom</span><span class=\"o\">.</span><span class=\"n\">Atom</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.chain.Chain.missing_heavy_atom_types", "modulename": "protkit.structure.chain", "qualname": "Chain.missing_heavy_atom_types", "kind": "function", "doc": "<p>Returns a list of missing heavy atom types.</p>\n\n<p>Returns:\n    Dict[str, Set[str]]: A list of missing heavy atom types.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Set</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.chain.Chain.extra_heavy_atom_types", "modulename": "protkit.structure.chain", "qualname": "Chain.extra_heavy_atom_types", "kind": "function", "doc": "<p>Returns a list of extra heavy atom types.</p>\n\n<p>Returns:\n    Dict[str, Set[str]]: A list of extra heavy atom types.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Set</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.chain.Chain.missing_hydrogen_atom_types", "modulename": "protkit.structure.chain", "qualname": "Chain.missing_hydrogen_atom_types", "kind": "function", "doc": "<p>Returns a list of missing hydrogen atom types.</p>\n\n<p>Returns:\n    Dict[str, Set[str]]: A list of missing hydrogen atom types.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Set</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.chain.Chain.extra_hydrogen_atom_types", "modulename": "protkit.structure.chain", "qualname": "Chain.extra_hydrogen_atom_types", "kind": "function", "doc": "<p>Returns a list of extra hydrogen atom types.</p>\n\n<p>Returns:\n    Dict[str, Set[str]]: A list of extra hydrogen atom types.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Set</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.chain.Chain.fix_disordered_atoms", "modulename": "protkit.structure.chain", "qualname": "Chain.fix_disordered_atoms", "kind": "function", "doc": "<p>Fixes disordered atoms in the chain.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.chain.Chain.remove_atoms", "modulename": "protkit.structure.chain", "qualname": "Chain.remove_atoms", "kind": "function", "doc": "<p>Removes atoms from the chain.</p>\n\n<p>Args:\n    atom_types (List[str]): The atom types to be removed.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">atom_types</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.chain.Chain.remove_hydrogen_atoms", "modulename": "protkit.structure.chain", "qualname": "Chain.remove_hydrogen_atoms", "kind": "function", "doc": "<p>Removes hydrogen atoms from the chain.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.chain.Chain.keep_atoms", "modulename": "protkit.structure.chain", "qualname": "Chain.keep_atoms", "kind": "function", "doc": "<p>Removes atoms from the chain.</p>\n\n<p>Args:\n    atom_types (List[str]): The atom types to be kept.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">atom_types</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.chain.Chain.keep_backbone_atoms", "modulename": "protkit.structure.chain", "qualname": "Chain.keep_backbone_atoms", "kind": "function", "doc": "<p>Removes atoms from the chain.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.chain.Chain.has_attribute", "modulename": "protkit.structure.chain", "qualname": "Chain.has_attribute", "kind": "function", "doc": "<p>Returns True if the chain has the specified attribute.</p>\n\n<p>Args:\n    key (str): The name of the attribute.</p>\n\n<p>Returns:\n    bool: True if the chain has the specified attribute.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.chain.Chain.get_attribute", "modulename": "protkit.structure.chain", "qualname": "Chain.get_attribute", "kind": "function", "doc": "<p>Returns the value of the specified attribute.</p>\n\n<p>Args:\n    key (str): The name of the attribute.</p>\n\n<p>Returns:\n    Any: The value of the specified attribute.</p>\n\n<p>Raises:\n    AttributeError: If the attribute does not exist.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.chain.Chain.set_attribute", "modulename": "protkit.structure.chain", "qualname": "Chain.set_attribute", "kind": "function", "doc": "<p>Sets the value of the specified attribute.</p>\n\n<p>Args:\n    key (str): The name of the attribute.\n    value (Any): The value of the attribute.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.chain.Chain.delete_attribute", "modulename": "protkit.structure.chain", "qualname": "Chain.delete_attribute", "kind": "function", "doc": "<p>Deletes the specified attribute.</p>\n\n<p>Args:\n    key (str): The name of the attribute.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.chain.Chain.sum_attribute", "modulename": "protkit.structure.chain", "qualname": "Chain.sum_attribute", "kind": "function", "doc": "<p>Sums the value of the specified attribute.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.chain.Chain.summary", "modulename": "protkit.structure.chain", "qualname": "Chain.summary", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.protein", "modulename": "protkit.structure.protein", "kind": "module", "doc": "<p>Implements class <code>Protein</code> to represent a protein's structural data.</p>\n"}, {"fullname": "protkit.structure.protein.Protein", "modulename": "protkit.structure.protein", "qualname": "Protein", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "protkit.structure.protein.Protein.__init__", "modulename": "protkit.structure.protein", "qualname": "Protein.__init__", "kind": "function", "doc": "<p>Constructor for the Protein class.</p>\n\n<p>Args:\n    pdb_id (str): The PDB ID of the protein.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pdb_id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "protkit.structure.protein.Protein.copy", "modulename": "protkit.structure.protein", "qualname": "Protein.copy", "kind": "function", "doc": "<p>Returns a deep copy of the protein.</p>\n\n<p>Args:\n    keep_chain_ids (list of str): The chain IDs to keep.\n    remove_chain_ids (list of str): The chain IDs to remove.</p>\n\n<p>Returns:\n    Protein: A deep copy of the protein.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">keep_chain_ids</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">remove_chain_ids</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.protein.Protein.id", "modulename": "protkit.structure.protein", "qualname": "Protein.id", "kind": "variable", "doc": "<p>Returns the protein's ID.</p>\n\n<p>Returns:\n    str: The protein's ID.</p>\n", "annotation": ": str"}, {"fullname": "protkit.structure.protein.Protein.pdb_id", "modulename": "protkit.structure.protein", "qualname": "Protein.pdb_id", "kind": "variable", "doc": "<p>Returns the protein's PDB ID.</p>\n\n<p>Returns:\n    str: The protein's PDB ID.</p>\n", "annotation": ": Optional[str]"}, {"fullname": "protkit.structure.protein.Protein.create_chain", "modulename": "protkit.structure.protein", "qualname": "Protein.create_chain", "kind": "function", "doc": "<p>Creates a new empty chain in the protein\nwith the specified chain ID.</p>\n\n<p>Args:\n    chain_id (str): The ID of the chain.</p>\n\n<p>Returns:\n    Chain: The new chain.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">chain_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">chain</span><span class=\"o\">.</span><span class=\"n\">Chain</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.protein.Protein.add_chain", "modulename": "protkit.structure.protein", "qualname": "Protein.add_chain", "kind": "function", "doc": "<p>Adds an existing chain to the protein.</p>\n\n<p>Args:\n    chain_id (str): The ID of the chain.\n    chain (Chain): The chain to add.</p>\n\n<p>Returns:\n    Chain: The added chain.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">chain_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">chain</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">chain</span><span class=\"o\">.</span><span class=\"n\">Chain</span></span><span class=\"return-annotation\">) -> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">chain</span><span class=\"o\">.</span><span class=\"n\">Chain</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.protein.Protein.chains", "modulename": "protkit.structure.protein", "qualname": "Protein.chains", "kind": "variable", "doc": "<p>Yields all chains in the protein.</p>\n\n<p>Yields:\n    Chain: The next chain in the protein.</p>\n", "annotation": ": Iterator[protkit.structure.chain.Chain]"}, {"fullname": "protkit.structure.protein.Protein.chain_ids", "modulename": "protkit.structure.protein", "qualname": "Protein.chain_ids", "kind": "variable", "doc": "<p>Returns a sorted list of chain IDs in the protein.</p>\n\n<p>Returns:\n    list of str: The sorted list of chain IDs in the protein.</p>\n", "annotation": ": List[str]"}, {"fullname": "protkit.structure.protein.Protein.num_chains", "modulename": "protkit.structure.protein", "qualname": "Protein.num_chains", "kind": "variable", "doc": "<p>Returns the number of chains in the protein.</p>\n\n<p>Returns:\n    int: The number of chains in the protein.</p>\n", "annotation": ": int"}, {"fullname": "protkit.structure.protein.Protein.has_chain", "modulename": "protkit.structure.protein", "qualname": "Protein.has_chain", "kind": "function", "doc": "<p>Checks if a chain exists in the protein.</p>\n\n<p>Args:\n    chain_id (str): The ID of the chain.</p>\n\n<p>Returns:\n    bool: True if the chain exists in the protein.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">chain_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.protein.Protein.get_chain", "modulename": "protkit.structure.protein", "qualname": "Protein.get_chain", "kind": "function", "doc": "<p>Returns a chain from the protein if it exists.</p>\n\n<p>Args:\n    chain_id (str): The ID of the chain.</p>\n\n<p>Returns:\n    Chain: The chain if it exists, otherwise None.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">chain_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">chain</span><span class=\"o\">.</span><span class=\"n\">Chain</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.protein.Protein.filter_chains", "modulename": "protkit.structure.protein", "qualname": "Protein.filter_chains", "kind": "function", "doc": "<p>Filters chains in the protein based on the specified criteria.\nYielded chains must match all criteria.</p>\n\n<p>Args:\n    chain_criteria (list of tuple): The criteria to filter the chains.</p>\n\n<p>Yields:\n    Chain: The next chain in the protein that matches the criteria.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">chain_criteria</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Iterator</span><span class=\"p\">[</span><span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">chain</span><span class=\"o\">.</span><span class=\"n\">Chain</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.protein.Protein.rename_chain", "modulename": "protkit.structure.protein", "qualname": "Protein.rename_chain", "kind": "function", "doc": "<p>Renames a chain in the protein.</p>\n\n<p>Args:\n    chain_id_from (str): The ID of the chain to rename.\n    chain_id_to (str): The new ID of the chain.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">chain_id_from</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">chain_id_to</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.protein.Protein.remove_chains", "modulename": "protkit.structure.protein", "qualname": "Protein.remove_chains", "kind": "function", "doc": "<p>Removes chains from the protein.</p>\n\n<p>Args:\n    chain_ids (list of str): The IDs of the chains to remove.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">chain_ids</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.protein.Protein.keep_chains", "modulename": "protkit.structure.protein", "qualname": "Protein.keep_chains", "kind": "function", "doc": "<p>Keeps only the selected chains in the protein.</p>\n\n<p>Args:\n    chain_ids (list of str): The IDs of the chains to keep.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">chain_ids</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.protein.Protein.residues", "modulename": "protkit.structure.protein", "qualname": "Protein.residues", "kind": "variable", "doc": "<p>Yields all residues in the protein.</p>\n\n<p>Yields:\n    Residue: The next residue in the protein.</p>\n", "annotation": ": Iterator[protkit.structure.residue.Residue]"}, {"fullname": "protkit.structure.protein.Protein.num_residues", "modulename": "protkit.structure.protein", "qualname": "Protein.num_residues", "kind": "variable", "doc": "<p>Returns the number of residues in the protein.</p>\n\n<p>Returns:\n    int: The number of residues in the protein.</p>\n", "annotation": ": int"}, {"fullname": "protkit.structure.protein.Protein.num_disordered_residues", "modulename": "protkit.structure.protein", "qualname": "Protein.num_disordered_residues", "kind": "variable", "doc": "<p>Returns the number of disordered residues in the protein.</p>\n\n<p>Returns:\n    int: The number of disordered residues in the protein.</p>\n", "annotation": ": int"}, {"fullname": "protkit.structure.protein.Protein.num_hetero_residues", "modulename": "protkit.structure.protein", "qualname": "Protein.num_hetero_residues", "kind": "variable", "doc": "<p>Returns the number of hetero residues in the protein.</p>\n\n<p>Returns:\n    int: The number of hetero residues in the protein.</p>\n", "annotation": ": int"}, {"fullname": "protkit.structure.protein.Protein.num_water_residues", "modulename": "protkit.structure.protein", "qualname": "Protein.num_water_residues", "kind": "variable", "doc": "<p>Returns the number of water residues in the protein.</p>\n\n<p>Returns:\n    int: The number of water residues in the protein.</p>\n", "annotation": ": int"}, {"fullname": "protkit.structure.protein.Protein.num_residues_by_type", "modulename": "protkit.structure.protein", "qualname": "Protein.num_residues_by_type", "kind": "variable", "doc": "<p>Returns the number of residues in the protein by residue type.</p>\n\n<p>Returns:\n    dict of str, int: The number of residues in the protein by residue type.</p>\n", "annotation": ": Dict[str, int]"}, {"fullname": "protkit.structure.protein.Protein.get_residue", "modulename": "protkit.structure.protein", "qualname": "Protein.get_residue", "kind": "function", "doc": "<p>Returns a residue from the protein if it exists.</p>\n\n<p>Args:\n    chain_id (str): The ID of the chain.\n    residue_index (int): The index of the residue.</p>\n\n<p>Returns:\n    Residue: The residue if it exists, otherwise None.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">chain_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">residue_index</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">residue</span><span class=\"o\">.</span><span class=\"n\">Residue</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.protein.Protein.filter_residues", "modulename": "protkit.structure.protein", "qualname": "Protein.filter_residues", "kind": "function", "doc": "<p>Filters residues in the protein based on the specified criteria.\nYielded residues must match all criteria.</p>\n\n<p>Args:\n    chain_criteria (list of tuple): The criteria to filter the chains.\n    residue_criteria (list of tuple): The criteria to filter the residues.</p>\n\n<p>Yields:\n    Residue: The next residue in the protein that matches the criteria.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">chain_criteria</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">residue_criteria</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Iterator</span><span class=\"p\">[</span><span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">residue</span><span class=\"o\">.</span><span class=\"n\">Residue</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.protein.Protein.renumber_residues", "modulename": "protkit.structure.protein", "qualname": "Protein.renumber_residues", "kind": "function", "doc": "<p>Renumbers residues in the protein sequentially.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.protein.Protein.remove_hetero_residues", "modulename": "protkit.structure.protein", "qualname": "Protein.remove_hetero_residues", "kind": "function", "doc": "<p>Removes all hetero residues from the protein.</p>\n\n<p>Args:\n    hetero_residue_types (list of str): The residue types to remove.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">hetero_residue_types</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.protein.Protein.remove_water_residues", "modulename": "protkit.structure.protein", "qualname": "Protein.remove_water_residues", "kind": "function", "doc": "<p>Removes all water residues from the protein.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.protein.Protein.atoms", "modulename": "protkit.structure.protein", "qualname": "Protein.atoms", "kind": "variable", "doc": "<p>Yields all atoms in the protein.</p>\n\n<p>Yields:\n    Atom: The next atom in the protein.</p>\n", "annotation": ": Iterator[protkit.structure.atom.Atom]"}, {"fullname": "protkit.structure.protein.Protein.num_atoms", "modulename": "protkit.structure.protein", "qualname": "Protein.num_atoms", "kind": "variable", "doc": "<p>Returns the number of atoms in the protein.</p>\n\n<p>Returns:\n    int: The number of atoms in the protein.</p>\n", "annotation": ": int"}, {"fullname": "protkit.structure.protein.Protein.num_heavy_atoms", "modulename": "protkit.structure.protein", "qualname": "Protein.num_heavy_atoms", "kind": "variable", "doc": "<p>Returns the number of heavy atoms in the protein.</p>\n\n<p>Returns:\n    int: The number of heavy atoms in the protein.</p>\n", "annotation": ": int"}, {"fullname": "protkit.structure.protein.Protein.num_hydrogen_atoms", "modulename": "protkit.structure.protein", "qualname": "Protein.num_hydrogen_atoms", "kind": "variable", "doc": "<p>Returns the number of hydrogen atoms in the protein.</p>\n\n<p>Returns:\n    int: The number of hydrogen atoms in the protein.</p>\n", "annotation": ": int"}, {"fullname": "protkit.structure.protein.Protein.num_disordered_atoms", "modulename": "protkit.structure.protein", "qualname": "Protein.num_disordered_atoms", "kind": "variable", "doc": "<p>Returns the number of disordered atoms in the protein.</p>\n\n<p>Returns:\n    int: The number of disordered atoms in the protein.</p>\n", "annotation": ": int"}, {"fullname": "protkit.structure.protein.Protein.num_hetero_atoms", "modulename": "protkit.structure.protein", "qualname": "Protein.num_hetero_atoms", "kind": "variable", "doc": "<p>Returns the number of hetero atoms in the protein.</p>\n\n<p>Returns:\n    int: The number of hetero atoms in the protein.</p>\n", "annotation": ": int"}, {"fullname": "protkit.structure.protein.Protein.get_atom", "modulename": "protkit.structure.protein", "qualname": "Protein.get_atom", "kind": "function", "doc": "<p>Returns an atom from the protein if it exists.</p>\n\n<p>Args:\n    chain_id (str): The ID of the chain.\n    residue_index (int): The index of the residue.\n    atom_name (str): The name of the atom.</p>\n\n<p>Returns:\n    Atom: The atom if it exists, otherwise None.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">chain_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">residue_index</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">atom_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">atom</span><span class=\"o\">.</span><span class=\"n\">Atom</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.protein.Protein.filter_atoms", "modulename": "protkit.structure.protein", "qualname": "Protein.filter_atoms", "kind": "function", "doc": "<p>Filters atoms in the protein based on the specified criteria.\nYielded atoms must match all criteria.</p>\n\n<p>Args:\n    chain_criteria (list of tuple): The criteria to filter the chains.\n    atom_criteria (list of tuple): The criteria to filter the atoms.\n    residue_criteria (list of tuple): The criteria to filter the residues.</p>\n\n<p>Yields:\n    Atom: The next atom in the protein that matches the criteria.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">chain_criteria</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">atom_criteria</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">residue_criteria</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Iterator</span><span class=\"p\">[</span><span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">atom</span><span class=\"o\">.</span><span class=\"n\">Atom</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.protein.Protein.missing_heavy_atom_types", "modulename": "protkit.structure.protein", "qualname": "Protein.missing_heavy_atom_types", "kind": "function", "doc": "<p>Returns a dictionary of missing heavy atom types in the protein.</p>\n\n<p>Returns:\n    dict of str, set of str: The missing heavy atom types in the protein.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Set</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.protein.Protein.extra_heavy_atom_types", "modulename": "protkit.structure.protein", "qualname": "Protein.extra_heavy_atom_types", "kind": "function", "doc": "<p>Returns a dictionary of extra heavy atom types in the protein.</p>\n\n<p>Returns:\n    dict of str, set of str: The extra heavy atom types in the protein.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Set</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.protein.Protein.missing_hydrogen_atom_types", "modulename": "protkit.structure.protein", "qualname": "Protein.missing_hydrogen_atom_types", "kind": "function", "doc": "<p>Returns a dictionary of missing hydrogen atom types in the protein.</p>\n\n<p>Returns:\n    dict of str, set of str: The missing hydrogen atom types in the protein.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Set</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.protein.Protein.extra_hydrogen_atom_types", "modulename": "protkit.structure.protein", "qualname": "Protein.extra_hydrogen_atom_types", "kind": "function", "doc": "<p>Returns a dictionary of extra hydrogen atom types in the protein.</p>\n\n<p>Returns:\n    dict of str, set of str: The extra hydrogen atom types in the protein.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Set</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.protein.Protein.fix_disordered_atoms", "modulename": "protkit.structure.protein", "qualname": "Protein.fix_disordered_atoms", "kind": "function", "doc": "<p>Fixes disordered atoms in the protein.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.protein.Protein.remove_atoms", "modulename": "protkit.structure.protein", "qualname": "Protein.remove_atoms", "kind": "function", "doc": "<p>Removes all atoms of the specified type from the protein.</p>\n\n<p>Args:\n    atom_types (list of str): The atom types to remove.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">atom_types</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.protein.Protein.remove_hydrogen_atoms", "modulename": "protkit.structure.protein", "qualname": "Protein.remove_hydrogen_atoms", "kind": "function", "doc": "<p>Removes all hydrogen atoms from the protein.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.protein.Protein.keep_atoms", "modulename": "protkit.structure.protein", "qualname": "Protein.keep_atoms", "kind": "function", "doc": "<p>Keeps only the specified atoms in the protein.</p>\n\n<p>Args:\n    atom_types (list of str): The atom types to keep.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">atom_types</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.protein.Protein.keep_backbone_atoms", "modulename": "protkit.structure.protein", "qualname": "Protein.keep_backbone_atoms", "kind": "function", "doc": "<p>Keeps only the backbone atoms in the protein.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.protein.Protein.has_attribute", "modulename": "protkit.structure.protein", "qualname": "Protein.has_attribute", "kind": "function", "doc": "<p>Checks if the protein has the specified attribute.</p>\n\n<p>Args:\n    key (str): The name of the attribute.</p>\n\n<p>Returns:\n    bool: True if the protein has the specified attribute.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.protein.Protein.get_attribute", "modulename": "protkit.structure.protein", "qualname": "Protein.get_attribute", "kind": "function", "doc": "<p>Returns the value of the specified attribute.</p>\n\n<p>Args:\n    key (str): The name of the attribute.</p>\n\n<p>Returns:\n    Any: The value of the specified attribute.</p>\n\n<p>Raises:\n    AttributeError: If the attribute does not exist.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.protein.Protein.set_attribute", "modulename": "protkit.structure.protein", "qualname": "Protein.set_attribute", "kind": "function", "doc": "<p>Sets the value of the specified attribute.</p>\n\n<p>Args:\n    key (str): The name of the attribute.\n    value (Any): The value of the attribute.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.protein.Protein.delete_attribute", "modulename": "protkit.structure.protein", "qualname": "Protein.delete_attribute", "kind": "function", "doc": "<p>Deletes the specified attribute.</p>\n\n<p>Args:\n    key (str): The name of the attribute.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.protein.Protein.sum_attribute", "modulename": "protkit.structure.protein", "qualname": "Protein.sum_attribute", "kind": "function", "doc": "<p>Sums the value of the specified attribute.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.protein.Protein.assign_list", "modulename": "protkit.structure.protein", "qualname": "Protein.assign_list", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">object_list</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">value_list</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.protein.Protein.summary", "modulename": "protkit.structure.protein", "qualname": "Protein.summary", "kind": "function", "doc": "<p>Returns a summary of the protein.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.residue", "modulename": "protkit.structure.residue", "kind": "module", "doc": "<p>Implements class <code>Residue</code> to represent a residue in a protein.</p>\n"}, {"fullname": "protkit.structure.residue.Residue", "modulename": "protkit.structure.residue", "qualname": "Residue", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "protkit.structure.residue.Residue.__init__", "modulename": "protkit.structure.residue", "qualname": "Residue.__init__", "kind": "function", "doc": "<p>Constructor for the Residue class.</p>\n\n<p>Args:\n    residue_type (str): The residue type.\n    sequence_no (Optional[int]): The residue's sequence number.\n    insertion_code (Optional[str]): The residue's insertion code.\n    chain (Optional[Chain]): The residue's chain.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">residue_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">sequence_no</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">insertion_code</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">chain</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">chain</span><span class=\"o\">.</span><span class=\"n\">Chain</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "protkit.structure.residue.Residue.HEAVY_ATOMS", "modulename": "protkit.structure.residue", "qualname": "Residue.HEAVY_ATOMS", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;ALA&#x27;: {&#x27;CA&#x27;, &#x27;N&#x27;, &#x27;CB&#x27;, &#x27;C&#x27;, &#x27;O&#x27;}, &#x27;ARG&#x27;: {&#x27;CA&#x27;, &#x27;NH2&#x27;, &#x27;NE&#x27;, &#x27;C&#x27;, &#x27;CG&#x27;, &#x27;O&#x27;, &#x27;N&#x27;, &#x27;CB&#x27;, &#x27;NH1&#x27;, &#x27;CD&#x27;, &#x27;CZ&#x27;}, &#x27;ASN&#x27;: {&#x27;CA&#x27;, &#x27;C&#x27;, &#x27;CG&#x27;, &#x27;O&#x27;, &#x27;ND2&#x27;, &#x27;N&#x27;, &#x27;CB&#x27;, &#x27;OD1&#x27;}, &#x27;ASP&#x27;: {&#x27;CA&#x27;, &#x27;C&#x27;, &#x27;CG&#x27;, &#x27;O&#x27;, &#x27;OD1&#x27;, &#x27;N&#x27;, &#x27;CB&#x27;, &#x27;OD2&#x27;}, &#x27;CYS&#x27;: {&#x27;CA&#x27;, &#x27;N&#x27;, &#x27;SG&#x27;, &#x27;CB&#x27;, &#x27;C&#x27;, &#x27;O&#x27;}, &#x27;GLU&#x27;: {&#x27;CA&#x27;, &#x27;C&#x27;, &#x27;OE2&#x27;, &#x27;CG&#x27;, &#x27;O&#x27;, &#x27;OE1&#x27;, &#x27;N&#x27;, &#x27;CB&#x27;, &#x27;CD&#x27;}, &#x27;GLN&#x27;: {&#x27;CA&#x27;, &#x27;NE2&#x27;, &#x27;C&#x27;, &#x27;CG&#x27;, &#x27;O&#x27;, &#x27;OE1&#x27;, &#x27;N&#x27;, &#x27;CB&#x27;, &#x27;CD&#x27;}, &#x27;GLY&#x27;: {&#x27;CA&#x27;, &#x27;N&#x27;, &#x27;O&#x27;, &#x27;C&#x27;}, &#x27;HIS&#x27;: {&#x27;CA&#x27;, &#x27;ND1&#x27;, &#x27;C&#x27;, &#x27;CE1&#x27;, &#x27;NE2&#x27;, &#x27;CD2&#x27;, &#x27;CG&#x27;, &#x27;O&#x27;, &#x27;N&#x27;, &#x27;CB&#x27;}, &#x27;ILE&#x27;: {&#x27;CA&#x27;, &#x27;CG1&#x27;, &#x27;C&#x27;, &#x27;O&#x27;, &#x27;CD1&#x27;, &#x27;N&#x27;, &#x27;CB&#x27;, &#x27;CG2&#x27;}, &#x27;LEU&#x27;: {&#x27;CA&#x27;, &#x27;C&#x27;, &#x27;CD2&#x27;, &#x27;CG&#x27;, &#x27;O&#x27;, &#x27;CD1&#x27;, &#x27;N&#x27;, &#x27;CB&#x27;}, &#x27;LYS&#x27;: {&#x27;CA&#x27;, &#x27;C&#x27;, &#x27;CE&#x27;, &#x27;CG&#x27;, &#x27;O&#x27;, &#x27;N&#x27;, &#x27;CB&#x27;, &#x27;CD&#x27;, &#x27;NZ&#x27;}, &#x27;MET&#x27;: {&#x27;CA&#x27;, &#x27;SD&#x27;, &#x27;C&#x27;, &#x27;CE&#x27;, &#x27;CG&#x27;, &#x27;O&#x27;, &#x27;N&#x27;, &#x27;CB&#x27;}, &#x27;PHE&#x27;: {&#x27;CA&#x27;, &#x27;C&#x27;, &#x27;CE1&#x27;, &#x27;CE2&#x27;, &#x27;CD2&#x27;, &#x27;CG&#x27;, &#x27;O&#x27;, &#x27;CD1&#x27;, &#x27;N&#x27;, &#x27;CB&#x27;, &#x27;CZ&#x27;}, &#x27;PRO&#x27;: {&#x27;CA&#x27;, &#x27;N&#x27;, &#x27;CB&#x27;, &#x27;C&#x27;, &#x27;CD&#x27;, &#x27;CG&#x27;, &#x27;O&#x27;}, &#x27;SER&#x27;: {&#x27;CA&#x27;, &#x27;N&#x27;, &#x27;CB&#x27;, &#x27;C&#x27;, &#x27;OG&#x27;, &#x27;O&#x27;}, &#x27;THR&#x27;: {&#x27;CA&#x27;, &#x27;N&#x27;, &#x27;CB&#x27;, &#x27;C&#x27;, &#x27;OG1&#x27;, &#x27;CG2&#x27;, &#x27;O&#x27;}, &#x27;TRP&#x27;: {&#x27;CZ2&#x27;, &#x27;CA&#x27;, &#x27;CH2&#x27;, &#x27;C&#x27;, &#x27;CE3&#x27;, &#x27;CE2&#x27;, &#x27;CD2&#x27;, &#x27;NE1&#x27;, &#x27;CG&#x27;, &#x27;O&#x27;, &#x27;CD1&#x27;, &#x27;N&#x27;, &#x27;CB&#x27;, &#x27;CZ3&#x27;}, &#x27;TYR&#x27;: {&#x27;CA&#x27;, &#x27;C&#x27;, &#x27;CE1&#x27;, &#x27;CE2&#x27;, &#x27;CD2&#x27;, &#x27;CG&#x27;, &#x27;O&#x27;, &#x27;OH&#x27;, &#x27;CD1&#x27;, &#x27;CB&#x27;, &#x27;N&#x27;, &#x27;CZ&#x27;}, &#x27;VAL&#x27;: {&#x27;CA&#x27;, &#x27;CG1&#x27;, &#x27;N&#x27;, &#x27;CB&#x27;, &#x27;C&#x27;, &#x27;CG2&#x27;, &#x27;O&#x27;}}"}, {"fullname": "protkit.structure.residue.Residue.HYDROGEN_ATOMS", "modulename": "protkit.structure.residue", "qualname": "Residue.HYDROGEN_ATOMS", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;ALA&#x27;: {&#x27;HA&#x27;, &#x27;H&#x27;, &#x27;HB1&#x27;, &#x27;HB3&#x27;, &#x27;HB2&#x27;}, &#x27;ARG&#x27;: {&#x27;HE&#x27;, &#x27;HA&#x27;, &#x27;HG2&#x27;, &#x27;HB3&#x27;, &#x27;HD3&#x27;, &#x27;HG3&#x27;, &#x27;HH12&#x27;, &#x27;HH11&#x27;, &#x27;H&#x27;, &#x27;HD2&#x27;, &#x27;HH21&#x27;, &#x27;HH22&#x27;, &#x27;HB2&#x27;}, &#x27;ASN&#x27;: {&#x27;HA&#x27;, &#x27;H&#x27;, &#x27;HD22&#x27;, &#x27;HB3&#x27;, &#x27;HD21&#x27;, &#x27;HB2&#x27;}, &#x27;ASP&#x27;: {&#x27;HA&#x27;, &#x27;HD2&#x27;, &#x27;H&#x27;, &#x27;HB3&#x27;, &#x27;HB2&#x27;}, &#x27;CYS&#x27;: {&#x27;HA&#x27;, &#x27;HG&#x27;, &#x27;H&#x27;, &#x27;HB3&#x27;, &#x27;HB2&#x27;}, &#x27;GLU&#x27;: {&#x27;HE2&#x27;, &#x27;HA&#x27;, &#x27;HG3&#x27;, &#x27;H&#x27;, &#x27;HG2&#x27;, &#x27;HB3&#x27;, &#x27;HB2&#x27;}, &#x27;GLN&#x27;: {&#x27;HB2&#x27;, &#x27;HE22&#x27;, &#x27;HG2&#x27;, &#x27;HE21&#x27;, &#x27;HB3&#x27;, &#x27;HG3&#x27;, &#x27;H&#x27;, &#x27;HA&#x27;}, &#x27;GLY&#x27;: {&#x27;HA3&#x27;, &#x27;HA2&#x27;, &#x27;H&#x27;, &#x27;HA&#x27;}, &#x27;HIS&#x27;: {&#x27;HE2&#x27;, &#x27;HB2&#x27;, &#x27;HB3&#x27;, &#x27;HE1&#x27;, &#x27;HD1&#x27;, &#x27;HD2&#x27;, &#x27;H&#x27;, &#x27;HA&#x27;}, &#x27;ILE&#x27;: {&#x27;HB&#x27;, &#x27;HG13&#x27;, &#x27;HD11&#x27;, &#x27;HG21&#x27;, &#x27;HG12&#x27;, &#x27;HD13&#x27;, &#x27;H&#x27;, &#x27;HG23&#x27;, &#x27;HD12&#x27;, &#x27;HG22&#x27;, &#x27;HA&#x27;}, &#x27;LEU&#x27;: {&#x27;HB2&#x27;, &#x27;HD22&#x27;, &#x27;HD11&#x27;, &#x27;HB3&#x27;, &#x27;HG&#x27;, &#x27;HD13&#x27;, &#x27;H&#x27;, &#x27;HD12&#x27;, &#x27;HD23&#x27;, &#x27;HD21&#x27;, &#x27;HA&#x27;}, &#x27;LYS&#x27;: {&#x27;HZ1&#x27;, &#x27;HA&#x27;, &#x27;HE2&#x27;, &#x27;HZ2&#x27;, &#x27;HZ3&#x27;, &#x27;HE3&#x27;, &#x27;HG2&#x27;, &#x27;HB3&#x27;, &#x27;HD3&#x27;, &#x27;HG3&#x27;, &#x27;H&#x27;, &#x27;HD2&#x27;, &#x27;HB2&#x27;}, &#x27;MET&#x27;: {&#x27;HE2&#x27;, &#x27;HB2&#x27;, &#x27;HE3&#x27;, &#x27;HG2&#x27;, &#x27;HB3&#x27;, &#x27;HG3&#x27;, &#x27;HE1&#x27;, &#x27;H&#x27;, &#x27;HA&#x27;}, &#x27;PHE&#x27;: {&#x27;HE2&#x27;, &#x27;HB2&#x27;, &#x27;HB3&#x27;, &#x27;HE1&#x27;, &#x27;HD1&#x27;, &#x27;H&#x27;, &#x27;HD2&#x27;, &#x27;HZ&#x27;, &#x27;HA&#x27;}, &#x27;PRO&#x27;: {&#x27;HA&#x27;, &#x27;HG2&#x27;, &#x27;HB3&#x27;, &#x27;HD3&#x27;, &#x27;HG3&#x27;, &#x27;H&#x27;, &#x27;HD2&#x27;, &#x27;HB2&#x27;}, &#x27;SER&#x27;: {&#x27;HA&#x27;, &#x27;HG&#x27;, &#x27;H&#x27;, &#x27;HB3&#x27;, &#x27;HB2&#x27;}, &#x27;THR&#x27;: {&#x27;HG21&#x27;, &#x27;H&#x27;, &#x27;HB&#x27;, &#x27;HG23&#x27;, &#x27;HG1&#x27;, &#x27;HG22&#x27;, &#x27;HA&#x27;}, &#x27;TRP&#x27;: {&#x27;HB2&#x27;, &#x27;HZ2&#x27;, &#x27;HZ3&#x27;, &#x27;HE3&#x27;, &#x27;HH2&#x27;, &#x27;HB3&#x27;, &#x27;HE1&#x27;, &#x27;HD1&#x27;, &#x27;H&#x27;, &#x27;HA&#x27;}, &#x27;TYR&#x27;: {&#x27;HE2&#x27;, &#x27;HB2&#x27;, &#x27;HH&#x27;, &#x27;HB3&#x27;, &#x27;HE1&#x27;, &#x27;HD1&#x27;, &#x27;HD2&#x27;, &#x27;H&#x27;, &#x27;HA&#x27;}, &#x27;VAL&#x27;: {&#x27;HB&#x27;, &#x27;HG13&#x27;, &#x27;HG21&#x27;, &#x27;HG12&#x27;, &#x27;HG11&#x27;, &#x27;H&#x27;, &#x27;HG23&#x27;, &#x27;HG22&#x27;, &#x27;HA&#x27;}}"}, {"fullname": "protkit.structure.residue.Residue.SHORT_CODE", "modulename": "protkit.structure.residue", "qualname": "Residue.SHORT_CODE", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;ALA&#x27;: &#x27;A&#x27;, &#x27;CYS&#x27;: &#x27;C&#x27;, &#x27;ASP&#x27;: &#x27;D&#x27;, &#x27;GLU&#x27;: &#x27;E&#x27;, &#x27;PHE&#x27;: &#x27;F&#x27;, &#x27;GLY&#x27;: &#x27;G&#x27;, &#x27;HIS&#x27;: &#x27;H&#x27;, &#x27;ILE&#x27;: &#x27;I&#x27;, &#x27;LYS&#x27;: &#x27;K&#x27;, &#x27;LEU&#x27;: &#x27;L&#x27;, &#x27;MET&#x27;: &#x27;M&#x27;, &#x27;ASN&#x27;: &#x27;N&#x27;, &#x27;PRO&#x27;: &#x27;P&#x27;, &#x27;GLN&#x27;: &#x27;Q&#x27;, &#x27;ARG&#x27;: &#x27;R&#x27;, &#x27;SER&#x27;: &#x27;S&#x27;, &#x27;THR&#x27;: &#x27;T&#x27;, &#x27;VAL&#x27;: &#x27;V&#x27;, &#x27;TRP&#x27;: &#x27;W&#x27;, &#x27;TYR&#x27;: &#x27;Y&#x27;}"}, {"fullname": "protkit.structure.residue.Residue.copy", "modulename": "protkit.structure.residue", "qualname": "Residue.copy", "kind": "function", "doc": "<p>Returns a deep copy of the residue, excluding the chain.</p>\n\n<p>Returns:\n    Residue: A deep copy of the residue, excluding the chain.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.residue.Residue.id", "modulename": "protkit.structure.residue", "qualname": "Residue.id", "kind": "variable", "doc": "<p>Returns the residue's ID, which is the chain ID + sequence number.</p>\n\n<p>Returns:\n    str: The residue's ID.</p>\n", "annotation": ": str"}, {"fullname": "protkit.structure.residue.Residue.residue_type", "modulename": "protkit.structure.residue", "qualname": "Residue.residue_type", "kind": "variable", "doc": "<p>Returns the residue type.</p>\n\n<p>Returns:\n    str: The residue type.</p>\n", "annotation": ": str"}, {"fullname": "protkit.structure.residue.Residue.residue_code", "modulename": "protkit.structure.residue", "qualname": "Residue.residue_code", "kind": "variable", "doc": "<p>Returns the residue's residue code.</p>\n\n<p>Returns:\n    str: The residue's residue code.</p>\n", "annotation": ": str"}, {"fullname": "protkit.structure.residue.Residue.sequence_code", "modulename": "protkit.structure.residue", "qualname": "Residue.sequence_code", "kind": "variable", "doc": "<p>Returns the residue's sequence code.</p>\n\n<p>Returns:\n    str: The residue's sequence code.</p>\n", "annotation": ": str"}, {"fullname": "protkit.structure.residue.Residue.sequence_no", "modulename": "protkit.structure.residue", "qualname": "Residue.sequence_no", "kind": "variable", "doc": "<p>Returns the residue's sequence number.</p>\n\n<p>Returns:\n    int: The residue's sequence number.</p>\n", "annotation": ": int"}, {"fullname": "protkit.structure.residue.Residue.insertion_code", "modulename": "protkit.structure.residue", "qualname": "Residue.insertion_code", "kind": "variable", "doc": "<p>Returns the residue's insertion code.</p>\n\n<p>Returns:\n    str: The residue's insertion code.</p>\n", "annotation": ": str"}, {"fullname": "protkit.structure.residue.Residue.is_disordered", "modulename": "protkit.structure.residue", "qualname": "Residue.is_disordered", "kind": "variable", "doc": "<p>Returns True if the residue is a disordered residue.</p>\n\n<p>Returns:\n    bool: True if the residue is a disordered residue.</p>\n", "annotation": ": bool"}, {"fullname": "protkit.structure.residue.Residue.is_hetero", "modulename": "protkit.structure.residue", "qualname": "Residue.is_hetero", "kind": "variable", "doc": "<p>Returns True if the residue is a hetero residue.</p>\n\n<p>Returns:\n    bool: True if the residue is a hetero residue.</p>\n", "annotation": ": bool"}, {"fullname": "protkit.structure.residue.Residue.short_code", "modulename": "protkit.structure.residue", "qualname": "Residue.short_code", "kind": "variable", "doc": "<p>Returns the residue's short code.</p>\n\n<p>Returns:\n    str: The residue's short code.</p>\n\n<p>Raises:\n    Exception: If the residue type is not found in Residue.SHORT_CODE.</p>\n", "annotation": ": str"}, {"fullname": "protkit.structure.residue.Residue.chain", "modulename": "protkit.structure.residue", "qualname": "Residue.chain", "kind": "variable", "doc": "<p>Returns the residue's chain.</p>\n\n<p>Returns:\n    Chain: The residue's chain.</p>\n", "annotation": ": protkit.structure.chain.Chain"}, {"fullname": "protkit.structure.residue.Residue.chain_id", "modulename": "protkit.structure.residue", "qualname": "Residue.chain_id", "kind": "variable", "doc": "<p>Returns the chain ID.</p>\n\n<p>Returns:\n    str: The chain ID.</p>\n", "annotation": ": str"}, {"fullname": "protkit.structure.residue.Residue.protein", "modulename": "protkit.structure.residue", "qualname": "Residue.protein", "kind": "variable", "doc": "<p>Returns the protein.</p>\n\n<p>Returns:\n    Protein: The protein.</p>\n", "annotation": ": protkit.structure.protein.Protein"}, {"fullname": "protkit.structure.residue.Residue.pdb_id", "modulename": "protkit.structure.residue", "qualname": "Residue.pdb_id", "kind": "variable", "doc": "<p>Returns the PDB ID.</p>\n\n<p>Returns:\n    str: The PDB ID.</p>\n", "annotation": ": Optional[str]"}, {"fullname": "protkit.structure.residue.Residue.add_atom", "modulename": "protkit.structure.residue", "qualname": "Residue.add_atom", "kind": "function", "doc": "<p>Adds an atom to the residue.</p>\n\n<p>Args:\n    atom_id (str): The atom's ID.\n    atom (Atom): The atom.</p>\n\n<p>Returns:\n    Atom: The atom.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">atom_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">atom</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">atom</span><span class=\"o\">.</span><span class=\"n\">Atom</span></span><span class=\"return-annotation\">) -> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">atom</span><span class=\"o\">.</span><span class=\"n\">Atom</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.residue.Residue.atoms", "modulename": "protkit.structure.residue", "qualname": "Residue.atoms", "kind": "variable", "doc": "<p>Returns an iterator of the residue's atoms.</p>\n\n<p>Yields:\n    Atom: The next atom in the residue.</p>\n", "annotation": ": Iterator[protkit.structure.atom.Atom]"}, {"fullname": "protkit.structure.residue.Residue.num_atoms", "modulename": "protkit.structure.residue", "qualname": "Residue.num_atoms", "kind": "variable", "doc": "<p>Returns the number of atoms in the residue.</p>\n\n<p>Returns:\n    int: The number of atoms in the residue.</p>\n", "annotation": ": int"}, {"fullname": "protkit.structure.residue.Residue.num_heavy_atoms", "modulename": "protkit.structure.residue", "qualname": "Residue.num_heavy_atoms", "kind": "variable", "doc": "<p>Returns the number of heavy atoms in the residue.</p>\n\n<p>Returns:\n    int: The number of heavy atoms in the residue.</p>\n", "annotation": ": int"}, {"fullname": "protkit.structure.residue.Residue.num_hydrogen_atoms", "modulename": "protkit.structure.residue", "qualname": "Residue.num_hydrogen_atoms", "kind": "variable", "doc": "<p>Returns the number of hydrogen atoms in the residue.</p>\n\n<p>Returns:\n    int: The number of hydrogen atoms in the residue.</p>\n", "annotation": ": int"}, {"fullname": "protkit.structure.residue.Residue.num_disordered_atoms", "modulename": "protkit.structure.residue", "qualname": "Residue.num_disordered_atoms", "kind": "variable", "doc": "<p>Returns the number of disordered atoms in the residue.</p>\n\n<p>Returns:\n    int: The number of disordered atoms in the residue.</p>\n", "annotation": ": int"}, {"fullname": "protkit.structure.residue.Residue.num_hetero_atoms", "modulename": "protkit.structure.residue", "qualname": "Residue.num_hetero_atoms", "kind": "variable", "doc": "<p>Returns the number of hetero atoms in the residue.</p>\n\n<p>Returns:\n    int: The number of hetero atoms in the residue.</p>\n", "annotation": ": int"}, {"fullname": "protkit.structure.residue.Residue.get_atom", "modulename": "protkit.structure.residue", "qualname": "Residue.get_atom", "kind": "function", "doc": "<p>Returns the atom with the specified atom type.</p>\n\n<p>Args:\n    atom_type (str): The atom type.</p>\n\n<p>Returns:\n    Atom: The atom with the specified atom type.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">atom_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">atom</span><span class=\"o\">.</span><span class=\"n\">Atom</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.residue.Residue.filter_atoms", "modulename": "protkit.structure.residue", "qualname": "Residue.filter_atoms", "kind": "function", "doc": "<p>Returns an iterator of atoms that match the specified criteria.</p>\n\n<p>Args:\n    atom_criteria (Optional[List]): The criteria for selecting atoms.</p>\n\n<p>Yields:\n    Atom: The next atom that matches the criteria.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">atom_criteria</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Iterator</span><span class=\"p\">[</span><span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">atom</span><span class=\"o\">.</span><span class=\"n\">Atom</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.residue.Residue.heavy_atom_types", "modulename": "protkit.structure.residue", "qualname": "Residue.heavy_atom_types", "kind": "function", "doc": "<p>Returns a set of heavy atom types.</p>\n\n<p>Returns:\n    Set[str]: A set of heavy atom types.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Set</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.residue.Residue.missing_heavy_atom_types", "modulename": "protkit.structure.residue", "qualname": "Residue.missing_heavy_atom_types", "kind": "function", "doc": "<p>Returns a set of missing heavy atom types.</p>\n\n<p>Returns:\n    Set[str]: A set of missing heavy atom types.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Set</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.residue.Residue.extra_heavy_atom_types", "modulename": "protkit.structure.residue", "qualname": "Residue.extra_heavy_atom_types", "kind": "function", "doc": "<p>Returns a set of extra heavy atom types.</p>\n\n<p>Returns:\n    Set[str]: A set of extra heavy atom types.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Set</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.residue.Residue.hydrogen_atom_types", "modulename": "protkit.structure.residue", "qualname": "Residue.hydrogen_atom_types", "kind": "function", "doc": "<p>Returns a set of hydrogen atom types.</p>\n\n<p>Returns:\n    Set[str]: A set of hydrogen atom types.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Set</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.residue.Residue.missing_hydrogen_atom_types", "modulename": "protkit.structure.residue", "qualname": "Residue.missing_hydrogen_atom_types", "kind": "function", "doc": "<p>Returns a set of missing hydrogen atom types.</p>\n\n<p>Returns:\n    Set[str]: A set of missing hydrogen atom types.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Set</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.residue.Residue.extra_hydrogen_atom_types", "modulename": "protkit.structure.residue", "qualname": "Residue.extra_hydrogen_atom_types", "kind": "function", "doc": "<p>Returns a set of extra hydrogen atom types.</p>\n\n<p>Returns:\n    Set[str]: A set of extra hydrogen atom types.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Set</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.residue.Residue.fix_disordered_atoms", "modulename": "protkit.structure.residue", "qualname": "Residue.fix_disordered_atoms", "kind": "function", "doc": "<p>Fixes disordered atoms by keeping the atom with the\nhighest occupancy.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.residue.Residue.remove_atoms", "modulename": "protkit.structure.residue", "qualname": "Residue.remove_atoms", "kind": "function", "doc": "<p>Removes the specified atoms from the residue.</p>\n\n<p>Args:\n    atom_types (List[str]): The atom types to remove.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">atom_types</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.residue.Residue.remove_hydrogen_atoms", "modulename": "protkit.structure.residue", "qualname": "Residue.remove_hydrogen_atoms", "kind": "function", "doc": "<p>Removes hydrogen atoms from the residue.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.residue.Residue.keep_atoms", "modulename": "protkit.structure.residue", "qualname": "Residue.keep_atoms", "kind": "function", "doc": "<p>Removes all atoms except the specified atoms from the residue.</p>\n\n<p>Args:\n    atom_types (List[str]): The atom types to keep.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">atom_types</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.residue.Residue.keep_backbone_atoms", "modulename": "protkit.structure.residue", "qualname": "Residue.keep_backbone_atoms", "kind": "function", "doc": "<p>Removes all atoms except the backbone atoms from the residue.\nThe backbone atoms are N, CA, C, and O.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.residue.Residue.has_attribute", "modulename": "protkit.structure.residue", "qualname": "Residue.has_attribute", "kind": "function", "doc": "<p>Returns True if the residue has the specified attribute.</p>\n\n<p>Args:\n    key (str): The name of the attribute.</p>\n\n<p>Returns:\n    bool: True if the residue has the specified attribute.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.residue.Residue.get_attribute", "modulename": "protkit.structure.residue", "qualname": "Residue.get_attribute", "kind": "function", "doc": "<p>Returns the value of the specified attribute.</p>\n\n<p>Args:\n    key (str): The name of the attribute.</p>\n\n<p>Returns:\n    Any: The value of the specified attribute.</p>\n\n<p>Raises:\n    AttributeError: If the attribute does not exist.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.residue.Residue.set_attribute", "modulename": "protkit.structure.residue", "qualname": "Residue.set_attribute", "kind": "function", "doc": "<p>Sets the value of the specified attribute.</p>\n\n<p>Args:\n    key (str): The name of the attribute.\n    value (Any): The value of the attribute.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.residue.Residue.delete_attribute", "modulename": "protkit.structure.residue", "qualname": "Residue.delete_attribute", "kind": "function", "doc": "<p>Deletes the specified attribute.</p>\n\n<p>Args:\n    key (str): The name of the attribute.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.structure.residue.Residue.sum_attribute", "modulename": "protkit.structure.residue", "qualname": "Residue.sum_attribute", "kind": "function", "doc": "<p>Sums the values of the specified attribute.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.tasks", "modulename": "protkit.tasks", "kind": "module", "doc": "<p><code>tasks</code> is a package for defining the abstract base classes for tasks.</p>\n"}, {"fullname": "protkit.tasks.protonator", "modulename": "protkit.tasks.protonator", "kind": "module", "doc": "<p>Implements class <code>Protonator</code>.  The Protonator class serves as a template\nfor classes that are responsible for adding hydrogen atoms to proteins in\norder to simulate the effects of protonation at specific pH levels.</p>\n"}, {"fullname": "protkit.tasks.protonator.Protonator", "modulename": "protkit.tasks.protonator", "qualname": "Protonator", "kind": "class", "doc": "<p>Abstract base class for protonating proteins.</p>\n\n<p>The Protonator class serves as a template for classes that are responsible\nfor adding hydrogen atoms to proteins in order to simulate the effects of\nprotonation at specific pH levels.</p>\n", "bases": "abc.ABC"}, {"fullname": "protkit.tasks.protonator.Protonator.__init__", "modulename": "protkit.tasks.protonator", "qualname": "Protonator.__init__", "kind": "function", "doc": "<p>Constructs all the necessary attributes for the Protonator object.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, {"fullname": "protkit.tasks.protonator.Protonator.protonate", "modulename": "protkit.tasks.protonator", "qualname": "Protonator.protonate", "kind": "function", "doc": "<p>Abstract method for protonating a protein.</p>\n\n<p>This method should be implemented by subclasses to add hydrogens to the\namino acid residues of a protein structure, typically according to a\nspecified pH level.</p>\n\n<p>Parameters:\nprotein (Protein): The protein to be protonated.</p>\n\n<p>Returns:\nProtein: The protonated protein.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">protein</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span></span><span class=\"return-annotation\">) -> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.tasks.surface_area_calculator", "modulename": "protkit.tasks.surface_area_calculator", "kind": "module", "doc": "<p>Implements class <code>SurfaceAreaCalculator</code> to specify the interface for classes\nthat calculate the accessible surface area (ASA) of proteins.</p>\n"}, {"fullname": "protkit.tasks.surface_area_calculator.SurfaceAreaCalculator", "modulename": "protkit.tasks.surface_area_calculator", "qualname": "SurfaceAreaCalculator", "kind": "class", "doc": "<p>Abstract base class for calculating molecular surface properties.</p>\n\n<p>This class defines the interface for calculating the accessible surface area (ASA)\nof proteins, which is essential for understanding protein interactions and properties.</p>\n", "bases": "abc.ABC"}, {"fullname": "protkit.tasks.surface_area_calculator.SurfaceAreaCalculator.calculate_surface_area", "modulename": "protkit.tasks.surface_area_calculator", "qualname": "SurfaceAreaCalculator.calculate_surface_area", "kind": "function", "doc": "<p>Calculate and update the accessible surface area of a protein.</p>\n\n<p>Args:\n    atoms (List[Atom]): A list of Atom objects whose surface area needs to be calculated.</p>\n\n<p>Returns:\n    List[float]: A list of surface areas for each atom in the input list.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">atoms</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">atom</span><span class=\"o\">.</span><span class=\"n\">Atom</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.tasks.surface_area_calculator.SurfaceAreaCalculator.calculate_surface_area_for_protein", "modulename": "protkit.tasks.surface_area_calculator", "qualname": "SurfaceAreaCalculator.calculate_surface_area_for_protein", "kind": "function", "doc": "<p>Calculate and update the accessible surface area of a protein.</p>\n\n<p>Args:\n    protein (Protein): A Protein object whose surface area needs to be calculated.</p>\n\n<p>Returns:\n    Protein: An updated Protein object with new surface area properties.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">protein</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.tools", "modulename": "protkit.tools", "kind": "module", "doc": "<p><code>tools</code> is a package that contains classes that perform specific tasks on proteins.\nThese include tasks such as docking, folding, affinity prediction, and more.</p>\n"}, {"fullname": "protkit.tools.freesasa_adaptor", "modulename": "protkit.tools.freesasa_adaptor", "kind": "module", "doc": "<p>Implements class <code>FreeSASAAdaptor</code> to calculate the accessible surface area (ASA)\nof proteins using the FreeSASA library.</p>\n"}, {"fullname": "protkit.tools.freesasa_adaptor.FreeSASAAdaptor", "modulename": "protkit.tools.freesasa_adaptor", "qualname": "FreeSASAAdaptor", "kind": "class", "doc": "<p>Adapter class for the FreeSASA tool.</p>\n\n<p>This class provides concrete implementations of surface area calculations\nby interfacing with the FreeSASA library and updating Protein objects with\nthe calculated surface properties.</p>\n", "bases": "protkit.tasks.surface_area_calculator.SurfaceAreaCalculator"}, {"fullname": "protkit.tools.freesasa_adaptor.FreeSASAAdaptor.__init__", "modulename": "protkit.tools.freesasa_adaptor", "qualname": "FreeSASAAdaptor.__init__", "kind": "function", "doc": "<p>Initialize the FreeSASA adaptor with the desired settings.</p>\n\n<p>Args:\n    algorithm (str): The algorithm to use for surface area calculations.\n        Options: LEE_RICHARDS, SHRAKE_RUPLEY\n    probe_radius (float): The radius of the probe to use for surface area calculations.\n    n_points (int): The number of points to use for the surface area calculations.\n    n_slices (int): The number of slices to use for the surface area calculations.\n    n_threads (int): The number of threads to use for the surface area calculations.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">algorithm</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;LeeRichards&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">probe_radius</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1.4</span>,</span><span class=\"param\">\t<span class=\"n\">n_points</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">n_slices</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">20</span>,</span><span class=\"param\">\t<span class=\"n\">n_threads</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span></span>)</span>"}, {"fullname": "protkit.tools.freesasa_adaptor.FreeSASAAdaptor.LEE_RICHARDS", "modulename": "protkit.tools.freesasa_adaptor", "qualname": "FreeSASAAdaptor.LEE_RICHARDS", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;LeeRichards&#x27;"}, {"fullname": "protkit.tools.freesasa_adaptor.FreeSASAAdaptor.SHRAKE_RUPLEY", "modulename": "protkit.tools.freesasa_adaptor", "qualname": "FreeSASAAdaptor.SHRAKE_RUPLEY", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;ShrakeRupley&#x27;"}, {"fullname": "protkit.tools.freesasa_adaptor.FreeSASAAdaptor.DEFAULT_PROBE_RADIUS", "modulename": "protkit.tools.freesasa_adaptor", "qualname": "FreeSASAAdaptor.DEFAULT_PROBE_RADIUS", "kind": "variable", "doc": "<p></p>\n", "default_value": "1.4"}, {"fullname": "protkit.tools.freesasa_adaptor.FreeSASAAdaptor.DEFAULT_LEE_RICHARDS_SLICES", "modulename": "protkit.tools.freesasa_adaptor", "qualname": "FreeSASAAdaptor.DEFAULT_LEE_RICHARDS_SLICES", "kind": "variable", "doc": "<p></p>\n", "default_value": "20"}, {"fullname": "protkit.tools.freesasa_adaptor.FreeSASAAdaptor.DEFAULT_SHRAKE_RUPLEY_POINTS", "modulename": "protkit.tools.freesasa_adaptor", "qualname": "FreeSASAAdaptor.DEFAULT_SHRAKE_RUPLEY_POINTS", "kind": "variable", "doc": "<p></p>\n", "default_value": "100"}, {"fullname": "protkit.tools.freesasa_adaptor.FreeSASAAdaptor.DEFAULT_N_THREADS", "modulename": "protkit.tools.freesasa_adaptor", "qualname": "FreeSASAAdaptor.DEFAULT_N_THREADS", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, {"fullname": "protkit.tools.freesasa_adaptor.FreeSASAAdaptor.calculate_surface_area", "modulename": "protkit.tools.freesasa_adaptor", "qualname": "FreeSASAAdaptor.calculate_surface_area", "kind": "function", "doc": "<p>Calculate the accessible surface area of a protein using FreeSASA.</p>\n\n<p>Args:\n    atoms (List[Atom]): A list of Atom objects whose surface area needs to be calculated.</p>\n\n<p>Returns:\n    List[float]: A list of surface areas for each atom in the input list.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">atoms</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">atom</span><span class=\"o\">.</span><span class=\"n\">Atom</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.tools.pdb2pqr_adaptor", "modulename": "protkit.tools.pdb2pqr_adaptor", "kind": "module", "doc": "<p>Implements class <code>PDB2PQRAdaptor</code>. The PDB2PQRAdaptor class provides an interface\nto the pdb2pqr software, which is used to convert PDB files to PQR files.</p>\n\n<p>The pdb2pqr software is a widely used tool for adding charges and radii to protein\nstructures. It is used to prepare protein structures for molecular dynamics\nsimulations, docking studies, and other computational analyses.  pdb2pqr can add a\nlimited number of missing heavy atoms to structures, as well as\nhydrogen atoms. It may change the coordinates of some atoms in the structure.</p>\n\n<p>To use the PDB2PQRAdaptor class, you need to have the pdb2pqr software installed.\nThe pdb2pqr software is automatically installed as a PyPi package when you install\nProtkit.</p>\n\n<p>PDB2PQR was developed by the Baker Lab at the University of Washington. If you use\npdb2pqr in your research, please cite the following papers:</p>\n\n<p>Dolinsky, T. J., Nielsen, J. E., McCammon, J. A., &amp; Baker, N. A. (2004).\nPDB2PQR: an automated pipeline for the setup of Poisson-Boltzmann electrostatics\ncalculations. Nucleic Acids Research, 32, W665-W667.\n<a href=\"https://doi.org/10.1093/nar/gkh381\">https://doi.org/10.1093/nar/gkh381</a></p>\n\n<p>Dolinsky, T. J., Czodrowski, P., Li, H., Nielsen, J. E., Jensen, J. H., Klebe, G., &amp; Baker, N. A. (2007).\nPDB2PQR: expanding and upgrading automated preparation of biomolecular structures for molecular simulations.\nNucleic Acids Research, 35, W522-W525.\n<a href=\"https://doi.org/10.1093/nar/gkm276\">https://doi.org/10.1093/nar/gkm276</a></p>\n\n<p>Unni, S., Huang, Y., Hanson, R. M., Tobias, M., Krishnan, S., Li, W. W., Nielsen, J. E., &amp; Baker, N. A. (2011).\nWeb servers and services for electrostatics calculations with APBS and PDB2PQR.\nJournal of Computational Chemistry, 32(7), 1488-1491.\n<a href=\"https://doi.org/10.1002/jcc.21720\">https://doi.org/10.1002/jcc.21720</a></p>\n\n<p>Jurrus, E., Engel, D., Star, K., Monson, K., Brandi, J., Felberg, L. E., Brookes, D. H., Wilson, L., Chen, J., Liles, K., Chun, M., Li, P., Gohara, D. W., Dolinsky, T., Konecny, R., Koes, D. R., Nielsen, J. E., Head-Gordon, T., Geng, W., Krasny, R., Wei, G. W., Holst, M. J., McCammon, J. A., &amp; Baker, N. A. (2018).\nImprovements to the APBS biomolecular solvation software suite.\nProtein Science, 27(1), 112-128.\n<a href=\"https://doi.org/10.1002/pro.3280\">https://doi.org/10.1002/pro.3280</a></p>\n"}, {"fullname": "protkit.tools.pdb2pqr_adaptor.PDB2PQRAdaptorError", "modulename": "protkit.tools.pdb2pqr_adaptor", "qualname": "PDB2PQRAdaptorError", "kind": "class", "doc": "<p>Common base class for all non-exit exceptions.</p>\n", "bases": "builtins.Exception"}, {"fullname": "protkit.tools.pdb2pqr_adaptor.PDB2PQRAdaptor", "modulename": "protkit.tools.pdb2pqr_adaptor", "qualname": "PDB2PQRAdaptor", "kind": "class", "doc": "<p>Adapter class for the pdb2pqr software.</p>\n"}, {"fullname": "protkit.tools.pdb2pqr_adaptor.PDB2PQRAdaptor.__init__", "modulename": "protkit.tools.pdb2pqr_adaptor", "qualname": "PDB2PQRAdaptor.__init__", "kind": "function", "doc": "<p>Initialize the PDB2PQR adaptor.</p>\n\n<p>Args:\n    pdb2pqr_bin_path (str): The path to the pdb2pqr binary.  If\n        None, the adaptor will use the pdb2pqr binary in the PATH.\n    force_field (str): The force field to use for the PQR file.\n        Options: AMBER, CHARMM, PARSE, TYL06, PEOEPB, SWANSON</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pdb2pqr_bin_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">force_field</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;PARSE&#39;</span></span>)</span>"}, {"fullname": "protkit.tools.pdb2pqr_adaptor.PDB2PQRAdaptor.AMBER", "modulename": "protkit.tools.pdb2pqr_adaptor", "qualname": "PDB2PQRAdaptor.AMBER", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;AMBER&#x27;"}, {"fullname": "protkit.tools.pdb2pqr_adaptor.PDB2PQRAdaptor.CHARMM", "modulename": "protkit.tools.pdb2pqr_adaptor", "qualname": "PDB2PQRAdaptor.CHARMM", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;CHARMM&#x27;"}, {"fullname": "protkit.tools.pdb2pqr_adaptor.PDB2PQRAdaptor.PARSE", "modulename": "protkit.tools.pdb2pqr_adaptor", "qualname": "PDB2PQRAdaptor.PARSE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;PARSE&#x27;"}, {"fullname": "protkit.tools.pdb2pqr_adaptor.PDB2PQRAdaptor.TYL06", "modulename": "protkit.tools.pdb2pqr_adaptor", "qualname": "PDB2PQRAdaptor.TYL06", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;TYL06&#x27;"}, {"fullname": "protkit.tools.pdb2pqr_adaptor.PDB2PQRAdaptor.PEOEPB", "modulename": "protkit.tools.pdb2pqr_adaptor", "qualname": "PDB2PQRAdaptor.PEOEPB", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;PEOEPB&#x27;"}, {"fullname": "protkit.tools.pdb2pqr_adaptor.PDB2PQRAdaptor.SWANSON", "modulename": "protkit.tools.pdb2pqr_adaptor", "qualname": "PDB2PQRAdaptor.SWANSON", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;SWANSON&#x27;"}, {"fullname": "protkit.tools.pdb2pqr_adaptor.PDB2PQRAdaptor.run", "modulename": "protkit.tools.pdb2pqr_adaptor", "qualname": "PDB2PQRAdaptor.run", "kind": "function", "doc": "<p>Run pdb2pqr on the specified PDB file.</p>\n\n<p>Args:\n    protein (Protein): The protein to be converted to a PQR file.\n    output_pqr_file_path (str): If set, the PQR file will be written to this file.\n    output_pdb_file_path (str): If set, the PDB file that is used as input\n        to pdb2pqr will be written to this file.</p>\n\n<p>Returns:\n    Protein: The protein with the PQR file information.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">protein</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span>,</span><span class=\"param\">\t<span class=\"n\">output_pqr_file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">output_pdb_file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.tools.propka_adaptor", "modulename": "protkit.tools.propka_adaptor", "kind": "module", "doc": "<p>Implements class <code>PropkaAdaptor</code>. The PropkaAdaptor class provides an interface\nto the propka software, which is used to calculate pKa values of ionizable\nresidues and protein-ligand complexes based on the 3D structure.</p>\n\n<p>To use the PropkaAdaptor class, you need to have the propka software installed.\nThe propka software is automatically installed as a PyPi package when you install\nProtkit.</p>\n\n<p>The propka software was developed by the Jensen Lab at the University of Copenhagen.</p>\n\n<p>The source code is available at:\n<a href=\"https://github.com/jensengroup/propka\">https://github.com/jensengroup/propka</a></p>\n\n<p>Documentation is available at:\n<a href=\"https://propka.readthedocs.io/en/latest/\">https://propka.readthedocs.io/en/latest/</a></p>\n\n<p>If you use propka in your research, please cite the following papers:</p>\n\n<p>Olsson, M. H. M., S\u00f8ndergaard, C. R., Rostkowski, M., &amp; Jensen, J. H. (2011).\nPROPKA3: Consistent Treatment of Internal and Surface Residues in Empirical pKa Predictions.\nJournal of Chemical Theory and Computation, 7(2), 525-537.\n<a href=\"https://doi.org/10.1021/ct100578z\">https://doi.org/10.1021/ct100578z</a></p>\n\n<p>S\u00f8ndergaard, C. R., Olsson, M. H. M., Rostkowski, M., &amp; Jensen, J. H. (2011).\nImproved Treatment of Ligands and Coupling Effects in Empirical Calculation and Rationalization of pKa Values.\nJournal of Chemical Theory and Computation, 7(7), 2284-2295.\n<a href=\"https://doi.org/10.1021/ct200133y\">https://doi.org/10.1021/ct200133y</a></p>\n"}, {"fullname": "protkit.tools.propka_adaptor.PropkaAdaptorError", "modulename": "protkit.tools.propka_adaptor", "qualname": "PropkaAdaptorError", "kind": "class", "doc": "<p>Common base class for all non-exit exceptions.</p>\n", "bases": "builtins.Exception"}, {"fullname": "protkit.tools.propka_adaptor.PropkaAdaptor", "modulename": "protkit.tools.propka_adaptor", "qualname": "PropkaAdaptor", "kind": "class", "doc": "<p>Adapter class for the propka software.</p>\n"}, {"fullname": "protkit.tools.propka_adaptor.PropkaAdaptor.__init__", "modulename": "protkit.tools.propka_adaptor", "qualname": "PropkaAdaptor.__init__", "kind": "function", "doc": "<p>Constructs all the necessary attributes for the PropkaAdaptor object.</p>\n\n<p>Args:\n    ph (float): The pH value.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ph</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">7.0</span></span>)</span>"}, {"fullname": "protkit.tools.propka_adaptor.PropkaAdaptor.ph", "modulename": "protkit.tools.propka_adaptor", "qualname": "PropkaAdaptor.ph", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "protkit.tools.propka_adaptor.PropkaAdaptor.calculate_pka", "modulename": "protkit.tools.propka_adaptor", "qualname": "PropkaAdaptor.calculate_pka", "kind": "function", "doc": "<p>Calculates the pKa values of ionizable residues in a protein structure.</p>\n\n<p>Args:\n    protein (Protein): The protein.\n    output_pdb_file_path (str): Optional. The path to the output PDB file.</p>\n\n<p>Returns:\n    Protein: The protein with pKa values.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">protein</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span>,</span><span class=\"param\">\t<span class=\"n\">output_pdb_file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.tools.reduce_adaptor", "modulename": "protkit.tools.reduce_adaptor", "kind": "module", "doc": "<p>Implements class ReduceAdaptor. The ReduceAdaptor class provides an interface\nto the Reduce software, which is used to add hydrogens to protein structures.</p>\n\n<p>The Reduce software is a widely used tool for adding hydrogen atoms to protein\nstructures. It is used to prepare protein structures for molecular dynamics\nsimulations, docking studies, and other computational analyses.</p>\n\n<p>To use the ReduceAdaptor class, you need to have the Reduce software installed.\nYou can download Reduce from the following website:\n<a href=\"https://github.com/rlabduke/reduce\">https://github.com/rlabduke/reduce</a></p>\n\n<p>Reduce was developed by the Richardson Lab at Duke University. If you use\nReduce in your research, please cite the following paper:</p>\n\n<p>Word, J. M., Lovell, S. C., Richardson, J. S., &amp; Richardson, D. C. (1999).\nAsparagine and glutamine: using hydrogen atom contacts in the choice of side-chain\namide orientation. Journal of Molecular Biology, 285(4), 1735-1747.\n<a href=\"https://doi.org/10.1006/jmbi.1998.2401\">https://doi.org/10.1006/jmbi.1998.2401</a></p>\n"}, {"fullname": "protkit.tools.reduce_adaptor.ReduceProtonationError", "modulename": "protkit.tools.reduce_adaptor", "qualname": "ReduceProtonationError", "kind": "class", "doc": "<p>Common base class for all non-exit exceptions.</p>\n", "bases": "builtins.Exception"}, {"fullname": "protkit.tools.reduce_adaptor.ReduceDeprotonationError", "modulename": "protkit.tools.reduce_adaptor", "qualname": "ReduceDeprotonationError", "kind": "class", "doc": "<p>Common base class for all non-exit exceptions.</p>\n", "bases": "builtins.Exception"}, {"fullname": "protkit.tools.reduce_adaptor.ReduceAdaptor", "modulename": "protkit.tools.reduce_adaptor", "qualname": "ReduceAdaptor", "kind": "class", "doc": "<p>Adapter class for the Reduce software.</p>\n\n<p>This class provides a concrete implementation of the Protonator class,\nby interfacing with the Reduce software and updating Protein objects\nwith the protonated structure.</p>\n", "bases": "protkit.tasks.protonator.Protonator"}, {"fullname": "protkit.tools.reduce_adaptor.ReduceAdaptor.__init__", "modulename": "protkit.tools.reduce_adaptor", "qualname": "ReduceAdaptor.__init__", "kind": "function", "doc": "<p>Initialize the Reduce adaptor.</p>\n\n<p>Args:\n    reduce_bin_path (str): The path to the Reduce binary.\n    quiet (bool): Whether to suppress Reduce output.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">reduce_bin_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">quiet</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, {"fullname": "protkit.tools.reduce_adaptor.ReduceAdaptor.merge_copy", "modulename": "protkit.tools.reduce_adaptor", "qualname": "ReduceAdaptor.merge_copy", "kind": "function", "doc": "<p>Merge the updated protein into the source protein. The source protein\nis copied before the merge operation.</p>\n\n<p>Args:\n    source_protein (Protein): The source protein.\n    updated_protein (Protein): The updated protein.</p>\n\n<p>Returns:\n    Protein: The merged protein.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">source_protein</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span>,</span><span class=\"param\">\t<span class=\"n\">updated_protein</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span></span><span class=\"return-annotation\">) -> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.tools.reduce_adaptor.ReduceAdaptor.merge_into", "modulename": "protkit.tools.reduce_adaptor", "qualname": "ReduceAdaptor.merge_into", "kind": "function", "doc": "<p>Merge the updated protein into the source protein. The source\nprotein is updated in place.</p>\n\n<p>Args:\n    source_protein (Protein): The source protein.\n    updated_protein (Protein): The updated protein.</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">source_protein</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span>,</span><span class=\"param\">\t<span class=\"n\">updated_protein</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "protkit.tools.reduce_adaptor.ReduceAdaptor.protonate", "modulename": "protkit.tools.reduce_adaptor", "qualname": "ReduceAdaptor.protonate", "kind": "function", "doc": "<p>Protonate a protein using the Reduce software.</p>\n\n<p>Args:\n    protein (Protein): The protein to be protonated.\n    reduce_output_pdb_file_path (str): If set, the protonated PDB file\n        as produced by Reduce will be saved to this path.</p>\n\n<p>Returns:\n    Protein: The protonated protein.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">protein</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span>,</span><span class=\"param\">\t<span class=\"n\">reduce_output_pdb_file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span>:</span></span>", "funcdef": "def"}, {"fullname": "protkit.tools.reduce_adaptor.ReduceAdaptor.deprotonate", "modulename": "protkit.tools.reduce_adaptor", "qualname": "ReduceAdaptor.deprotonate", "kind": "function", "doc": "<p>Deprotonate a protein using the Reduce software.</p>\n\n<p>Args:\n    protein (Protein): The protein to be deprotonated.\n    reduce_output_pdb_file_path (str): If set, the deprotonated PDB file\n        as produced by Reduce will be saved to this path.</p>\n\n<p>Returns:\n    Protein: The deprotonated protein.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">protein</span><span class=\"p\">:</span> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span>,</span><span class=\"param\">\t<span class=\"n\">reduce_output_pdb_file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">protkit</span><span class=\"o\">.</span><span class=\"n\">structure</span><span class=\"o\">.</span><span class=\"n\">protein</span><span class=\"o\">.</span><span class=\"n\">Protein</span>:</span></span>", "funcdef": "def"}];

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();